/*
List of current tweaks with corresponding TweakData entries:

TweakData(x, 0) = "UI Tweaks"
TweakData(0, 0) = "Show Enchant Strength With Objet of Heart."
TweakData(1, 0) = "Allow Spell Tracking."
TweakData(2, 0) = "Add Potentials To Skill Tracker."
TweakData(3, 0) = "Filter Skill Tracker By Potential."
TweakData(4, 0) = "Show Spell Stock In Tracker."
TweakData(50, 0) = "Display Pickpocket shortcut."
TweakData(51, 0) = "Report museum duplicates."

TweakData(x, 1) = "Convenience Tweaks"
TweakData(0, 1) = "Add Feed Option For Pets."
TweakData(1, 1) = "Can Change Item Sprites In Home."
TweakData(2, 1) = "Highlight/Filter Items."
TweakData(3, 1) = "Re-parse ItemList.txt values."
TweakData(50,1) = "Throw potion at self with [t]."
TweakData(51,1) = "Allow running in world map."
TweakData(52,1) = "Option to reload last save after death."
TweakData(53,1) = "Skip skill training confirmation."
TweakData(54,1) = "Auto-drop opened chests."
TweakData(55, 1) = "Remove spell over-cast confirmation."
TweakData(56, 1) = "Auto Hand-in quests."
TweakData(57, 1) = "Sort spells by thier type."

TweakData(x, 2) = "Gameplay Tweaks"
TweakData(0, 2) = "Gather Items At End Of Party Time."
TweakData(1, 2) = "Pets Heal Other Pets."
TweakData(2, 2) = "Share Gold For Group Performance."
TweakData(3, 2) = "Pets die permanently in Loss Mode."
TweakData(4, 2) = "Re-enable save-scumming."
TweakData(5, 2) = "Bash all fruit."
TweakData(6, 2) = "Organize ranch produce."
TweakData(50, 2) = "Everything must go!"
TweakData(51, 2) = "Disable Deep-Sea Castle persistance."
TweakData(52, 2) = "Sandbag training."
TweakData(53, 2) = "No naps while traveling."
TweakData(54, 2) = "Harvest Moon Mode for ranches."
TweakData(55, 2) = "Revert post-1.90 experience formula changes."
TweakData(56, 2) = "Disable study days."
TweakData(57, 2) = "Disable DESTINY."
TweakData(58, 2) = "(Custom-G) Disable thirst."
TweakData(59, 2) = "(Custom-G) Disable Curtain Call."
TweakData(60, 2) = "(Custom-G) Disable chain attacks."
TweakData(61, 2) = "(Custom-G) Disable sleep prevention."
TweakData(62, 2) = "(Custom-G) Apply skill buffs."
TweakData(63, 2) = "(Custom-G) Apply damage calculation buffs."
TweakData(64, 2) = "Summoned monster training."
TweakData(65, 2) = "No stamina depletion when using stairs in Your Home."
TweakData(66, 2) = "Increased limit to daily pet arena match attempts."
TweakData(67, 2) = "Increased variety of hireable home servants."
TweakData(68, 2) = "Disable stamina depletion when attacking."
TweakData(69, 2) = "Revert post-2.13 experience formula changes."
TweakData(70, 2) = "Disable urination from fear."
TweakData(71, 2) = "Use CGX Map Layouts in Random Nefia."
TweakData(72, 2) = "Use CGX Job Quests."
TweakData(73, 2) = "Disable Random CNPC spawn."
TweakData(74, 2) = "Use summoning crystals to summon Custom NPCs."
TweakData(75, 2) = "Revert post-2.17 skill exp formula changes."
TweakData(76, 2) = "Make necromancy minions actively seek out enemies like pets do."
TweakData(77, 2) = "Spawn evolved enemies in: "
TweakData(78, 2) = "Collect kits instead of socks in Urcaguary quest."
TweakData(79, 2) = "Revert post-2.17 cooking result changes."
TweakData(80, 2) = "Revert post-2.17 boss out-of-sight healing."
TweakData(81, 2) = "Increase Dojo EXP gained."
TweakData(82, 2) = "Child, you must go!"
TweakData(82, 2) = "Enable moongate/rune loot."
TweakData(83, 2) = "Revert post-2.20 ranged damage formula."

TweakData(x, 3) = "AI Tweaks"
TweakData(0, 3) = "Change Zeome's AI."
TweakData(1, 3) = "Increased drinking/brawling chance during parties."

TweakData(x, 4) = "Miscellaneous Tweaks"
TweakData(0, 4) = "Enable Random Start For MP3."
TweakData(1, 4) = "Display Weather Everywhere."
TweakData(2, 4) = "Confirm Reload With F2."
TweakData(3, 4) = "Prevent home stayers from moving."
TweakData(50, 4) = "Fist of the North Star Mode."
TweakData(51, 4) = "Disable cicada noises."
TweakData(52, 4) = "Faster Fishing Animations."
TweakData(53, 4) = "Use CGX Arrow/Bolt/Ball Spell Animation."
TweakData(54, 4) = "Display Day/Night Cycle Everywhere."
*/

*TweakMenu
    cs = 0
	cs_bk = -1
    cs_bk2 = -1
    page = 0
    pagebk = 0
*TweakMenu_loop
	pagesize = 0
    listmax = 8
    pagemax = 0
    page = pagebk
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, 0) = "UI Tweaks"
	listn(0, 1) = "Convenience Tweaks"
	listn(0, 2) = "AI Tweaks"
	listn(0, 3) = "Gameplay Tweaks"
	listn(0, 4) = "Extra Gameplay Tweaks"
	listn(0, 5) = "Challenge Tweaks"
	listn(0, 6) = "Miscellaneous Tweaks"
	listn(0, 7) = "Exit"
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	repeat listmax
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop

	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat listmax
		if ( listn(0, cs) == listn(0, cnt) ) {
			if ( cnt == 0 ) {
				s = "Toggle tweaks that target UI functions."
			}
			if ( cnt == 1 ) {
				s = "Toggle tweaks that make things more convenient."
			}
			if ( cnt == 2 ) {
				s = "Toggle tweaks that modify the AI of NPCs."
			}
			if ( cnt == 3 ) {
				s = "Toggle tweaks that reverts some of the gameplay mechanics."
			}
			if ( cnt == 4 ) {
				s = "Toggle tweaks that introduces extra game options."
			}
			if ( cnt == 5 ) {
				s = "Toggle tweaks that makes your life harder."
			}
			if ( cnt == 6 ) {
				s = "Toggle tweaks that don't fall into any other category."
			}
			if ( cnt == 7 ) {
				s = "Exit the menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	cs_bk = cs
	cs_bk2 = cs
    pagebk = page
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop
    repeat
        if ( p == 0 ) {
            snd SOUNDLIST_OK1
            gosub *UITweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( p == 1 ) {
            snd SOUNDLIST_OK1
            gosub *ConvenienceTweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( p == 2 ) {
            snd SOUNDLIST_OK1
            gosub *AITweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( p == 3 ) {
            snd SOUNDLIST_OK1
            gosub *GameplayTweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( p == 4 ) {
            snd SOUNDLIST_OK1
            gosub *GameplayExtraTweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( p == 5 ) {
            snd SOUNDLIST_OK1
            gosub *ChallengeTweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( p == 6 ) {
            snd SOUNDLIST_OK1
            gosub *MiscTweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( p == 7 ) {
            snd SOUNDLIST_OK1
            gosub *screen_draw
            goto *pc_turn
        }
        if ( key == key_cancel ) {
            gosub *screen_draw
            goto *pc_turn
        }
        break
    loop
	goto *TweakMenu_loop

*UITweakMenu
    cs = 0
	page = 0
	pagesize = 16
	listmax = 10
*UITweakMenu_pgchk
	redraw 0
	page_check
*UITweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, 0) = "Show Enchant Strength With Objet of Heart. (Currently: " + TweakData(TWEAK_UI_SHOW_ENCHANT_STRENGTH, TWEAK_CATEGORY_UI) + ")"
	listn(0, 1) = "Allow Spell Tracking." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_SPELL_TRACKING)
	listn(0, 2) = "Add Potentials To Skill Tracker." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER)
	listn(0, 3) = "Filter Skill Tracker By Potential." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL)
	listn(0, 4) = "Show Spell Stock In Tracker." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER)
	listn(0, 5) = "Highlight/Filter Items. (Currently: " + TweakData(TWEAK_CONVENIENCE_HIGHLIGHT_FILTER, TWEAK_CATEGORY_CONVENIENCE) + ")"
	listn(0, 6) = "Re-parse ItemList.txt."
	listn(0, 7) = "Report museum duplicates." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_REPORT_MUSEUM_DUPLICATES)
	listn(0, 8) = "Draw stamina bar." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_DRAW_STAMINA_BAR)

	listn(0, listmax - 1) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, p), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( cs == cnt ) {
			s = ""
			if ( p == 0 ) {
				s = "When examining items while holding the Objet of Heart, the strength\nof enchantments on the item will be shown.\n0 = Don't Show, 1 = Show For Enchants w/Level, 2 = Show All"
			}
			if ( p == 1 ) {
				s = "Spells can be added to the skill tracker in the same manner as skills."
			}
			if ( p == 2 ) {
				s = "All items in the skill tracker will also display their current potential."
			}
			if ( p == 3 ) {
				s = "Tracked skills/abilities will not display unless their potential is\nequal to or below a certain threshold."
			}
			if ( p == 4 ) {
				s = "Tracked spells will also display their spell stock."
			}
			if ( p == 5 ) {
				s = "Configure your highlighting/filtering choice.\n0 = No Highlight, 1 = Highlight and Mark Items, 2 = Only Show Highlighted Items"
			}
			if ( p == 6 ) {
				s = "Reload the ItemList.txt file, used to enable highlighting and filtering for items."
			}
			if ( p == 7 ) {
				s = "Reports x/y positions of duplicated cards and figurines when the museum updates."
			}
			if ( p == 8 ) {
				s = "Draw stamina bar instead of just displaying like Sp 12/23.\nIt's using the yellow (gauge) bar below health in interface.bmp.\nIf it looks weird check if your beautify does anything to that."
			}

			if ( p == listmax - 1 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop
	if ( p == 0 ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_SHOW_ENCHANT_STRENGTH
		ts = 1
		tm = 2
		gosub *IncrementTweak
	}
	if ( p == 1 ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_SPELL_TRACKING
		gosub *ToggleTweak
	}
	if ( p == 2 ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER
		gosub *ToggleTweak
	}
	if ( p == 3 ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL
		ts = 10 // Increments by
		tm = 400 // Max
		gosub *IncrementTweak
	}
	if ( p == 4 ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER
		gosub *ToggleTweak
	}
	if ( p == 5 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_HIGHLIGHT_FILTER
		ts = 1 // Increments by
		tm = 2 // Max (0, 1, 2)
		gosub *IncrementTweak
	}
	if ( p == 6 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_REPARSE_ITEMLIST
		gosub *Load_Item_Highlights
	}
	if ( p == 7 ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_REPORT_MUSEUM_DUPLICATES
		gosub *ToggleTweak
	}
	if ( p == 8 ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_DRAW_STAMINA_BAR
		gosub *ToggleTweak
	}
	
	if ( p == listmax - 1 ) {
		snd SOUNDLIST_OK1
		return
	}
	page_change *UITweakMenu_pgchk
	if ( key == key_cancel ) {
		return
	}
	goto *UITweakMenu_loop

#defcfunc GetTStatus int TweakCategory, int TweakNumber
	if ( TweakData(TweakNumber, TweakCategory) == 0 ) {
		return " (Currently: Off)"
	}
	if ( TweakCategory == TWEAK_CATEGORY_MISC ) & ( TweakNumber == 50 ) {
		if ( TweakData(TweakNumber, TweakCategory) == 1 ) {
			return " (Currently: Japanese)"
		}
		if ( TweakData(TweakNumber, TweakCategory) == 2 ) {
			return " (Currently: English)"
		}
		else {
			return " (Currently: Romanji)"
		}
	}
	if ( TweakCategory == TWEAK_CATEGORY_GAMEPLAY ) & ( TweakNumber == 77 ) {
		if ( TweakData(TweakNumber, TweakCategory) == 1 ) {
			return " (Currently: Awakened Random Nefias)"
		}
		if ( TweakData(TweakNumber, TweakCategory) == 2 ) {
			return " (Currently: All Random Nefias)"
		}
		if ( TweakData(TweakNumber, TweakCategory) == 3 ) {
			return " (Currently: Everywhere)"
		}
		else {
			return " (Currently: None)"
		}
	}
	if ( TweakData(TweakNumber, TweakCategory) == 1 ) {
		return " (Currently: On)"
	}
	if ( TweakData(TweakNumber, TweakCategory) > 1 ) {
		return " (Currently: " + TweakData(TweakNumber, TweakCategory) + ")"
	}
	return " FAILED"

#defcfunc GetTStatusProgress int TweakCategory, int TweakNumber, str TweakDesc
	if ( TweakData(TweakNumber, TweakCategory) == 0 ) {
		return " (Currently: Off)"
	}
	if ( TweakData(TweakNumber, TweakCategory) == 1 ) {
		return " (Currently: On)"
	}
	if ( TweakData(TweakNumber, TweakCategory) > 1 ) {
		return " (Currently: " + (TweakData(TweakNumber, TweakCategory) - 1) + " " + TweakDesc + ")"
	}
	return " (Currently: FAILED)"

*ToggleTweak
    snd SOUNDLIST_OK1
	if ( TweakData(tn, tc) == 0 ) {
		TweakData(tn, tc) = 1
	}
	else {
		TweakData(tn, tc) = 0
	}
	return

*ToggleTweakChallenge
	msg_newline
	if ( TweakData(tn, tc) <= 0 ) {
		txt "This is a challenge tweak. Are you sure to enable this?"
		promptYesNo
		if ( rtval == 0 ) {
			snd SOUNDLIST_OK1
			TweakData(tn, tc) = 1
		}
	}
	else {
		txt "This will end the challenge and reset progress. Are you sure to disable this?"
		promptYesNo
		if ( rtval == 0 ) {
			snd SOUNDLIST_OK1
			TweakData(tn, tc) = 0
		}
	}
	return

*IncrementTweak
    snd SOUNDLIST_OK1
	TweakData(tn, tc) += ts
	if ( TweakData(tn, tc) > tm ) {
		TweakData(tn, tc) = 0
	}
	return

*ConvenienceTweakMenu
    cs = 0
	page = 0
	pagesize = 16
    listmax = 18
*ConvenienceTweakMenu_pgchk
	redraw 0
	page_check
*ConvenienceTweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, 0) = "Add Feed Option For Pets." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_FEED_OPTION_PETS)
	listn(0, 1) = "Can Change Item Sprites In Home." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME)
	listn(0, 2) = "Display Pickpocket shortcut." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_DISPLAY_PICKPOCKET_SHORTCUT)
	listn(0, 3) = "Gather Items At End Of Party Time." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME)
	listn(0, 4) = "Share Gold For Group Performance." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD)
	listn(0, 5) = "Bash all fruit." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_BASH_ALL_FRUIT)
	listn(0, 6) = "Organize ranch produce." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_ORGANIZE_RANCH)
	listn(0, 7) = "Everything must go!" + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_EVERYTHING_MUST_GO)
	listn(0, 8) = "Throw potion at self with [t]." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_THROW_POTION_AT_SELF)
	listn(0, 9) = "Allow running in world map." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_ALLOW_RUNNING_IN_WORLD_MAP)
	listn(0, 10) = "Skip skill training confirmation." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_SKIP_SKILL_TRAINING_CONFIRMATION)
	listn(0, 11) = "Auto-drop opened chests." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_AUTODROP_OPENED_CHESTS)
	listn(0, 12) = "Remove spell over-cast confirmation." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_REMOVE_SPELL_OVER_CAST_CONFIRMATION)
	listn(0, 13) = "Auto Hand-in quests." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_AUTO_HANDIN_QUESTS)
	listn(0, 14) = "Sort spells by spell type." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_SORT_SPELL_BY_TYPE)
	listn(0, 15) = "Necromancy zombies goes inside DD-Cemetry when they die." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_NECROMANCY_DD_AUTOSTORE)
	listn(0, 16) = "Allow leashing temporary allies." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_LEASH_MY_ALLIES)

	listn(0, listmax - 1) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, p), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( cs == cnt ) {
			s = ""
			if ( p == 0 ) {
				s = "Adds a Feed option that works like Give but that filters out non-food items when\ninteracting with pets. Also allows for feeding pets raw equipment."
			}
			if ( p == 1 ) {
				s = "Adds a new menu item to blacksmiths in your home that allows you to change\nitem sprites like at Garok."
			}
			if ( p == 2 ) {
				s = "Adds a \"Yes/No\" dialogue box when attempting to pick up items that do\nnot belong to you outside of quests and moongates."
			}
			if ( p == 3 ) {
				s = "When a Party Time! quest ends, you will be presented with a list of items on the\nfloor that you can take."
			}
			if ( p == 4 ) {
				s = "When performing an ensemble with pets, your pets will receive a portion\nof all gold earned."
			}
			if ( p == 5 ) {
				s = "Bash all fruit out of fruit trees in one go."
			}
			if ( p == 6 ) {
				s = "Better organize the ranch by collecting all ranch produce in one spot (x17 y14)."
			}
			if ( p == 7 ) {
				s = "Allows shops to sell furniture, red books, and deeds. Registers,\nshop strongboxes, shelters, and unique items still won't be sold."
			}
			if ( p == 8 ) {
				s = "Adds potions to the [t]ool menu.\nUsing a potion with this tweak enabled throws it at your tile."
			}
			if ( p == 9 ) {
				s = "Allows running in the world map by holding Shift."
			}
			if ( p == 10 ) {
				s = "Skips the confirmation when spending platinum coins on skill training."
			}
			if ( p == 11 ) {
				s = "Automatically drops empty chests after they've been opened."
			}
			if ( p == 12 ) {
				s = "Removes confirmation window when over-casting spells."
			}
			if ( p == 13 ) {
				s = "Automatically hand-in quests after you complete them.\nThis applies to harvest/hunt/trap/party/panic/challenge quests."
			}
			if ( p == 14 ) {
				s = "Sort spells by spell type."
			}
			if ( p == 15 ) {
				s = "Necromancy zombies goes into DD-Cemetery when they return.\nThis only activates if you are holding a DD-Cemetery Key.\nThis includes: Pushback/Undead-Return/Killed/Necro-Fusion/Placement-Failure.\nAlso gives Necro-Force a Summon-From-DD-Cemetery option."
			}
			if ( p == 16 ) {
				s = "Allow leashing temporary allies."
			}

			if ( p == listmax - 1 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop
	if ( p == 0 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_FEED_OPTION_PETS
		gosub *ToggleTweak
	}
	if ( p == 1 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME
		gosub *ToggleTweak
	}
	if ( p == 2 ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_DISPLAY_PICKPOCKET_SHORTCUT
		gosub *ToggleTweak
	}
	if ( p == 3 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME
		gosub *ToggleTweak
	}
	if ( p == 4 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD
		gosub *ToggleTweak
	}
	if ( p == 5 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_BASH_ALL_FRUIT
		gosub *ToggleTweak
	}
	if ( p == 6 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_ORGANIZE_RANCH
		gosub *ToggleTweak
	}
	if ( p == 7 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_EVERYTHING_MUST_GO
		gosub *ToggleTweak
	}
	if ( p == 8 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_THROW_POTION_AT_SELF
		gosub *ToggleTweak
	}
	if ( p == 9 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_ALLOW_RUNNING_IN_WORLD_MAP
		gosub *ToggleTweak
	}
	if ( p == 10 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_SKIP_SKILL_TRAINING_CONFIRMATION
		gosub *ToggleTweak
	}
	if ( p == 11 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_AUTODROP_OPENED_CHESTS
		gosub *ToggleTweak
	}
	if ( p == 12 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_REMOVE_SPELL_OVER_CAST_CONFIRMATION
		gosub *ToggleTweak
	}
	if ( p == 13 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_AUTO_HANDIN_QUESTS
		gosub *ToggleTweak
	}
	if ( p == 14 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_SORT_SPELL_BY_TYPE
		gosub *ToggleTweak
	}
	if ( p == 15 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_NECROMANCY_DD_AUTOSTORE
		gosub *ToggleTweak
	}
	if ( p == 16 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_LEASH_MY_ALLIES
		gosub *ToggleTweak
	}
	
	// if ( p == listmax - 1 ) {
	// 	snd SOUNDLIST_OK1
	// 	return
	// }
	page_change *ConvenienceTweakMenu_pgchk
	if ( key == key_cancel ) {
        return
	}
	goto *ConvenienceTweakMenu_loop

*GameplayTweakMenu
    cs = 0
    page = 0
    pagesize = 16
    listmax = 31
*GameplayTweakMenu_pgchk
	redraw 0
	page_check
*GameplayTweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint2 + strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, 0) = "Re-enable save-scumming." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING)
	listn(0, 1) = "Enable rare-loot trigger permanently." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_RARE_LOOT_TRIGGER)
	listn(0, 2) = "Confirm Reload With F2." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_CONFIRM_RELOAD_F2)
	listn(0, 3) = "Option to reload last save after death." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_RELOAD_AFTER_DEATH_OPTION)

	listn(0, 4) = "=== Gameplay Mechanics changes ==="
	listn(0, 5) = "Disable Harvest Moon Mode for ranches." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_HARVEST_MOON_RANCH)
	listn(0, 6) = "(Custom-G) Disable chain attacks." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_DISABLE_CHAIN_ATTACKS)
	listn(0, 7) = "(Custom-G) Disable thirst." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_DISABLE_THIRST)
	listn(0, 8) = "Disable urination from fear." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_URINATION_FROM_FEAR)
	listn(0, 9) = "Disable stamina depletion when attacking." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_ATTACK_STAMINA_DEPLETION)
	listn(0, 10) = "Disable depletion when using stairs in Your Home." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_HOME_STAIRS_NO_STAMINA_USAGE)
	listn(0, 11) = "Revert post-2.17 cooking result changes." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_REVERT_POST_217_COOKING_CHANGES)
	listn(0, 12) = "Revert post-2.17 boss out-of-sight healing." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_REVERT_POST_217_BOSS_HEALING)
	
	listn(0, 13) = "=== EXP/Progression related changes ==="
	listn(0, 14) = "Sandbag training." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_SANDBAG_TRAINING)
	listn(0, 15) = "Summoned monster training." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_SUMMONED_MONSTER_TRAINING)
	listn(0, 16) = "Increase Dojo EXP gain: " + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_INCREASED_DOJO_EXP) + "% increase."
	listn(0, 17) = "Revert post-1.90 weapon skill exp formula changes." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_REVERT_POST_190_EXP_CHANGES)
	listn(0, 18) = "Disable study days (triple skill exp)" + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS)
	listn(0, 19) = "Disable DESTINY." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_DESTINY)
	listn(0, 20) = "Revert post-2.13 combat exp formula changes." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_REVERT_POST_213_EXP_CHANGES)
	listn(0, 21) = "Revert post-2.17 skill exp formula changes." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_REVERT_POST_217_EXP_CHANGES)
	
	listn(0, 22) = "=== Anti-powergaming/Misc changes ==="
	listn(0, 23) = "(Custom-G) Disable Curtain Call." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_DISABLE_CURTAIN_CALL)
	listn(0, 24) = "(Custom-G) Disable skill SP cost nerfs." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_REVERT_SKILL_NERFS)
	listn(0, 25) = "(Custom-G) Disable multi-attack-critical nerfs." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_REVERT_DAMAGE_CALC_NERFS)
	listn(0, 26) = "(Custom-G) Disable sleep prevention." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_DISABLE_SLEEP_PREVENTION)
	listn(0, 27) = "(Custom-G) Disable naps while traveling." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_NO_NAPS_WHILE_TRAVELING)
	listn(0, 28) = "Disable Deep-Sea Castle persistance." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_DEEP_SEA_CASTLE_PERSISTENCE)
	listn(0, 29) = "Child, you must go!" + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_GO_CHILD)

	listn(0, listmax - 1) = "Go back."

	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, p), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop

	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( cs == cnt ) {
			s = ""
			if ( p == 0 ) {
				s = "Disables autosaving, re-enables F2 save reloading.\nThis also disables rare loot trigger."
			}
			if ( p == 1 ) {
				s = "Disables rare loot trigger system (Enable the trigger permanently).\nThis allow rare items obtainable during first 10 minute of gameplay."
			}
			if ( p == 2 ) {
				s = "Causes a popup to appear when pressing the F2 key."
			}
			if ( p == 3 ) {
				s = "Adds an option to the death menu for reloading from the previous save.\nIf \"Confirm Reload With F2\" is enabled, you will be warned when playing in a mode\nwith a save penalty."
			}
			
			if ( p == 5 ) {
				s = "Revert Ano's ranch content after version 1.89. Example: \nLivestock can randomly become sick, are born unable to be milked, etc.\n\nIt is disabled by default before CGX 2.21.2.0."
			}
			if ( p == 6 ) {
				s = "Disables the chain attacks mechanic.\nThis reduces the damage dealt by sequential attacks within the attacker's turn."
			}
			if ( p == 7 ) {
				s = "Disables the thirst mechanic.\nThis allows you to survive without drinking, and also disables the passive\nstamina regeneration that the \"Wetting\" condition provides."
			}
			if ( p == 8 ) {
				s = "Prevents characters from urinating when they are afflicted with fear."
			}
			if ( p == 9 ) {
				s = "Disables stamina depletion when attacking or casting spells."
			}
			if ( p == 10 ) {
				s = "Using stairs in Your Home will not deplete stamina."
			}
			if ( p == 11 ) {
				s = "Reverts changes to the cooking product after version 2.17. \nCooking will give extra product at cooking lvl 100 and lvl 200. \nBut will no longer gave extra enchant or enhance values. \nOn-eat changes to +enhance post 2.17 do not apply."
			}
			if ( p == 12 ) {
				s = "Disable the <{enemy}> self-heal anti-cheese mechanics after version 2.17. \nThis does not apply to creatures like Megamole/Talpidae/Aile."
			}

			if ( p == 14 ) {
				s = "Sandbagged monsters will give experience."
			}
			if ( p == 15 ) {
				s = "Summoned monsters and monsters that split up will give experience."
			}
			if ( p == 16 ) {
				s = "Increase Dojo EXP gain. \nDojo EXP is gained by traveling on world map, at ~3.5 EXP per tile.\nWhile slightly higher than travel EXP, it may be underwhelming for \nthose who doesn't visit Dojo very often."
			}
			if ( p == 17 ) {
				s = "Reverts changes to the weapon skill experience formula after version 1.90.\nThis mainly addresses the three-fold increase in player weapon skill exp gain.\nIt does not change the study day triple exp bonus."
			}
			if ( p == 18 ) {
				s = "Disables the \"study day bonus\" feature.\nThis will prevent certain skills from gaining triple skill experience based on the\nstudy day type."
			}
			if ( p == 19 ) {
				s = "Disables the \"DESTINY\" feature.\nThis restores the chances of godly equipment being generated, regardless of\nDESTINY triggers."
			}
			if ( p == 20 ) {
				s = "Reverts changes to the killing experience formula after version 2.13.\nAddresses \"increased EXP multipliers when defeating enemies above the PC's level\".\nToggling this also reverts the changes to the taxation mechanic."
			}
			if ( p == 21 ) {
				s = "Reverts changes to the skill experience formula after version 2.17.\nThis will lock your growth rate at 400% (100% compared to growth in 2.17)."
			}

			if ( p == 23 ) {
				s = "Disables the Curtain Call mechanic.\nThis is an anti-AFK mechanism intended to prevent farming. It spawns instant-kill\nenemies if you attack 10,000 times within the same map without leaving."
			}
			if ( p == 24 ) {
				s = "Enables Custom-G's changes to certain skills.\nThis affects Gravity Sphere, Graviton Buster, Violent Garden,\nShadow Step, and some other skills."
			}
			if ( p == 25 ) {
				s = "Enables Custom-G's changes to damage calculation.\nThis affects the damage and critical chance when multi-attacking."
			}
			if ( p == 26 ) {
				s = "Disables the sleep prevention effects caused by coffee and tobacco.\nThey reduce your drowsiness directly as in Version 1.86."
			}
			if ( p == 27 ) {
				s = "Removes the chance to automatically take a nap when traveling while sleepy."
			}
			if ( p == 28 ) {
				s = "Visiting the Deep-Sea Castle only resets items with a cooldown period\nwhile you're there, instead of continuously resetting them until you sleep."
			}
			if ( p == 29 ) {
				s = "Allow you to turn in quests using pets with child-bit-flag.\nNamely: Town Childs / Stray Cats / Little Sisters"
			}

			if ( p == listmax - 1 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop
	if ( p == 0 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING
		gosub *ToggleTweak
		dbg_noautosave = 1 * (TweakData(TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING, TWEAK_CATEGORY_GAMEPLAY) > 0)
	}
	if ( p == 1 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_RARE_LOOT_TRIGGER
		gosub *ToggleTweak
		gdata(GDATA_FLAG_RARE_DROP) = 100 * (TweakData(TWEAK_GAMEPLAY_DISABLE_RARE_LOOT_TRIGGER, TWEAK_CATEGORY_GAMEPLAY) > 0)
	}
	if ( p == 2 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_CONFIRM_RELOAD_F2
		gosub *ToggleTweak
	}
	if ( p == 3 ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_RELOAD_AFTER_DEATH_OPTION
		gosub *ToggleTweak
	}

	if ( p == 5 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_HARVEST_MOON_RANCH
		gosub *ToggleTweak
	}
	if ( p == 6 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_DISABLE_CHAIN_ATTACKS
		gosub *ToggleTweak
	}
	if ( p == 7 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_DISABLE_THIRST
		gosub *ToggleTweak
	}
	if ( p == 8 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_URINATION_FROM_FEAR
		gosub *ToggleTweak
	}
	if ( p == 9 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_ATTACK_STAMINA_DEPLETION
		gosub *ToggleTweak
	}
	if ( p == 10 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_HOME_STAIRS_NO_STAMINA_USAGE
		gosub *ToggleTweak
	}
	if ( p == 11 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_REVERT_POST_217_COOKING_CHANGES
		gosub *ToggleTweak
	}
	if ( p == 12 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_REVERT_POST_217_BOSS_HEALING
		gosub *ToggleTweak
	}
	
	if ( p == 14 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_SANDBAG_TRAINING
		gosub *ToggleTweak
	}
	if ( p == 15 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_SUMMONED_MONSTER_TRAINING
		gosub *ToggleTweak
	}
	if ( p == 16 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_INCREASED_DOJO_EXP
		ts = 100 // Increments by
		tm = 1900 // Max
		gosub *IncrementTweak
	}
	if ( p == 17 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_REVERT_POST_190_EXP_CHANGES
		gosub *ToggleTweak
	}
	if ( p == 18 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS
		gosub *ToggleTweak
	}
	if ( p == 19 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_DESTINY
		gosub *ToggleTweak
		if ( TweakData(TWEAK_GAMEPLAY_DISABLE_DESTINY, TWEAK_CATEGORY_GAMEPLAY) & gdata(GDATA_FLAG_DESTINY_LETTERS) > 0 ) {
			gdata(GDATA_FLAG_DESTINY_LETTERS) = 0
			gdata(GDATA_FLAG_STUDY_BONUS_TRAINING_EXP) = 0
			gdata(GDATA_FLAG_STUDY_BONUS_COMBAT_EXP) = 0
			gdata(GDATA_FLAG_STUDY_BONUS_JOB_EXP) = 0
			gdata(GDATA_FLAG_STUDY_BONUS_EXPLORATION_EXP) = 0
			gdata(GDATA_FLAG_STUDY_BONUS_STUDY_EXP) = 0
			gdata(GDATA_FLAG_DESTINY_NEFIA_BOSSES_DEFEATED) = 0
			gdata(GDATA_FLAG_DESTINY_TIMES_SLEPT) = 0
		}
	}
	if ( p == 20 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_REVERT_POST_213_EXP_CHANGES
		gosub *ToggleTweak
	}
	if ( p == 21 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_REVERT_POST_217_EXP_CHANGES
		gosub *ToggleTweak
	}

	if ( p == 23 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_DISABLE_CURTAIN_CALL
		gosub *ToggleTweak
	}
	if ( p == 24 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_REVERT_SKILL_NERFS
		gosub *ToggleTweak
		gosub *ApplyCGSkillTweak
	}
	if ( p == 25 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_REVERT_DAMAGE_CALC_NERFS
		gosub *ToggleTweak
	}
	if ( p == 26 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_DISABLE_SLEEP_PREVENTION
		gosub *ToggleTweak
	}
	if ( p == 27 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_NO_NAPS_WHILE_TRAVELING
		gosub *ToggleTweak
	}
	if ( p == 28 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_DEEP_SEA_CASTLE_PERSISTENCE
		gosub *ToggleTweak
	}
	if ( p == 29 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_GO_CHILD
		gosub *ToggleTweak
	}

	if ( p == listmax - 1 ) {
		snd SOUNDLIST_OK1
		return
	}
	page_change *GameplayTweakMenu_pgchk
	if ( key == key_cancel ) {
        return
	}
	goto *GameplayTweakMenu_loop

*ApplyCGSkillTweak
	if ( TweakData(TWEAK_GAMEPLAY_CG_REVERT_SKILL_NERFS, TWEAK_CATEGORY_GAMEPLAY) == TRUE ) {
		sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_COOKING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 3, TARGET_TYPE_SELF_ONLY, 0
		sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_FISHING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_SHADOW_STEP) = 5
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_DECAPITATION) = 10
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_READING_PARTY) = 5
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_LOCK_BREAK) = 6
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_VIOLENT_GARDEN) = 22
	}
	else {
		sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_COOKING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF_ONLY, 0
		sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_FISHING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 5, TARGET_TYPE_SELF_ONLY, 0
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_SHADOW_STEP) = 27
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_DECAPITATION) = 30
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_READING_PARTY) = 25
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_LOCK_BREAK) = 30
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_VIOLENT_GARDEN) = 18
	}
	return

*GameplayExtraTweakMenu
	cs = 0
	page = 0
	pagesize = 16
	listmax = 12
*GameplayExtraTweakMenu_pgchk
	redraw 0
	page_check
*GameplayExtraTweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint2 + strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, 0) = "Increased daily Pet Arena attempts. " + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_PET_ARENA_INCREASED_MATCH_LIMIT)
	listn(0, 1) = "Increased variety of hireable home servants." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_MORE_HIREABLE_HOUSE_SERVANTS)
	listn(0, 2) = "Increase mob density in Random Nefias:" + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_INCREASE_NEFIA_MOB_DENSITY) + "% increase."
	listn(0, 3) = "Use CGX Map Layouts in Random Nefia." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_USE_CUSTOM_NEFIA_TYPES) + "% Chance."
	listn(0, 4) = "Use CGX Job Quests." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CUSTOM_JOB_QUESTS)
	listn(0, 5) = "Disable Random Custom NPC spawns." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_RANDOM_CNPC_SPAWN)
	listn(0, 6) = "Use summoning crystals to summon Custom NPCs." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CUSTOM_CNPC_SUMMONING)
	listn(0, 7) = "Spawn evolved enemies in: " + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_SPAWN_EVOLVED_ENEMIES)
	listn(0, 8) = "Collect kits instead of socks in Urcaguary quest." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_ALTERNATE_URCAGUARY_QUEST)
	listn(0, 9) = "Enable loot in Moongate/Rune maps." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_MOONGATE_LOOT)
	listn(0, 10) = "Enable Noa's unused gathering text adventure." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_GATHER_TEXT_ADVENTURE)

	listn(0, listmax - 1) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, p), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( cs == cnt ) {
			s = ""
			if ( p == 0 ) {
				s = "Increases the daily limit of Pet Arena match attempts\nin intervals of 10 and maxing out at 100 a day."
			}
			if ( p == 1 ) {
				s = "Adds more hireable home servants.\nIncludes the baker, fisher, and food vendor.\nAlso increases the number of servants generated."
			}
			if ( p == 2 ) {
				s = "Increase density in random Nefia, result may vary due to mob-room/pack.\n  Default population of low density dungeon (rdtype1): 5~60 average: 23\n  Default population of high density dungeon (rdtype5): 25~110 average: 59\nThis also enforces a 1/64 mob density, +10~30 from mob-room/pack."
			}
			if ( p == 3 ) {
				s = "Uses Custom Map Layouts in Nefia. \nThis replaces the existing mapgen algorithm with the given percentage chance. \nLayouts with no clear path to exit may be generated, you might need to dig walls. \nMob density is 1 mob every 64 tile, +10~20 per monster-room/packs"
			}
			if ( p == 4 ) {
				s = "Delivery quests now marks the item and makes it heavier, but rewards more PP.\nEliminate quests now spawn targets in a group, civilians will also be spawned.\nHarvest quests now reward seeds based on your performance instead.\nPeople throw more music tickets at you during Party Quest."
			}
			if ( p == 5 ) {
				s = "This will disable Random CNPC spawn in all areas except Derphy and Melkawn."
			}
			if ( p == 6 ) {
				s = "Play as a summoner. Summon CNPCS and monsters to help you in battle. \nYou can summon allied CNPCS in dungeons using god's favor, or at Home using PP. \nThis will also change player summoned monsters in dungeons to be allied."
			}
			if ( p == 7 ) {
				s = "Spawn evolved enemies at given locations. \nChance start at 1/1800 chance, caps at area lvl 301 with 1/6 chance.\nEvolution branches chance stack. \nEvolution stages are calculated independently."
			}
			if ( p == 8 ) {
				s = "Urcaguary now accept craft repair kits and material kits instead of socks.\nCraft repair kit count as 1 and material kit count as 2.\nYou still need to find the sock-thief for the first time.\nBut he will drop enough socks for you complete the quest."
			}
			if ( p == 9 ) {
				s = "Custom maps entered via Moongate/Runes now contains loot.\nEnemies drop gold and ores depend on their level.\nContainers can be opened.\nThis won't enable if you enter the Custom Map using Show House."
			}
			if ( p == 10 ) {
				s = "Enable the unused text adventure made by Noa. \nThis affects the material-spot gathering mechanics. \nMaterial/EXP gain is increased compare to Vanilla. \nBut lowered compared to Plus (If your skill is insufficient.)"
			}


			if ( p == listmax - 1 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop

	if ( p == 0 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_PET_ARENA_INCREASED_MATCH_LIMIT
		ts = 10 // Increments by
		tm = 100 // Max
		gosub *IncrementTweak
	}
	if ( p == 1 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_MORE_HIREABLE_HOUSE_SERVANTS
		gosub *ToggleTweak
	}
	if ( p == 2 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_INCREASE_NEFIA_MOB_DENSITY
		ts = 25 // Increments by
		tm = 500 // Max
		gosub *IncrementTweak
	}
	if ( p == 3 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_USE_CUSTOM_NEFIA_TYPES
		ts = 10 // Increments by
		tm = 100 // Max
		gosub *IncrementTweak
	}
	if ( p == 4 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CUSTOM_JOB_QUESTS
		gosub *ToggleTweak
	}
	if ( p == 5 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_RANDOM_CNPC_SPAWN
		gosub *ToggleTweak
	}
	if ( p == 6 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CUSTOM_CNPC_SUMMONING
		gosub *ToggleTweak
	}
	if ( p == 7 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_SPAWN_EVOLVED_ENEMIES
		ts = 1 // Increments by
		tm = 3 // Max
		gosub *IncrementTweak
	}
	if ( p == 8 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_ALTERNATE_URCAGUARY_QUEST
		gosub *ToggleTweak
	}
	if ( p == 9 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_MOONGATE_LOOT
		gosub *ToggleTweak
	}
	if ( p == 10 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_GATHER_TEXT_ADVENTURE
		gosub *ToggleTweak
	}

	if ( p == listmax - 1 ) {
		snd SOUNDLIST_OK1
		return
	}
	page_change *GameplayExtraTweakMenu_pgchk
	if ( key == key_cancel ) {
        return
	}
	goto *GameplayExtraTweakMenu_loop

*AITweakMenu
    cs = 0
	page = 0
	pagesize = 16
	listmax = 8
*AITweakMenu_pgchk
	redraw 0
	page_check
*AITweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, 0) = "Change Zeome's AI." + GetTStatus(TWEAK_CATEGORY_AI, TWEAK_AI_ZEOME)
	listn(0, 1) = "Increased drinking/brawling chance during parties." + GetTStatus(TWEAK_CATEGORY_AI, TWEAK_AI_INCREASED_PARTYTIME_DRUNKENNESS)
	listn(0, 2) = "Prevent home stayers from moving." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_PREVENT_STAYER_MOVEMENT)
	listn(0, 3) = "Pets Heal Other Pets." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_PETS_HEAL_PETS)
	listn(0, 4) = "Necromancy Autotargeting." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_NECROMANCY_ACTIVE_TARGETING)
	listn(0, 5) = "Disable Necro/Summons auto shadow step." + GetTStatus(TWEAK_CATEGORY_AI, TWEAK_AI_DISABLE_NECROMANCY_SHADOWSTEP)
	listn(0, 6) = "Allies acting independently." + GetTStatus(TWEAK_CATEGORY_AI, TWEAK_AI_ALLY_INDEPENDENT_TARGETING)
	
	listn(0, listmax - 1) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, p), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( cs == cnt ) {
			s = ""
			if ( p == 0 ) {
				s = "Changes Zeome's move list and AI to make the fight significantly more difficult."
			}
			if ( p == 1 ) {
				s = "NPC's drink and brawl more during Party Time! Warning: 100% is chaos. "
			}
			if ( p == 2 ) {
				s = "Prevent your home stayers from moving inside your home."
			}
			if ( p == 3 ) {
				s = "Pets with Healing Rain will consider the health of other pets when deciding\nwhether or not to use it. If using custom AI, no effect except\nusage out of combat (requires pet to know it naturally)."
			}
			if ( p == 4 ) {
				s = "Make necromancy minions actively seek out enemies like pets do."
			}
			if ( p == 5 ) {
				s = "Necromancy/Summons shadow steps player when out of sight.\nWhich resets their target very often.\n\nYou can use 'undead call' to pull them back manually."
			}
			if ( p == 6 ) {
				s = "Prevent allies from auto targeting player target.\nPrevent allies from prioritize NPCs attacking players.\nAlso allow NPCs to target NPCs outside of player's sight."
			}

			if ( p == listmax - 1 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop
	if ( p == 0 ) {
		tc = TWEAK_CATEGORY_AI
		tn = TWEAK_AI_ZEOME
		gosub *ToggleTweak
	}
	if ( p == 1 ) {
		tc = TWEAK_CATEGORY_AI
		tn = TWEAK_AI_INCREASED_PARTYTIME_DRUNKENNESS
		ts = 10
		tm = 100
		gosub *IncrementTweak
	}
	if ( p == 2 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_PREVENT_STAYER_MOVEMENT
		gosub *ToggleTweak
	}
	if ( p == 3 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_PETS_HEAL_PETS
		gosub *ToggleTweak
	}
	if ( p == 4 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_NECROMANCY_ACTIVE_TARGETING
		gosub *ToggleTweak
	}
	if ( p == 5 ) {
		tc = TWEAK_CATEGORY_AI
		tn = TWEAK_AI_DISABLE_NECROMANCY_SHADOWSTEP
		gosub *ToggleTweak
	}
	if ( p == 6 ) {
		tc = TWEAK_CATEGORY_AI
		tn = TWEAK_AI_ALLY_INDEPENDENT_TARGETING
		gosub *ToggleTweak
	}
	
	if ( p == listmax - 1 ) {
		snd SOUNDLIST_OK1
		return
	}
	page_change *AITweakMenu_pgchk
	if ( key == key_cancel ) {
		return
	}
	goto *AITweakMenu_loop

*MiscTweakMenu
	cs = 0
	page = 0
	pagesize = 16
	listmax = 10
*MiscTweakMenu_pgchk
	redraw 0
	page_check
*MiscTweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, 0) = "Enable Random Start For MP3." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_RANDOM_START_MP3)
	listn(0, 1) = "Display Weather Everywhere." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_WEATHER_EVERYWHERE)
	listn(0, 2) = "Prevent bump attack." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_PREVENT_BUMP_ATTACK)
	listn(0, 3) = "Fist of the North Star Mode." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_HOKUTO_NO_KEN_MODE)
	listn(0, 4) = "Disable cicada noises." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_DISABLE_CICADA_NOISES)
	listn(0, 5) = "Faster Fishing Animation." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_FASTER_FISHING)
	listn(0, 6) = "Use CGX Arrow/Bolt/Ball Spell Animation." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_CUSTOM_SPELL_ANIMATIONS)
	listn(0, 7) = "Display Day/Night Cycle Everywhere." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_DAYNIGHTCYCLE_EVERYWHERE)
	listn(0, 8) = "Draw Local/World map when using 'map' item." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_USABLE_MAP)

	listn(0, listmax - 1) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, p), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( cs == cnt ) {
			s = ""
			if ( p == 0 ) {
				s = "Will make MP3s start playback from a random point.\nCould cause compatability issues."
			}
			if ( p == 1 ) {
				s = "Weather effects will display in all areas."
			}
			if ( p == 2 ) {
				s = "Prevents you from performing a melee attack when bumping into others."
			}
			if ( p == 3 ) {
				s = "Nani?!"
			}
			if ( p == 4 ) {
				s = "Prevents cicada noises from playing during the summer months."
			}
			if ( p == 5 ) {
				s = "Makes fishing animations much faster. \nAnd instant dimensional fishing with a super lure."
			}
			if ( p == 6 ) {
				s = "Use Custom Animation for Arrow/Bolt/Ball spell animations. \nIf it causes crashes, make sure you have the files in 'graphic/custom_animation' folder."
			}
			if ( p == 7 ) {
				s = "Day/Night will display in all areas.\nSome area will be unnavigably dark like Devil's Cape."
			}
			if ( p == 8 ) {
				s = "Draw a local map / world map when using the 'map' item.\nTiles undiscovered are not shown."
			}
			if ( p == listmax - 1 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop
	
	if ( p == 0 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_RANDOM_START_MP3
		gosub *ToggleTweak
	}
	if ( p == 1 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_WEATHER_EVERYWHERE
		gosub *ToggleTweak
	}
	if ( p == 2 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_PREVENT_BUMP_ATTACK
		gosub *ToggleTweak
	}
	if ( p == 3 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_HOKUTO_NO_KEN_MODE
		ts = 1
		tm = 3
		gosub *IncrementTweak
	}
	if ( p == 4 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_DISABLE_CICADA_NOISES
		gosub *ToggleTweak
	}
	if ( p == 5 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_FASTER_FISHING
		gosub *ToggleTweak
	}
	if ( p == 6 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_CUSTOM_SPELL_ANIMATIONS
		gosub *ToggleTweak
	}
	if ( p == 7 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_DAYNIGHTCYCLE_EVERYWHERE
		gosub *ToggleTweak
	}
	if ( p == 8 ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_USABLE_MAP
		gosub *ToggleTweak
	}
	if ( p == listmax - 1 ) {
		snd SOUNDLIST_OK1
		return
	}
	page_change *MiscTweakMenu_pgchk
	if ( key == key_cancel ) {
        return
	}
	goto *MiscTweakMenu_loop

*ChallengeTweakMenu
    cs = 0
    page = 0
    pagesize = 16
    listmax = 6
*ChallengeTweakMenu_pgchk
	redraw 0
	page_check
*ChallengeTweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	// Challenge tweak uses the dataspace of TWEAK_CATEGORY_AI.
	listn(0, 0) = "Permanent Etherwind." + GetTStatusProgress(TWEAK_CATEGORY_CHALLENGE, TWEAK_CHALLENGE_ALWAYS_ETHERWIND, "Days Survived")
	listn(0, 1) = "Double your tax each month." + GetTStatusProgress(TWEAK_CATEGORY_CHALLENGE, TWEAK_CHALLENGE_DOUBLE_TAX_EACH_MONTH, "Months Paid")
	listn(0, 2) = "Nuke the beggar-cave." + GetTStatusProgress(TWEAK_CATEGORY_CHALLENGE, TWEAK_CHALLENGE_NUKE_BEGGAR_CAVE, "Eleas Obliterated")
	listn(0, 3) = "Make travelling harder." + GetTStatusProgress(TWEAK_CATEGORY_CHALLENGE, TWEAK_CHALLENGE_HARCORE_TRAVELLING, "Miles Travelled")
	listn(0, 4) = "Pets die permanently." + GetTStatusProgress(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_PETS_DIE_PERMANENTLY, "Friends Buried")

	listn(0, listmax - 1) = "Go back."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, p), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( cs == cnt ) {
			s = ""
			if ( p == 0 ) {
				s = "Weather will change into etherwind 100%, but hey, at least it's not raining. \nShelters are closed. Vindale cloaks are sold out. Training time-skips are disabled. \nHead to Lumiest, seek Renton, may the Wind God have mercy on your soul. "
			}
			if ( p == 1 ) {
				s = "You taxes will double each month. You building/hiring cost remain unchanged. \nNot paying tax or using a empty bill will fail the challenge. \nYou tax immunities will be lifted. \nWorry not, your big sister Goddess may help you pay (some) your bills."
			}
			if ( p == 2 ) {
				s = "You can nuke your home again. \nThis will prevent you from entering Vernis until you nuked your cave. \nYou can leave home without triggering main quest. \nNoel quest no longer require 7000 fame."
			}
			if ( p == 3 ) {
				s = "Remove the traveling needs reduction. \nYou get hungry/thirsty/tired on world map like regular maps. \nYou miles travelled (exp/idea gain) on a vehicle won't count."
			}
			if ( p == 4 ) {
				s = "Pets now have permadeath.\nOn the bright side, they now drop figurine and corpses!\n(Only if they have high impression.)"
			}
			if ( p == listmax - 1 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop

	if ( p == 0 ) {
		tc = TWEAK_CATEGORY_CHALLENGE
		tn = TWEAK_CHALLENGE_ALWAYS_ETHERWIND
		gosub *ToggleTweakChallenge
	}
	if ( p == 1 ) {
		tc = TWEAK_CATEGORY_CHALLENGE
		tn = TWEAK_CHALLENGE_DOUBLE_TAX_EACH_MONTH
		gosub *ToggleTweakChallenge
	}
	if ( p == 2 ) {
		tc = TWEAK_CATEGORY_CHALLENGE
		tn = TWEAK_CHALLENGE_NUKE_BEGGAR_CAVE
		gosub *ToggleTweakChallenge
	}
	if ( p == 3 ) {
		tc = TWEAK_CATEGORY_CHALLENGE
		tn = TWEAK_CHALLENGE_HARCORE_TRAVELLING
		gosub *ToggleTweakChallenge
	}
	if ( p == 4 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_PETS_DIE_PERMANENTLY
		gosub *ToggleTweakChallenge
	}

	if ( p == listmax - 1 ) {
		snd SOUNDLIST_OK1
		return
	}
	page_change *ChallengeTweakMenu_pgchk
	if ( key == key_cancel ) {
		return
	}
	goto *ChallengeTweakMenu_loop

*ZeomeCustomAI
	if ( InitZeome == 0 ) {
		TCount1 = 5
		InitZeome = 1
	}

	TCount1++

	; If current mana is less than 95% of max, gain 5% max mana.
	if ( (cdata(CDATA_MP, cc) * 100) / cdata(CDATA_MAX_MP, cc) < 95 ) {
		cdata(CDATA_MP, cc) += cdata(CDATA_MAX_MP, cc)/20
	}

	; Set Target to Player
	tc = CHARA_PLAYER

	; Teleport if low on health & MP & player is closer than 6 spaces.
	if ( (cdata(CDATA_HP, cc) * 100) / cdata(CDATA_MAX_HP, cc) < 30 & (cdata(CDATA_MP, cc) * 100) / cdata(CDATA_MAX_MP, cc) < 20 & dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) < 8 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
		act = SKILL_SPELL_TELEPORT
		efid = act
		npccostmp = 1
		gosub *cast
		if ( stat == 1 ) {
			goto *turn_end
		}
	}

	; Cast Cure of Jua if low on health.
	if ( (cdata(CDATA_HP, cc) * 100)/cdata(CDATA_MAX_HP, cc) < 40 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) & (cdata(CDATA_MP, cc) * 100)/cdata(CDATA_MAX_MP, cc) > 5 ) {
		act = SKILL_SPELL_CURE_OF_JURE
		efid = act
		npccostmp = 1
		gosub *cast
		if ( stat == 1 ) {
			goto *turn_end
		}
	}

	; If Zeome does not have Holy Shield, Feather, Hero, or Attribute Shield, buff all of them at once. Ignore if silenced.
	if ( (findbuff(cc, BUFF_HOLY_SHIELD) == (-1) | findbuff(cc, BUFF_ATTRIBUTE_SHIELD) == (-1) | findbuff(cc, BUFF_FEATHER) == (-1) | findbuff(cc, BUFF_HERO) == (-1)) & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
		tcol@txtfunc = 255, 51, 100
		txt "" + name(cc) + " grins wickedly."

		; Feather
		act = SKILL_SPELL_FEATHER
		efid = act
		npccostmp = 1
		gosub *cast

		; Holy shield
		act = SKILL_SPELL_HOLY_SHIELD
		efid = act
		npccostmp = 1
		gosub *cast

		; Attribute Shield
		act = SKILL_SPELL_ATTRIBUTE_SHIELD
		efid = act
		npccostmp = 1
		gosub *cast

		; Hero
		act = SKILL_SPELL_HERO
		efid = act
		npccostmp = 1
		gosub *cast

		; End Turn
		goto *turn_end
	}

	; See if target has Nightmare; if not, cast it. Ignore if Divine Veil is up or if silenced.
	if ( findbuff(tc, BUFF_NIGHTMARE) == (-1) & findbuff(tc, BUFF_HOLY_VEIL) == (-1) & TCount1 > 4 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
		act = SKILL_SPELL_NIGHTMARE
		efid = act
		npccostmp = 1
		gosub *cast
		if ( stat == 1 ) {
			TCount1 = 0
			goto *turn_end
		}
	}

	; Shadowstep to player if out of melee & in los
	if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) > 1 & fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) ) {

		; 2.19.1.1: 100% shadow step makes him weak, allow Zeome to attack at distance to prevent cheesing
		if ( rnd(3) == 0 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
			; if dist == 2, 1/3 chance to chaos ball.
			if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) == 2 ) {
				act = SKILL_SPELL_SUMMON_MONSTERS
				efid = act
				npccostmp = 1
				gosub *cast
				if ( stat == 1 ) {
					goto *turn_end
				}
			}
			; if dist > 2, 1/18 chance to summon monsters.
			if ( rnd(6) == 0 & dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) > 2 ) {
				act = SKILL_SPELL_SUMMON_MONSTERS
				efid = act
				npccostmp = 1
				gosub *cast
				if ( stat == 1 ) {
					goto *turn_end
				}
			}
		}

		act = SKILL_SPACT_SHADOW_STEP
		efid = act
		gosub *action
		if ( stat == 1 ) {
			goto *turn_end
		}
	}

	; 50% chance for Chaos Ball or Melee when in melee range. 12.5% chance to summon.
	if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) == 1 ) {
		if ( rnd(6) == 0 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
			act = SKILL_SPELL_SUMMON_MONSTERS
			efid = act
			npccostmp = 1
			gosub *cast
			if ( stat == 1 ) {
				goto *turn_end
			}
		}

		if ( rnd(3) == 0 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
			act = SKILL_SPELL_CHAOS_BALL
			efid = act
			npccostmp = 1
			gosub *cast
			if ( stat == 1 ) {
				goto *turn_end
			}
		}
		else {
			gosub *act_melee
			goto *turn_end
		}
	}
	goto *ai_followMove
	return
