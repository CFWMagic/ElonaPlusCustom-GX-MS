#deffunc activatecard int activatecard_arg1, int
	efllistadd 3, 0, card@tcg(TCG_CARD_X, activatecard_arg1), card@tcg(TCG_CARD_Y, activatecard_arg1)
	card@tcg(TCG_CARD_ANIM, activatecard_arg1) = TCG_ANIM_ACTIVATE, 60
	tcgdraw
	return

#deffunc actionchain
	chainmode@tcg = 1
	chaincontinue@tcg = 0
	*actionchain_WHILE1
	tcgdraw
	chaintime@tcg--
	if ( chaintime@tcg == 0 ) {
		goto *actionchain_WEND1
	}
	await 15
	stick a@tcg
	key_check
	repeat 2
		if ( cnt == player@tcg ) {
			if ( key != "" ) {
				snd SOUNDLIST_FAIL1
				chaintime@tcg = 1
				cpisplayer
				cs@tcg = -1
				selectmodebk@tcg = selectmode@tcg
				selectmode@tcg = 2
				gosub *card_player
				selectmode@tcg = selectmodebk@tcg
				break
			}
		}
		else {
			if ( chaintime@tcg == cfg_chaintime / 2 ) {
				if ( cnt != cp@tcg ) {
					cpflip
				}
				gosub *card_ai
				break
			}
		}
	loop
	if ( chaincontinue@tcg ) {
		goto *actionchain_WEND1
	}
	goto *actionchain_WHILE1
	*actionchain_WEND1
	chaintime@tcg = 0
	chainmode@tcg = 0
	cpisme
	return chaincontinue@tcg

#deffunc actionproc
	spellused@tcg = 0
	*actionproc_WHILE1
	// On activate block.
	if ( stack@tcg > 0 ) {
		cc@tcg = cardstack@tcg(TCG_STACK_CARD, stack@tcg - 1)
		if ( spellused@tcg == 0 ) {
			if ( cardstack@tcg(TCG_STACK_ACTION, stack@tcg - 1) == TCG_ACTION_ATTACKING & card@tcg(TCG_CARD_LOCATION, cc@tcg) != TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, cc@tcg) != TCG_LOCATION_HAND ) {
				cardstack@tcg(TCG_STACK_ACTION, stack@tcg - 1) = TCG_ACTION_NONE
				attackingcard@tcg = -1
			}
			if ( cardstack@tcg(TCG_STACK_ACTION, stack@tcg - 1) == TCG_ACTION_ATTACKING ) {
				attackingcard@tcg = cc@tcg
				if ( cp@tcg == TCG_CONTROLLER_PLAYER ) {
					card@tcg(TCG_CARD_Y_MOVETO, cc@tcg) -= 25
				}
				else {
					card@tcg(TCG_CARD_Y_MOVETO, cc@tcg) += 25
				}
				card@tcg(TCG_CARD_STATUS, cc@tcg) = TCG_ACTION_ATTACKING
				if ( cdbit(TCG_BIT_WINDFURY_USABLE, cc@tcg) == TRUE ) {
					cdbitmod TCG_BIT_WINDFURY_USABLE, cc@tcg, 0
				} else {
					cdbitmod TCG_BIT_EXHAUSTED, cc@tcg, 1
				}
				tcgdraw
				attacktarget@tcg = -1
				proctcg "tcg attacking: " + " stack:" + stack@tcg + " card:" + cc@tcg + " target:" + cardstack@tcg(TCG_STACK_EFFECT, stack@tcg - 1)
				if ( cardstack@tcg(TCG_STACK_EFFECT, stack@tcg - 1) >= 0 & cardstack@tcg(TCG_STACK_EFFECT, stack@tcg - 1) < maxcard@tcg ) {
					if ( card@tcg(TCG_CARD_LOCATION, cardstack@tcg(TCG_STACK_EFFECT, stack@tcg - 1)) == TCG_LOCATION_FIELD | card@tcg(TCG_CARD_LOCATION, cardstack@tcg(TCG_STACK_EFFECT, stack@tcg - 1)) == TCG_LOCATION_HAND ) {
						attacktarget@tcg = cardstack@tcg(TCG_STACK_EFFECT, stack@tcg - 1)
						goto *actionproc_DEFENDER_SKIP
					}
				}
				cpisenemy
				chainmode@tcg = 1
				if ( cp@tcg == player@tcg & specialruleaitakeover@tcg <= 0 ) {
					cs@tcg = -1
					repeat clistmax@tcg(cl@tcg)
						c@tcg = clist@tcg(cnt, cl@tcg)
						if ( cdbit(TCG_BIT_EXHAUSTED, c@tcg) == 0 | card@tcg(TCG_CARD_STATUS, c@tcg) == TCG_ACTION_EXHAUSTED ) {
							cs@tcg = cnt
							csline@tcg = cl@tcg
							break
						}
					loop
					selectmode@tcg = 1
					gosub *card_player
					selectmode@tcg = -1
				}
				else {
					aiblock@tcg = 1
					gosub *card_ai
					aiblock@tcg = 0
				}
				chainmode@tcg = 0
				if ( spellused@tcg ) {
					goto *actionproc_WHILE1_CONTINUE
				}
				*actionproc_DEFENDER_SKIP
			}
		}
	}
	stack@tcg--
	if ( stack@tcg < 0 ) {
		goto *actionproc_WEND1
	}
	// On resolve block
	ac@tcg = cardstack@tcg(TCG_STACK_CARD, stack@tcg)
	act@tcg = cardstack@tcg(TCG_STACK_ACTION, stack@tcg)
	ap@tcg = cardstack@tcg(TCG_STACK_CONTROLLER, stack@tcg)
	aeff@tcg = cardstack@tcg(TCG_STACK_EFFECT, stack@tcg)
	aeft@tcg = cardstack@tcg(TCG_STACK_TARGET, stack@tcg)
	aefp@tcg = cardstack@tcg(TCG_STACK_POWER, stack@tcg)
	aite@tcg = cardstack@tcg(TCG_STACK_ITERATION, stack@tcg)
	proctcg "tcg effactivate: " + " stack:" + stack@tcg + " effect:" + aeff@tcg + " ac:" + ac@tcg + " act:" + act@tcg + " aeft:" + aeft@tcg + " aite:" + aite@tcg + " ap:" + ap@tcg
	if ( ap@tcg != cp@tcg ) {
		cpflip
	}
	if ( cardstack@tcg(TCG_STACK_ACTION, stack@tcg) == TCG_ACTION_INVOKING ) {
		act@tcg = card@tcg(TCG_CARD_EFFECT, ac@tcg)
		card@tcg(TCG_CARD_STATUS, ac@tcg) = TCG_ACTION_INVOKING
	}
	if ( aeff@tcg >= 0 & aeff@tcg < 3000 ) {
		aefa@tcg = effref@tcg(TCG_SKILL_ANIME, aeff@tcg)
		aefat@tcg = effref@tcg(TCG_SKILL_ANIME_TARGET, aeff@tcg)
		if ( aefa@tcg > 0 & aefat@tcg > 0 & act@tcg > 0 ) {
			proctcg "tcg anime: " + " aeff:" + aeff@tcg + " anime:" + aefa@tcg + " animetarget:" + aefat@tcg + " stack:" + stack@tcg + " effect:" + aeff@tcg + " ac:" + ac@tcg + " aeft:" + aeft@tcg + " ap:" + ap@tcg + " stack:" + stack@tcg
			if ( aefat@tcg >= TCG_SKILL_TARGET_PLAYER & aefat@tcg <= TCG_SKILL_TARGET_PLAYER_AND_ENEMY ) {
				if ( aeft@tcg == 0 | aeft@tcg == 1) {
					efllistadd aefa@tcg, 0, cpx@tcg(aeft@tcg), cpy@tcg(aeft@tcg)
				}
			}
			if ( aefat@tcg == TCG_SKILL_TARGET_SELF | aefat@tcg == TCG_SKILL_TARGET_SELF_AND_COMBAT_OPPONENT ) {
				if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg & stack@tcg == 0 ) {
					efllistaddcard aefa@tcg, ac@tcg
				}
			}
			if ( aefat@tcg > TCG_SKILL_TARGET_SELF ) {
				if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
					efllistaddcard aefa@tcg, aeft@tcg
				}
			}
		}
	}
	_switch_val@tcg = act@tcg
	if ( _switch_val@tcg == TCG_ACTION_ATTACKING | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( attackingcard@tcg == (-1) ) {
			goto *actionproc_SWEND1
		}
		if ( attacktarget@tcg != (-1) ) {
			forcedcombat@tcg = 0
			if ( aeff@tcg >= 0 & aeff@tcg < maxcard@tcg ) {
				forcedcombat@tcg = (aeff@tcg == attacktarget@tcg)
			}
			if ( forcedcombat@tcg & card@tcg(TCG_CARD_STATUS, attacktarget@tcg) != TCG_ACTION_ATTACKING ) {
				card@tcg(TCG_CARD_STATUS, attacktarget@tcg) = TCG_ACTION_NONE
				cdbitmod TCG_BIT_EXHAUSTED, attacktarget@tcg, 0
			} else {
				if ( cdbit(TCG_BIT_VIGILANCE, attacktarget@tcg) | cdbit(TCG_BIT_DEFENDER, attacktarget@tcg) ) {
					card@tcg(TCG_CARD_STATUS, attacktarget@tcg) = TCG_ACTION_NONE
					cdbitmod TCG_BIT_EXHAUSTED, attacktarget@tcg, 0
				} else {
					card@tcg(TCG_CARD_STATUS, attacktarget@tcg) = TCG_ACTION_DEFENDING
					cdbitmod TCG_BIT_EXHAUSTED, attacktarget@tcg, 1
				}
			}			
			if ( cp@tcg == TCG_CONTROLLER_PLAYER ) {
				card@tcg(TCG_CARD_Y_MOVETO, attacktarget@tcg) += 25
			}
			else {
				card@tcg(TCG_CARD_Y_MOVETO, attacktarget@tcg) -= 25
			}
			tcgdraw
			attacktargetatk@tcg = card@tcg(TCG_CARD_ATTACK, attacktarget@tcg)
			attackingcardatk@tcg = card@tcg(TCG_CARD_ATTACK, attackingcard@tcg)
			if ( cdbit(TCG_BIT_CRITICAL, attacktarget@tcg) & rnd(6) == 0 ) { attacktargetatk@tcg *= 3 }
			if ( cdbit(TCG_BIT_CRITICAL, attackingcard@tcg) & rnd(6) == 0 ) { attackingcardatk@tcg *= 3 }
			if ( cdbit(TCG_BIT_FIRST_STRIKE, attackingcard@tcg) | cdbit(TCG_BIT_DOUBLE_STRIKE, attackingcard@tcg) ) {
				if ( (cdbit(TCG_BIT_TRAMPLE, attackingcard@tcg) | specialrulelifeordeathcombat@tcg) & attackingcardatk@tcg > card@tcg(TCG_CARD_HP, attacktarget@tcg) ) {
					dmgplayer card@tcg(TCG_CARD_CONTROLLER, attacktarget@tcg), attackingcardatk@tcg - card@tcg(TCG_CARD_HP, attacktarget@tcg), TRUE
				}
				if ( cdbit(TCG_BIT_LIFELINK, attackingcard@tcg) ) {
					dmgplayer card@tcg(TCG_CARD_CONTROLLER, attackingcard@tcg), (-1) * limit(attackingcardatk@tcg, 0, card@tcg(TCG_CARD_HP, attacktarget@tcg)), TRUE
				}
				efllistaddcard getcardattackanime(attackingcard@tcg), attacktarget@tcg
				dmgcard attacktarget@tcg, attackingcardatk@tcg + cdbit(TCG_BIT_DEATHTOUCH, attackingcard@tcg) * 999, TRUE
			}
			if ( cdbit(TCG_BIT_FIRST_STRIKE, attacktarget@tcg) | cdbit(TCG_BIT_DOUBLE_STRIKE, attacktarget@tcg) ) {
				if ( cdbit(TCG_BIT_LIFELINK, attacktarget@tcg) ) {
					dmgplayer card@tcg(TCG_CARD_CONTROLLER, attacktarget@tcg), (-1) * limit(attacktargetatk@tcg, 0, card@tcg(TCG_CARD_HP, attackingcard@tcg)), TRUE
				}
				efllistaddcard getcardattackanime(attacktarget@tcg), attackingcard@tcg
				dmgcard attackingcard@tcg, attacktargetatk@tcg + cdbit(TCG_BIT_DEATHTOUCH, attacktarget@tcg) * 999, TRUE
			}
			if ( (card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) == TCG_LOCATION_FIELD | card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) == TCG_LOCATION_HAND) & (card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) == TCG_LOCATION_FIELD | card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) == TCG_LOCATION_HAND) ) {
				attacktargetatk@tcg = card@tcg(TCG_CARD_ATTACK, attacktarget@tcg)
				attackingcardatk@tcg = card@tcg(TCG_CARD_ATTACK, attackingcard@tcg)
				if ( cdbit(TCG_BIT_CRITICAL, attacktarget@tcg) & rnd(6) == 0 ) { attacktargetatk@tcg *= 3 }
				if ( cdbit(TCG_BIT_CRITICAL, attackingcard@tcg) & rnd(6) == 0 ) { attackingcardatk@tcg *= 3 }
				if ( cdbit(TCG_BIT_FIRST_STRIKE, attackingcard@tcg) != TRUE ) {
					if ( (cdbit(TCG_BIT_TRAMPLE, attackingcard@tcg) | specialrulelifeordeathcombat@tcg) & attackingcardatk@tcg > card@tcg(TCG_CARD_HP, attacktarget@tcg) ) {
						dmgplayer card@tcg(TCG_CARD_CONTROLLER, attacktarget@tcg), attackingcardatk@tcg - card@tcg(TCG_CARD_HP, attacktarget@tcg), TRUE
					}
					if ( cdbit(TCG_BIT_LIFELINK, attackingcard@tcg) ) {
						dmgplayer card@tcg(TCG_CARD_CONTROLLER, attackingcard@tcg), (-1) * limit(attackingcardatk@tcg, 0, card@tcg(TCG_CARD_HP, attacktarget@tcg)), TRUE
					}
					efllistaddcard getcardattackanime(attackingcard@tcg), attacktarget@tcg
					dmgcard attacktarget@tcg, attackingcardatk@tcg + cdbit(TCG_BIT_DEATHTOUCH,attackingcard@tcg) * 999, TRUE
				}
				if ( cdbit(TCG_BIT_FIRST_STRIKE, attacktarget@tcg) != TRUE ) {
					if ( cdbit(TCG_BIT_LIFELINK, attacktarget@tcg) ) {
						dmgplayer card@tcg(TCG_CARD_CONTROLLER, attacktarget@tcg), (-1) * limit(attacktargetatk@tcg, 0, card@tcg(TCG_CARD_HP, attackingcard@tcg)), TRUE
					}
					efllistaddcard getcardattackanime(attacktarget@tcg), attackingcard@tcg
					dmgcard attackingcard@tcg, attacktargetatk@tcg + cdbit(TCG_BIT_DEATHTOUCH,attacktarget@tcg) * 999, TRUE
				}
			}
			if ( card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) == TCG_LOCATION_FIELD ) {
				card@tcg(TCG_CARD_Y_MOVETO, attacktarget@tcg) = spotiy@tcg(card@tcg(TCG_CARD_CONTROLLER, attacktarget@tcg))
			}
			if ( card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) == TCG_LOCATION_HAND ) {
				cdbitmod TCG_BIT_FACE_UP, attacktarget@tcg, 1
				card@tcg(TCG_CARD_Y_MOVETO, attacktarget@tcg) = holderiy@tcg(card@tcg(TCG_CARD_CONTROLLER, attacktarget@tcg))
			}
		}
		else {
			efllistadd getcardattackanime(attackingcard@tcg), 0, cpx@tcg(tp@tcg) + 36, cpy@tcg(tp@tcg) + 15
			dmgplayer tp@tcg, card@tcg(TCG_CARD_ATTACK, attackingcard@tcg), TRUE
			if ( cdbit(TCG_BIT_DOUBLE_STRIKE, attackingcard@tcg) ) {
				efllistadd getcardattackanime(attackingcard@tcg), 0, cpx@tcg(tp@tcg) + 36, cpy@tcg(tp@tcg) + 15
				dmgplayer tp@tcg, card@tcg(TCG_CARD_ATTACK, attackingcard@tcg), TRUE
			}
		}
		if ( cdbit(TCG_BIT_EXHAUSTED, attackingcard@tcg) != TRUE ) {
			card@tcg(TCG_CARD_STATUS, attackingcard@tcg) = TCG_ACTION_NONE
		}
		if ( card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) == TCG_LOCATION_FIELD ) {
			card@tcg(TCG_CARD_Y_MOVETO, attackingcard@tcg) = spotiy@tcg(card@tcg(TCG_CARD_CONTROLLER, attackingcard@tcg))
		}
		if ( card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) == TCG_LOCATION_HAND ) {
			cdbitmod TCG_BIT_FACE_UP, attackingcard@tcg, 1
			card@tcg(TCG_CARD_Y_MOVETO, attackingcard@tcg) = holderiy@tcg(card@tcg(TCG_CARD_CONTROLLER, attackingcard@tcg))
		}
		cardpos 0, -1
		cardpos 1, -1
		tcgdraw
		proctcg "tcg combat: attacking:" + attackingcard@tcg + "/attacked:" + attacktarget@tcg
		if ( attacktarget@tcg != (-1) ) {
			if ( card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) == TCG_LOCATION_FIELD & card@tcg(TCG_CARD_ATTACK, attacktarget@tcg) > 0 & cdbit(TCG_BIT_SPLIT, attackingcard@tcg) == TRUE ) {
				effac@tcg = attackingcard@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)
				cardstack@tcg(TCG_STACK, stack@tcg) = attackingcard@tcg, TCG_SKILL_EFF_SPLITSELF, card@tcg(TCG_CARD_CONTROLLER, attackingcard@tcg), 1, 0, 0
				stack@tcg++
				actionproc
				makecardlist
			}
			if ( card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) == TCG_LOCATION_FIELD & card@tcg(TCG_CARD_ATTACK, attackingcard@tcg) > 0 & cdbit(TCG_BIT_SPLIT, attacktarget@tcg) == TRUE ) {
				effac@tcg = attacktarget@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, attacktarget@tcg)
				cardstack@tcg(TCG_STACK, stack@tcg) = attacktarget@tcg, TCG_SKILL_EFF_SPLITSELF, card@tcg(TCG_CARD_CONTROLLER, attacktarget@tcg), 1, 0, 0
				stack@tcg++
				actionproc
				makecardlist
			}
			if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)) & TCG_SKILL_TYPE_AFTERCOMBAT) ) {
				proctcg "tcg proc/aftercombat/attacking: effac:" + attackingcard@tcg + "/eff:" + card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)
				effac@tcg = attackingcard@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)
				gosub *card_action_choose_target
			}
			if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, attacktarget@tcg)) & TCG_SKILL_TYPE_AFTERCOMBAT) ) {
				proctcg "tcg proc/aftercombat/attacked: effac:" + attacktarget@tcg + "/eff:" + card@tcg(TCG_CARD_EFFECT, attacktarget@tcg)
				effac@tcg = attacktarget@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, attacktarget@tcg)
				gosub *card_action_choose_target
			}
			if ( card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) != TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) != TCG_LOCATION_HAND & (card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) == TCG_LOCATION_FIELD | card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) == TCG_LOCATION_HAND) ) {
				if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)) & TCG_SKILL_TYPE_ONKILL) ) {
					proctcg "tcg proc/onkill/attacking: effac:" + attackingcard@tcg + "/eff:" + card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)
					effac@tcg = attackingcard@tcg
					eff@tcg = card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)
					gosub *card_action_choose_target
				}
			}
			if ( card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) != TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, attackingcard@tcg) != TCG_LOCATION_HAND & (card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) == TCG_LOCATION_FIELD | card@tcg(TCG_CARD_LOCATION, attacktarget@tcg) == TCG_LOCATION_HAND) ) {
				if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, attacktarget@tcg)) & TCG_SKILL_TYPE_ONKILL) ) {
					proctcg "tcg proc/onkill/attacked: effac:" + attacktarget@tcg + "/eff:" + card@tcg(TCG_CARD_EFFECT, attacktarget@tcg)
					effac@tcg = attacktarget@tcg
					eff@tcg = card@tcg(TCG_CARD_EFFECT, attacktarget@tcg)
					gosub *card_action_choose_target
				}
			}
		} else {
			if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)) & TCG_SKILL_TYPE_AFTERCOMBAT) ) {
				proctcg "tcg proc/aftercombat/attacking: effac:" + attackingcard@tcg + "/eff:" + card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)
				effac@tcg = attackingcard@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, attackingcard@tcg)
				gosub *card_action_choose_target
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DRAW_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		getrandomcard aeft@tcg
		makecardlist
		tcgdraw
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEAL_PLAYER_DAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			dmgplayer aeft@tcg, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_LASTDANCER | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(0) + getspotsum(1) == 1 ) {
				dmgplayer aeft@tcg, 30
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEALPLAYERDAMAGEPER | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			x@tcg = 0
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -1 ) { 
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == 0 ) { continue }
					if ( card@tcg(TCG_CARD_EFFECT, cnt) != TCG_EFF_NONE ) { continue }
					x@tcg++
				loop
				x@tcg /= 5
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -2 ) { 
				x@tcg = cpdata@tcg(TCG_PLAYER_LIFE, aeft@tcg) - 20
			}
			dmgplayer aeft@tcg, x@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HEAL_PLAYER_DAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			dmgplayer aeft@tcg, (-1) * effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HALVEHEALTH | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			dmgplayer aeft@tcg, cpdata@tcg(TCG_PLAYER_LIFE, aeft@tcg) / 2
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAIN_MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAIN_MANA_NEXT_TURN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			specialrulenextturnmana@tcg(aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAIN_MAX_MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_MAX_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_LITTLE_SISTER | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			cpdata@tcg(TCG_PLAYER_MAX_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
			dmgplayer aeft@tcg, 5
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RYUTYE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( cp@tcg == ap@tcg ) {
				if ( sac@tcg ) {
					sac@tcg = 0
					gravecard aeft@tcg
				} else {
					saccard aeft@tcg, ap@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_NERES | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( cp@tcg == ap@tcg ) {
			sac@tcg = 0
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DRAFT_MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			specialrulenextturnmana@tcg(aeft@tcg) -= effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SAVE_MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) >= effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) ) {
				cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) -= effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
				specialrulenextturnmana@tcg(aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			}
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_LUNE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) >= 1 & getholdersum(aeft@tcg) < 7 ) {
				getrandomcard aeft@tcg
				cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) -= 1
			}
			makecardlist
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RAIZEL | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) >= 9 ) {
				cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) -= 9
				effac@tcg = ac@tcg
				eff@tcg = TCG_EFF_BATTLECRY_DEALEVERYONE9DAMAGE
				gosub *card_action_choose_target
			}
			if ( cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) >= 3 ) {
				cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) -= 3
				effac@tcg = ac@tcg
				eff@tcg = TCG_EFF_BATTLECRY_DEALEVERYONE3DAMAGE
				gosub *card_action_choose_target
			}
			if ( cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) >= 1 ) {
				cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) -= 1
				effac@tcg = ac@tcg
				eff@tcg = TCG_EFF_BATTLECRY_DEALEVERYONE1DAMAGE
				gosub *card_action_choose_target
			}
			makecardlist
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CONTROLLERDRAW1GAIN1 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			getrandomcard card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
			cpdata@tcg(TCG_PLAYER_MANA, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) += 1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ZANANASSASSIN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dmgplayer card@tcg(TCG_CARD_CONTROLLER, aeft@tcg), 2
			if ( getspotsum(1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 8 ) {
				putcard aeft@tcg, 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
			} else {
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				gravecard aeft@tcg
			}
			getrandomcard 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEAL_CREATURE_DAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dmgcard aeft@tcg, effref@tcg(TCG_SKILL_POWER, aeff@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEAL_CREATURE_DAMAGE_ATK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
				dmgcard aeft@tcg, card@tcg(TCG_CARD_ATTACK, ac@tcg)
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HEAL_CREATURE_DAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dmgcard aeft@tcg, (-1) * effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GRAVECARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			efllistadd 1, 0, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg) 
			gravecard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SHOVECARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			etl@tcg = 3 - 3 * card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
			if ( clistmax@tcg(etl@tcg) > 0 ) {
				card@tcg(TCG_CARD_LOCATION, clist@tcg(rnd(clistmax@tcg(etl@tcg)), etl@tcg)) = TCG_LOCATION_GRAVEYARD
			}
			card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
			makecardlist
			cardposgrave -1
			cardposhand 0, -1
			cardposhand 1, -1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SWAPHAND | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		maxswap@tcg = limitmax(clistmax@tcg(0), clistmax@tcg(3))
		repeat maxswap@tcg
			card@tcg(TCG_CARD_CONTROLLER, clist@tcg(cnt, 0)) = 1 - card@tcg(TCG_CARD_CONTROLLER, clist@tcg(cnt, 0))
			card@tcg(TCG_CARD_CONTROLLER, clist@tcg(cnt, 3)) = 1 - card@tcg(TCG_CARD_CONTROLLER, clist@tcg(cnt, 3))
			cdbitmod TCG_BIT_FACE_UP, clist@tcg(cnt, 0), 1
			cdbitmod TCG_BIT_FACE_UP, clist@tcg(cnt, 3), 1
		loop
		makecardlist
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CROSSOUT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			crossoutcontroller@tcg = card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
			crossoutdbid@tcg = card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) == crossoutcontroller@tcg ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_DECK & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_HAND & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_FIELD ) { continue }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == crossoutdbid@tcg ) {
					gravecard cnt
				}
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GRAVERANDOMHAND | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			repeat limit(effref@tcg(TCG_SKILL_POWER, aeff@tcg), 1,10)
				if ( clistmax@tcg(0 + 3 * aeft@tcg) > 0 ) {
					gravecard clist@tcg(rnd(clistmax@tcg(0 + 3 * aeft@tcg)), 0 + 3 * aeft@tcg)
				}
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DUEL | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_ATTACK, ac@tcg) > card@tcg(TCG_CARD_ATTACK, aeft@tcg)) {
					efllistadd 1, 0, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg) 
					gravecard aeft@tcg
				} else {
					if ( card@tcg(TCG_CARD_ATTACK, aeft@tcg) > card@tcg(TCG_CARD_ATTACK, ac@tcg)) {
						efllistadd 1, 0, card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg) 
						gravecard ac@tcg
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_ATTACK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_HP | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 1, TCG_STAT_MAX)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_COST | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_COST, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_COST, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_COST, aeft@tcg), 0, TCG_STAT_MAX)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BLACKCAT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			p@tcg = 0
			target@tcg = -1
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != card@tcg(TCG_CARD_CONTROLLER, effac@tcg) ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_DECK ) { continue }
				if ( rnd(p@tcg + 1) == 0 ) {
					target@tcg = cnt
				}
				p@tcg++
			loop
			if ( p@tcg > 0 & target@tcg > -1 ) {
				x@tcg = card@tcg(TCG_CARD_REF_COST, target@tcg)
				card@tcg(TCG_CARD_REF_COST, target@tcg) = card@tcg(TCG_CARD_REF_COST, aeft@tcg)
				card@tcg(TCG_CARD_COST, target@tcg) = card@tcg(TCG_CARD_COST, aeft@tcg)
				card@tcg(TCG_CARD_REF_COST, aeft@tcg) = x@tcg
				card@tcg(TCG_CARD_COST, aeft@tcg) = x@tcg
				if ( x@tcg != card@tcg(TCG_CARD_REF_COST, target@tcg) ) {
					efllistadd 1, card@tcg(TCG_CARD_REF_COST, target@tcg) - x@tcg, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_ATTACKHP | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 1, TCG_STAT_MAX)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAINATTACKHPREDUCECOST | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) -= effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_COST, aeft@tcg), 0, TCG_STAT_MAX)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_YANDERE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) -= effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_COST, aeft@tcg), 0, TCG_STAT_MAX)
			cdbitmod TCG_BIT_FLEETING, aeft@tcg, 1
			gettargetcard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_ATTACKHPPER | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			x@tcg = 0
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -1 ) { x@tcg = specialrulemanalastturn@tcg }
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -2 ) { 
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == 0 ) { continue }
					if ( card@tcg(TCG_CARD_EFFECT, cnt) != TCG_EFF_NONE ) { continue }
					x@tcg++
				loop
				x@tcg /= 3
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -3 ) { 
				x@tcg = 0, 0, 0, 0, 0, 0, 0, 0
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
					if ( cardn@tcg(TCG_CARDN_REF_RACE, cnt) != "dragon" ) { continue }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, cnt) >= 8 | card@tcg(TCG_CARD_REF_DOMAIN, cnt) < 0 ) { continue }
					x@tcg(card@tcg(TCG_CARD_REF_DOMAIN, cnt)) = 1
				loop
				x@tcg = (x@tcg(0)+x@tcg(1)+x@tcg(2)+x@tcg(3)+x@tcg(6)+x@tcg(7)) * 3
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -4 ) { 
				repeat 20
					if ( card@tcg(TCG_CARD_REF_DBID, 100 * ap@tcg + 39 + cnt) != 0 ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -5 ) { 
				x@tcg = 0, 0, 0, 0, 0, 0, 0, 0
				repeat 60
					if ( card@tcg(TCG_CARD_REF_DOMAIN, cnt) >= 8 | card@tcg(TCG_CARD_REF_DOMAIN, cnt) < 0 ) { continue }
					x@tcg(card@tcg(TCG_CARD_REF_DOMAIN, cnt))++
					x@tcg = limit(x@tcg(0),0,x@tcg(7))
				loop
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -6 ) { 
				repeat 6
					if ( card@tcg(TCG_CARD_REF_DBID, 100 * ap@tcg + 34 + cnt * 5) != 0 ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -7 ) { 
				repeat 100
					if ( card@tcg(TCG_CARD_REF_DBID, 100 * ap@tcg + cnt) != 0 ) { x@tcg++ }
				loop
				x@tcg /= 5
				x@tcg -= 6
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -8 ) { 
				if ( specialrulemanalastturn@tcg(ap@tcg) == 0 ) {
					x@tcg = 1
				}
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -9 ) { 
				if ( specialrulemanalastturn@tcg(ap@tcg) == 0 ) {
					x@tcg = 2
				}
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -10 ) { 
				x@tcg = 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( cardn@tcg(TCG_CARDN_REF_RACE, clist@tcg(cnt, 0+3*ap@tcg)) != "snail" ) { continue }
					x@tcg++
				loop
				x@tcg /= 3
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -11 ) { 
				x@tcg = 0
				inv_getheader 0
				repeat invrange, invhead
					if ( inv(INV_ITEM_NUM, cnt) <= 0 ) { continue }
					if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_MUSIC_TICKET ) { x@tcg += inv(INV_ITEM_NUM, cnt) }
				loop
				x@tcg /= 10000
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -12 ) { 
				x@tcg = cdata(CDATA_PLATINUM, CHARA_PLAYER) / 50
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -13 ) { 
				x@tcg = 1
				p@tcg = cdata(CDATA_GOLD, CHARA_PLAYER)
				repeat 12
					p@tcg /= 10
					if ( p@tcg <= 0 ) { break }
					x@tcg += 1
				loop
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -14 ) { 
				repeat MAX_CHARA_FOLLOWER - 1, 1
					if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_DEAD ) { continue }
					x@tcg++
				loop
				x@tcg /= 3
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -15 ) { 
				x@tcg = 0
				repeat clistmax@tcg(1+ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_LARNNEIRE_THE_LISTENER_OF_WIND ) { x@tcg += 2 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_LOMIAS_THE_MESSENGER_FROM_VINDALE ) { x@tcg += 2 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_RIANNA_THE_DAYDREAMER ) { x@tcg += 2 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_LOYTER_THE_CRIMSON_OF_ZANAN ) { x@tcg += 2 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_ZERNARD_THE_CAPABLE_MERCENARY ) { x@tcg += 2 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_REGULUS_THE_ALTERED ) { x@tcg += 2 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_SOPHIA_THE_WISE ) { x@tcg += 2 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_NORNE_THE_GUIDE ) { x@tcg += 2 }
				loop
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_LARNNEIRE_THE_LISTENER_OF_WIND ) { x@tcg++ }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_LOMIAS_THE_MESSENGER_FROM_VINDALE ) { x@tcg++ }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_RIANNA_THE_DAYDREAMER ) { x@tcg++ }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_LOYTER_THE_CRIMSON_OF_ZANAN ) { x@tcg++ }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_ZERNARD_THE_CAPABLE_MERCENARY ) { x@tcg++ }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_REGULUS_THE_ALTERED ) { x@tcg++ }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_SOPHIA_THE_WISE ) { x@tcg++ }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_NORNE_THE_GUIDE ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -16 ) {
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
					if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_EXILE & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_GRAVEYARD ) { continue }
					if ( cdbit(TCG_BIT_CITIZEN, cnt) ) {
						x@tcg++
					}
				loop
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -17 ) {
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) ) { continue }
					if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_GRAVEYARD ) { continue }
					if ( cardn@tcg(TCG_CARDN_REF_RACE, cnt) == "minotaur" ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == -18 ) {
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) ) { continue }
					if ( cardn@tcg(TCG_CARDN_REF_RACE, cnt) == "minotaur" ) { x@tcg++ }
				loop
			}
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += x@tcg
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += x@tcg
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_HP, aeft@tcg) += x@tcg
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += x@tcg
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 1, TCG_STAT_MAX)
			efllistadd 2, x@tcg, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DYS | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)
			card@tcg(TCG_CARD_HP, aeft@tcg) += card@tcg(TCG_CARD_REF_HP, aeft@tcg)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += card@tcg(TCG_CARD_REF_HP, aeft@tcg)
			efllistadd 2, 2, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HEALTOFULL | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_HP, aeft@tcg) = card@tcg(TCG_CARD_REF_HP, aeft@tcg)
			efllistadd 2, card@tcg(TCG_CARD_REF_HP, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_OVERHEAL | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_HP, aeft@tcg) = card@tcg(TCG_CARD_REF_HP, aeft@tcg)
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg) + 2, 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg) + 2, 1, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) + 2, 0, TCG_STAT_MAX)
			repeat 32, 32
				if ( cnt == TCG_BIT_BLEEDING ) { continue }
				cdbitmod cnt, aeft@tcg, 0
			loop
			if ( cdbit(TCG_BIT_BLEEDING, aeft@tcg) ) {
				efllistaddcard 18, aeft@tcg
				efllistaddcard 17, aeft@tcg
				efllistaddcard 16, aeft@tcg
				gravecard aeft@tcg
			} else {
				cdbitmod TCG_BIT_BLEEDING, aeft@tcg, 1
				efllistaddcard 18, aeft@tcg
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HPBECOME1 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_HP, aeft@tcg) = 1
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RANDOMMIZESTAT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) + rnd(6)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = card@tcg(TCG_CARD_ATTACK, aeft@tcg)
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_HP, aeft@tcg) = effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) + rnd(6)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = card@tcg(TCG_CARD_HP, aeft@tcg)
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 0, TCG_STAT_MAX)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CHANGESIDE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD & getspotsum(1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 8 ) {
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				cardpos 0, -1
				cardpos 1, -1
			}
			if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_HAND & getholdersum(1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 7 ) {
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				cardposhand 0, -1
				cardposhand 1, -1
			}
			if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_HAND & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				cardposgrave -1
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RESURRECT_ACCELERATE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			effbk@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
			repeat limit(effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, 4)
				if ( card@tcg(TCG_CARD_EFFECT, aeft@tcg) == TCG_EFF_VERYFASTUNDEAD ) { card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_INCREDIBLYFASTUNDEAD }
				if ( card@tcg(TCG_CARD_EFFECT, aeft@tcg) == TCG_EFF_SKELETON ) { card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_VERYFASTUNDEAD }
				if ( card@tcg(TCG_CARD_EFFECT, aeft@tcg) == TCG_EFF_MUMMY ) { card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_SKELETON }
				if ( card@tcg(TCG_CARD_EFFECT, aeft@tcg) == TCG_EFF_VERYSLOWUNDEAD ) { card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_MUMMY }
				if ( card@tcg(TCG_CARD_EFFECT, aeft@tcg) == TCG_EFF_SUPERFASTLICH ) { card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_MEGASUPERFASTLICH }
				if ( card@tcg(TCG_CARD_EFFECT, aeft@tcg) == TCG_EFF_FASTLICH ) { card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_SUPERFASTLICH }
				if ( card@tcg(TCG_CARD_EFFECT, aeft@tcg) == TCG_EFF_LICH ) { card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_FASTLICH }
			loop
			if ( effbk@tcg != card@tcg(TCG_CARD_EFFECT, aeft@tcg) ) {
				sdim lines@tcg
				split carddetailneff@tcg(aeft@tcg), "\n", lines@tcg
				if ( stat >= 1 ) {
					carddetailneff@tcg(aeft@tcg) = lines@tcg(0) + "\nEffect: " + effdesc@tcg(card@tcg(TCG_CARD_EFFECT, aeft@tcg))
					efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RETURN_TO_DECK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			returncard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_KURONSIRAHA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				if ( aeff@tcg == TCG_EFF_KURONSIRAHA1 ) {
					card@tcg(TCG_CARD_EFFECT, ac@tcg) = TCG_EFF_KURONSIRAHA2
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_KURONSIRAHA1
					returncard aeft@tcg
					makecardlist
					tcgdraw
				} else {
					card@tcg(TCG_CARD_EFFECT, ac@tcg) = TCG_EFF_KURONSIRAHA1
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_KURONSIRAHA1
					gettargetcard aeft@tcg
					makecardlist
					tcgdraw
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RETURN_TO_DECK_DRAW1 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			returncard aeft@tcg
			getrandomcard ap@tcg
			makecardlist
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DRAW_TARGET_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) != ap@tcg ) {
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = ap@tcg
			}
			gettargetcard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DRAW_TARGET_CARD_GAIN1MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) != ap@tcg ) {
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = ap@tcg
			}
			if ( getholdersum(card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 7 ) {
				cpdata@tcg(TCG_PLAYER_MANA, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) += 1
				gettargetcard aeft@tcg
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DRAW_TARGET_CARD_DISCOUNT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) != ap@tcg ) {
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = ap@tcg
			}
			if ( getholdersum(card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 7 ) {
				card@tcg(TCG_CARD_REF_COST, aeft@tcg) -= aefp@tcg
				gettargetcard aeft@tcg
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_INSPIRE_JUERE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) != ap@tcg ) {
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = ap@tcg
			}
			if ( effac@tcg >= 0 & effac@tcg < maxcard@tcg ) {
				card@tcg(TCG_CARD_ATTACK, effac@tcg) = limit(card@tcg(TCG_CARD_ATTACK, effac@tcg) + 1, 0, TCG_STAT_MAX)
				card@tcg(TCG_CARD_REF_ATTACK, effac@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, effac@tcg) + 1, 0, TCG_STAT_MAX)
			}
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg) + 1, 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) + 1, 0, TCG_STAT_MAX)
			gettargetcard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BOUNCE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			gettargetcard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_YEEK_TRANSFORM | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			create_card aeft@tcg, CREATURE_ID_YEEK
			cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
			if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
				cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
			}
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 ) {
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = card@tcg(TCG_CARD_CONTROLLER, ac@tcg)
				makecardlist
				cardpos 0, -1
				cardpos 1, -1
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SPAGHET | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_NONE
			card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(9, 22) + 1000 * (card@tcg(TCG_CARD_REF_PIC, aeft@tcg) / 1000)
			card@tcg(TCG_CARD_REF_CHARA_PIC, aeft@tcg) = 0
			carddetailneff@tcg(aeft@tcg) = "Spaghetti  No.???   sphaghet  Rare: pasta\nEffect: Your hands are shaky."
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_23PUTIT_TRANSFORM | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			create_card aeft@tcg, CREATURE_ID_PUTIT
			cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
			if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
				cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
			}
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = 2
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = 2
			card@tcg(TCG_CARD_HP, aeft@tcg) = 3
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = 3
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SETBIT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg & effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) >= 5 ) {
			if ( cdbit(TCG_BIT_INSANE, aeft@tcg) & effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) == TCG_BIT_INSANE ) {
				tcgpass animespeed@tcg * 10
			}
			cdbitmod effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), aeft@tcg, 1
			if ( effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) == TCG_BIT_WINDFURY ) {
				cdbitmod TCG_BIT_WINDFURY_USABLE, aeft@tcg, 1
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_UNEFF_SETBIT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg & effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) >= 5 ) {
			cdbitmod effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), aeft@tcg, 0
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SETEFF | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg & effref@tcg(TCG_SKILL_POWER, aeff@tcg) >= 5 ) {
			card@tcg(TCG_CARD_EFFECT, aeft@tcg) = effref@tcg(TCG_SKILL_POWER, aeff@tcg)
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			reconstruct_card_text aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_4MANA77CONVERSION | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_HP, aeft@tcg) = 7
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = 7
			card@tcg(TCG_CARD_COST, aeft@tcg) = 4
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = 7
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = 7
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) = 4
			card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_4MANA77
			efllistadd 2, 4, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			efllistadd 1, 7, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			efllistadd 2, -7, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			reconstruct_card_text aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_COPYEFFECT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
				card@tcg(TCG_CARD_REF_PIC, ac@tcg) = card@tcg(TCG_CARD_REF_PIC, aeft@tcg)
				card@tcg(TCG_CARD_REF_CHARA_PIC, ac@tcg) = card@tcg(TCG_CARD_REF_CHARA_PIC, aeft@tcg)
				carddetailneff@tcg(ac@tcg) = carddetailneff@tcg(aeft@tcg)
				efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ANDROID | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg & specialrulelastbattlecry@tcg > 0 & specialrulelastbattlecry@tcg != TCG_SKILL_EFF_ANDROID ) {
			card@tcg(TCG_CARD_EFFECT, aeft@tcg) = specialrulelastbattlecry@tcg
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
				effac@tcg = aeft@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
				gosub *card_action_choose_target
				makecardlist
				tcgdraw
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BUFF_CREATURE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( rnd(1) == 0 ) { p@tcg = TCG_BIT_REGENERATION }
			if ( rnd(2) == 0 ) { p@tcg = TCG_BIT_ARMOR }
			if ( rnd(3) == 0 ) { p@tcg = TCG_BIT_FLYING }
			if ( rnd(4) == 0 ) { p@tcg = TCG_BIT_INTIMIDATE }
			if ( rnd(5) == 0 ) { p@tcg = TCG_BIT_REACH }
			if ( rnd(6) == 0 ) { p@tcg = TCG_BIT_LIFELINK }
			if ( rnd(7) == 0 ) { p@tcg = TCG_BIT_TRAMPLE }
			if ( rnd(8) == 0 ) { p@tcg = TCG_BIT_FIRST_STRIKE }
			if ( rnd(9) == 0 ) { p@tcg = TCG_BIT_WINDFURY }
			if ( rnd(10) == 0 ) { p@tcg = TCG_BIT_VIGILANCE }
			cdbitmod p@tcg, aeft@tcg, 1
			efllistaddcard 18, aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEBUFF_CREATURE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			repeat limit(aefp@tcg, 1, 100)
				if ( rnd(1) == 0 ) { p@tcg = TCG_BIT_POISONED, 10 }
				if ( rnd(2) == 0 ) { p@tcg = TCG_BIT_FROZEN, 6 }
				if ( rnd(3) == 0 ) { p@tcg = TCG_BIT_PARALYSED, 7 }
				if ( rnd(4) == 0 ) { p@tcg = TCG_BIT_SILENCED, 8 }
				if ( rnd(5) == 0 ) { p@tcg = TCG_BIT_BLEEDING, 15 }
				cdbitmod p@tcg, aeft@tcg, 1
				efllistaddcard p@tcg(1), aeft@tcg
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CLEANSE_CREATURE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			repeat 32, 32
				cdbitmod cnt, aeft@tcg, 0
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SPLITSELF | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, ac@tcg), card@tcg(TCG_CARD_REF_DBID, ac@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_HP, cextra@tcg) = card@tcg(TCG_CARD_HP, ac@tcg)
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = card@tcg(TCG_CARD_ATTACK, ac@tcg)
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = card@tcg(TCG_CARD_REF_HP, ac@tcg)
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = card@tcg(TCG_CARD_REF_ATTACK, ac@tcg)
					effbk@tcg = card@tcg(TCG_CARD_EFFECT, cextra@tcg)
					cdbitmod TCG_BIT_CONFUSED, cextra@tcg, 1
					putcard cextra@tcg, card@tcg(TCG_CARD_CONTROLLER, cextra@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SPLITSELF01 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, ac@tcg), card@tcg(TCG_CARD_REF_DBID, ac@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 0
					effbk@tcg = card@tcg(TCG_CARD_EFFECT, cextra@tcg)
					cdbitmod TCG_BIT_CONFUSED, cextra@tcg, 1
					putcard cextra@tcg, card@tcg(TCG_CARD_CONTROLLER, cextra@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SPLITSELF0X | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, ac@tcg), card@tcg(TCG_CARD_REF_DBID, ac@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_HP, cextra@tcg) = card@tcg(TCG_CARD_HP, ac@tcg)
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = card@tcg(TCG_CARD_REF_HP, ac@tcg)
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 0
					effbk@tcg = card@tcg(TCG_CARD_EFFECT, cextra@tcg)
					cdbitmod TCG_BIT_CONFUSED, cextra@tcg, 1
					putcard cextra@tcg, card@tcg(TCG_CARD_CONTROLLER, cextra@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_TRANSFORMTO | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card_ref card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				dbid = stat
				if ( dbid >= 0 ) {
					racebk@tcg = cardn@tcg(TCG_CARDN_REF_RACE, ac@tcg)
					create_card ac@tcg, dbid
					cardn@tcg(TCG_CARDN_REF_RACE, ac@tcg) = racebk@tcg
					cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
					if ( card@tcg(TCG_CARD_STATUS, ac@tcg) != TCG_ACTION_NONE ) {
						cdbitmod TCG_BIT_EXHAUSTED, ac@tcg, 1
					}
					aeft@tcg = ac@tcg
					if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
						if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
							effac@tcg = aeft@tcg
							eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
							if ( cancopyeffect(eff@tcg) ) {
								gosub *card_action_choose_target
								makecardlist
								tcgdraw
							}
						}
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MUTATE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			targetdeck@tcg = 0
			gosub *card_filter_reset
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_SKILL_FILTER_BLUE ) { rnddomain@tcg = 1 }
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_SKILL_FILTER_RAT ) { rndrace@tcg = "rat" }
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_SKILL_FILTER_MESHERA ) { rndrace@tcg = "bacteria" }
			gosub *card_filter
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_SKILL_FILTER_MESHERA ) { 
				if ( rnd(1) == 0 ) { cardno = CREATURE_ID_MESHERA_DELTA }
				if ( rnd(2) == 0 ) { cardno = CREATURE_ID_MESHERA_GAMMA }
				if ( rnd(3) == 0 ) { cardno = CREATURE_ID_MESHERA_BETA }
			}
			if ( cardno >= 0 ) {
				evhpbk@tcg = card@tcg(TCG_CARD_REF_HP, aeft@tcg)
				evatkbk@tcg = card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)
				evcostbk@tcg = card@tcg(TCG_CARD_REF_COST, aeft@tcg)
				if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_SKILL_FILTER_MESHERA ) { 
					evhpbk@tcg += rnd(2)
					evatkbk@tcg += rnd(2)
				}
				racebk@tcg = cardn@tcg(TCG_CARDN_REF_RACE, aeft@tcg)
				create_card aeft@tcg, cardno
				if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_EFF_SSIL ) { 
					evhpbk@tcg = card@tcg(TCG_CARD_HP, aeft@tcg)
					evatkbk@tcg = card@tcg(TCG_CARD_ATTACK, aeft@tcg)
					racebk@tcg = cardn@tcg(TCG_CARDN_REF_RACE, aeft@tcg)
				}
				cardn@tcg(TCG_CARDN_REF_RACE, aeft@tcg) = racebk@tcg
				card@tcg(TCG_CARD_REF_COST, aeft@tcg) = evcostbk@tcg
				card@tcg(TCG_CARD_COST, aeft@tcg) = evcostbk@tcg
				card@tcg(TCG_CARD_REF_HP, aeft@tcg) = evhpbk@tcg
				card@tcg(TCG_CARD_HP, aeft@tcg) = evhpbk@tcg
				card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = evatkbk@tcg
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) = evatkbk@tcg
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_EFF_SSIL ) {
					efllistaddcard 22, aeft@tcg
					if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_DECK ) { 
						efllistadd 22, 0, deckix@tcg(card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) + 36, deckiy@tcg(card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) + 48 
					}
					if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_GRAVEYARD ) { 
						efllistadd 22, 0, graveix@tcg(card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) + 36, graveiy@tcg(card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) + 48 
					}
				}
				if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
					if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
						effac@tcg = aeft@tcg
						eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
						if ( cancopyeffect(eff@tcg) ) {
							gosub *card_action_choose_target
							makecardlist
							tcgdraw
						}
					}
				}
				makecardlist
				tcgdraw
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MERGEANDUPGRADE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				dbid = -1
				if ( card@tcg(TCG_CARD_REF_DBID, ac@tcg) == CREATURE_ID_BISQUE_DOLL ) { dbid = CREATURE_ID_BISQUE_DOLL }
				if ( card@tcg(TCG_CARD_REF_DBID, ac@tcg) == CREATURE_ID_YERLES_COMBAT_PLANE ) { dbid = CREATURE_ID_YERLES_LATEST_OUTFIT_SOLDIER }
				if ( dbid >= 0) {
					card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
					tcgpass 15
					card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_NONE
					create_card aeft@tcg, dbid
					cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
					if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
						cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
					}
					if ( dbid == CREATURE_ID_BISQUE_DOLL ) {
						card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 33)
						carddetailneff@tcg(aeft@tcg) = "Bisque Dolls  No.???   female golem warmage  Rare:None\nEffect: None."
						card@tcg(TCG_CARD_REF_HP, aeft@tcg) *= 3
						card@tcg(TCG_CARD_HP, aeft@tcg) *= 3
						cdbitmod TCG_BIT_DOUBLE_STRIKE, aeft@tcg, 1
						cdbitmod TCG_BIT_ARMOR, aeft@tcg, 1
					}
					makecardlist
					cardpos 0, -1
					cardpos 1, -1
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MERGEANDGIVERIDER | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
				card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_FIELD
				card@tcg(TCG_CARD_ANIM, ac@tcg) = 0, 0
				card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
				tcgpass 15
				card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_NONE
				cdbitmod TCG_BIT_FACE_UP, ac@tcg, 0
				cdbitmod TCG_BIT_RIDER, aeft@tcg, 1
				efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
				makecardlist
				cardpos 0, -1
				cardpos 1, -1
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAVELA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dbid = -1
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_MILITARY_PUTIT ) { dbid = CREATURE_ID_PUTIT_TANK }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_MACHINE_INFANTRY ) { dbid = CREATURE_ID_YERLES_ELITE_MACHINE_INFANTRY }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_COMBAT_PLANE ) { dbid = CREATURE_ID_YERLESWOOD_TYPE_M }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_LATEST_OUTFIT_SOLDIER ) { dbid = CREATURE_ID_YERLES_CYBORG_SOLDIER }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_SELF_PROPELLED_GUN ) { dbid = CREATURE_ID_SECURITY_SYSTEM }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_SECURITY_SYSTEM ) { dbid = CREATURE_ID_YERLES_MORTAR }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_MORTAR ) { dbid = CREATURE_ID_GRAVITY_CANNON }
			if ( dbid >= 0) {
				costbk@tcg = card@tcg(TCG_CARD_REF_COST, aeft@tcg)
				create_card aeft@tcg, dbid
				card@tcg(TCG_CARD_REF_COST, aeft@tcg) = costbk@tcg
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = card@tcg(TCG_CARD_X, aeft@tcg) - 8, card@tcg(TCG_CARD_Y, aeft@tcg) + 40 - 80 * (ap@tcg != 0)
				tcgpass 20
				efllistaddcard 18, aeft@tcg
				makecardlist
				cardpos ap@tcg, -1
				cardposhand ap@tcg, -1
				tcgpass 15
				if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
					if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
						effac@tcg = aeft@tcg
						eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
						if ( cancopyeffect(eff@tcg) ) {
							gosub *card_action_choose_target
							makecardlist
							tcgdraw
						}
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CHANGEDBID | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_REF_DBID, aeft@tcg) = effref@tcg(TCG_SKILL_POWER, aeff@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MARKS | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			p@tcg = 0
			target@tcg = -1
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != 1 - card@tcg(TCG_CARD_CONTROLLER, effac@tcg) ) { continue } // Opponent's
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_DECK ) { continue } // in Deck
				if ( rnd(p@tcg + 1) == 0 ) {
					target@tcg = cnt
				}
				p@tcg++
			loop
			if ( p@tcg > 0 & target@tcg > -1 ) {
				card@tcg(TCG_CARD_LOCATION, aeft@tcg) = TCG_LOCATION_NONE
				card@tcg(TCG_CARD_CONTROLLER, target@tcg) = ap@tcg
				gettargetcard target@tcg
				card@tcg(TCG_CARD_REF_COST, target@tcg) = card@tcg(TCG_CARD_REF_COST, target@tcg) - 2
				card@tcg(TCG_CARD_COST, target@tcg) = card@tcg(TCG_CARD_COST, target@tcg) - 2
				makecardlist
				tcgdraw
			}
			cardposhand 0, -1
			cardposhand 1, -1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DOCTOR_OAK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			aeftdoctoroak@tcg = aeft@tcg
			aefpdoctoroak@tcg = aefp@tcg
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_LOCATION, cnt) == TCG_LOCATION_HAND & card@tcg(TCG_CARD_CONTROLLER, cnt) == aeftdoctoroak@tcg ) {
					returncard cnt
				}
			loop
			repeat limit(aefpdoctoroak@tcg, 0, 8)
				getrandomcard aeftdoctoroak@tcg
			loop
			cardposhand 0, -1
			cardposhand 1, -1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_PUT_TARGET_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				putcardfree@tcg = 1
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_PUT_TARGET_CARD_HASTE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				putcardfree@tcg = 1
				cdbitmod TCG_BIT_HASTE, aeft@tcg, 1
				cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 0
				card@tcg(TCG_CARD_STATUS, aeft@tcg) = TCG_ACTION_NONE
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_PUT_TARGET_CARD_AND_DMG | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				putcardfree@tcg = 1
				repeat 1, aeft@tcg
					card@tcg(TCG_CARD_TEMP, cnt) = effref@tcg(TCG_SKILL_POWER, aeff@tcg)
					putcard cnt, card@tcg(TCG_CARD_CONTROLLER, cnt)
					dmgcard cnt, card@tcg(TCG_CARD_TEMP, cnt)
				loop
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_WEAKEN_AND_PUT_TARGET_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				putcardfree@tcg = 1
				repeat 1, aeft@tcg
					cdbitmod TCG_BIT_CONFUSED, cnt, 1
					card@tcg(TCG_CARD_TEMP, cnt) = effref@tcg(TCG_SKILL_POWER, aeff@tcg)
					putcard cnt, card@tcg(TCG_CARD_CONTROLLER, cnt)
					card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) -= card@tcg(TCG_CARD_TEMP, cnt)
					cdbitmod TCG_BIT_CONFUSED, cnt, 0
				loop
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BLACKANGEL | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dmgplayer card@tcg(TCG_CARD_CONTROLLER, aeft@tcg), aefp@tcg
			dmgcard aeft@tcg, aefp@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RESURRECT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 8 & card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) >= effref@tcg(TCG_SKILL_POWER, aeff@tcg) ) {
				putcardfree@tcg = 1
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				if ( aeff@tcg == TCG_EFF_LICH | aeff@tcg == TCG_EFF_FASTLICH | aeff@tcg == TCG_EFF_SUPERFASTLICH | aeff@tcg == TCG_EFF_MEGASUPERFASTLICH ) {
					getrandomcard ap@tcg
				}
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SWITCHSIDE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
				putcard aeft@tcg, 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEMON | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( cpdata@tcg(TCG_PLAYER_LIFE, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) <= effref@tcg(TCG_SKILL_POWER, aeff@tcg) & getspotsum(1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
				putcard aeft@tcg, 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SWAPDECK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_DECK ) {
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				repeat 2
					cpdata@tcg(TCG_PLAYER_DECK, cnt) = getdecksum(cnt)
				loop
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MIMIC | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				evhpbk@tcg = card@tcg(TCG_CARD_HP, ac@tcg)
				evatkbk@tcg = card@tcg(TCG_CARD_ATTACK, ac@tcg)
				create_card ac@tcg, card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, ac@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, ac@tcg, 1
				}
				card@tcg(TCG_CARD_HP, ac@tcg) = evhpbk@tcg
				card@tcg(TCG_CARD_ATTACK, ac@tcg) = evatkbk@tcg
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = TCG_EFF_MIMIC2
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_PUT_CORGON_AND_CHANGEEFF | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = TCG_EFF_QURUIZA2
				putcardfree@tcg = 1
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_PUT_DOGGOD_AND_CHANGEEFF | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = TCG_EFF_DOGGOD3
				putcardfree@tcg = 1
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_1DMGEVERYPIECE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dmgplayer 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg), 1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SUMMON | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, ap@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SUMMON_FIRE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 ) {
				if ( rnd(1) == 0 ) { p@tcg = CREATURE_ID_FIRE_DRAGON_CHILD }
				if ( rnd(2) == 0 ) { p@tcg = CREATURE_ID_RED_PUTIT }
				if ( rnd(3) == 0 ) { p@tcg = CREATURE_ID_DRAGON_BAT }
				if ( rnd(4) == 0 ) { p@tcg = CREATURE_ID_FIRE_ENT }
				if ( rnd(5) == 0 ) { p@tcg = CREATURE_ID_RED_WASP }
				if ( rnd(6) == 0 ) { p@tcg = CREATURE_ID_IMP }
				if ( rnd(7) == 0 ) { p@tcg = CREATURE_ID_FIRE_DRAKE }
				if ( rnd(8) == 0 ) { p@tcg = CREATURE_ID_RED_BAPTIST }
				if ( rnd(9) == 0 ) { p@tcg = CREATURE_ID_RED_DRAGON }
				if ( rnd(10) == 0 ) { p@tcg = CREATURE_ID_STONE_GOLEM }
				if ( rnd(11) == 0 ) { p@tcg = CREATURE_ID_STEEL_GOLEM }
				if ( rnd(12) == 0 ) { p@tcg = CREATURE_ID_FIRE_CRAB }
				if ( rnd(13) == 0 ) { p@tcg = CREATURE_ID_FIRE_CENTIPEDE }
				// if ( rnd(14) == 0 ) { p@tcg = CREATURE_ID_CULTIST_OF_FIRE }
				create_extra_card aeft@tcg, p@tcg
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, ap@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SUMMONSPIDER | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 ) {
				if ( rnd(1) == 0 ) { p@tcg = CREATURE_ID_SPIDER }
				if ( rnd(2) == 0 ) { p@tcg = CREATURE_ID_BLACK_WIDOW }
				if ( rnd(3) == 0 ) { p@tcg = CREATURE_ID_PARALYZER }
				if ( rnd(4) == 0 ) { p@tcg = CREATURE_ID_TARANTULA }
				if ( rnd(5) == 0 ) { p@tcg = CREATURE_ID_BLOOD_SPIDER }
				create_extra_card aeft@tcg, p@tcg
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, ap@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HEINRICH | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			aeftbk@tcg = aeft@tcg
			apbk@tcg = ap@tcg
			acbk@tcg = ac@tcg
			animeseq@tcg = 1
			cardsgenerated@tcg = 0, 0
			xbk2@tcg = card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg)
			repeat 2
				create_extra_card aeftbk@tcg, CREATURE_ID_YERLES_MACHINE_INFANTRY
				if ( cextra@tcg >= 0 ) { 
					cardsgenerated@tcg(0)++
					card@tcg(TCG_CARD_LOCATION, cextra@tcg) = TCG_LOCATION_ANIM 
					cdbitmod TCG_BIT_FACE_UP, cextra@tcg, 1
					card@tcg(TCG_CARD_X, cextra@tcg) = card@tcg(TCG_CARD_X, acbk@tcg), card@tcg(TCG_CARD_Y, acbk@tcg), card@tcg(TCG_CARD_X, acbk@tcg) - 40 + 80 * cnt, card@tcg(TCG_CARD_Y, acbk@tcg) - 104 + 208 * (apbk@tcg != 0)
				}
				create_extra_card aeftbk@tcg, CREATURE_ID_YERLES_SELF_PROPELLED_GUN
				if ( cextra@tcg >= 0 ) { 
					cardsgenerated@tcg(0)++
					card@tcg(TCG_CARD_LOCATION, cextra@tcg) = TCG_LOCATION_ANIM 
					cdbitmod TCG_BIT_FACE_UP, cextra@tcg, 1
					card@tcg(TCG_CARD_X, cextra@tcg) = card@tcg(TCG_CARD_X, acbk@tcg), card@tcg(TCG_CARD_Y, acbk@tcg), card@tcg(TCG_CARD_X, acbk@tcg) - 80 + 160 * cnt, card@tcg(TCG_CARD_Y, acbk@tcg)
				}
				create_extra_card aeftbk@tcg, CREATURE_ID_YERLES_COMBAT_PLANE
				if ( cextra@tcg >= 0 ) { 
					cardsgenerated@tcg(0)++
					cardsgenerated@tcg(1)++
					card@tcg(TCG_CARD_LOCATION, cextra@tcg) = TCG_LOCATION_ANIM 
					cdbitmod TCG_BIT_FACE_UP, cextra@tcg, 1
					card@tcg(TCG_CARD_X, cextra@tcg) = card@tcg(TCG_CARD_X, acbk@tcg), card@tcg(TCG_CARD_Y, acbk@tcg), card@tcg(TCG_CARD_X, acbk@tcg) - 50 + 100 * cnt, card@tcg(TCG_CARD_Y, acbk@tcg) + 104 - 208 * (apbk@tcg != 0)
				}
			loop
			if ( cardsgenerated@tcg(0) > 0 ) {
				tcgpass 30
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
					if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_ANIM ) { continue }
					cdbitmod TCG_BIT_FACE_UP, cnt, 1
					card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_DECK
					xbk@tcg = card@tcg(TCG_CARD_X, cnt), card@tcg(TCG_CARD_Y, cnt)
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_YERLES_COMBAT_PLANE ) {
						gettargetcard cnt
					} else {
						putcard cnt, apbk@tcg
					}
					card@tcg(TCG_CARD_X, cnt) = xbk@tcg(0), xbk@tcg(1), xbk@tcg(0), xbk@tcg(1)
				loop
				card@tcg(TCG_CARD_X, ac@tcg) = xbk2@tcg(0) + 80, xbk2@tcg(1), xbk2@tcg(0) + 80, xbk2@tcg(1)
				makecardlist
				cardposhand apbk@tcg, -1
				cardpos apbk@tcg, -1
			}
			animeseq@tcg = 0
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_LEOLD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			aeftbk@tcg = aeft@tcg
			cardidbk@tcg = card@tcg(TCG_CARD_REF_DBID, effac@tcg)
			cardpool@tcg = 1, 2, 2
			cardsgenerated@tcg = limit(7 - getholdersum(aeftbk@tcg), 0, limit(effref@tcg(TCG_SKILL_POWER, aeff@tcg), 1, 6))
			animeseq@tcg = 1
			repeat cardsgenerated@tcg
				cardchoice@tcg = rnd(3)
				if ( cardpool@tcg(cardchoice@tcg) <= 0 ) { cardchoice@tcg = (cardchoice@tcg + 1) \ 3 }
				if ( cardpool@tcg(cardchoice@tcg) <= 0 ) { cardchoice@tcg = (cardchoice@tcg + 1) \ 3 }
				cardpool@tcg(cardchoice@tcg)--
				if ( cnt == 5 ) { cardchoice@tcg = 3 }

				create_extra_card aeftbk@tcg, cardidbk@tcg
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
					cdbitmod TCG_BIT_COMMAND, cextra@tcg, 1
					if ( cardchoice@tcg == 0 ) {
						card@tcg(TCG_CARD_REF_PIC, cextra@tcg) = card@tcg(TCG_CARD_REF_PIC, cextra@tcg) \ 1000 + card@tcg(TCG_CARD_REF_CHARA_PIC, cextra@tcg) * 1000 + COLOR_GREEN * COLOR_TINT_MULT
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_LEOLD_RETURN
						card@tcg(TCG_CARD_REF_BG, cextra@tcg) = 1
						carddetailneff@tcg(cextra@tcg) = "Awakening-Card QUICK   No.???   male mazin archer  Rare:None\n[Command Card]\nEffect: Return Leold to your Hand."
					}
					if ( cardchoice@tcg == 1 ) {
						card@tcg(TCG_CARD_REF_PIC, cextra@tcg) = card@tcg(TCG_CARD_REF_PIC, cextra@tcg) \ 1000 + card@tcg(TCG_CARD_REF_CHARA_PIC, cextra@tcg) * 1000 + COLOR_BLUE * COLOR_TINT_MULT
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_BATTLECRY_DEALOPPONENT2DAMAGE
						card@tcg(TCG_CARD_REF_BG, cextra@tcg) = 0
						carddetailneff@tcg(cextra@tcg) = "Awakening-Card ARTS    No.???   male mazin wizard  Rare:None\n[Command Card]\nEffect: Deal Opponent 2 Damage."
					}
					if ( cardchoice@tcg == 2 ) {
						card@tcg(TCG_CARD_REF_PIC, cextra@tcg) = card@tcg(TCG_CARD_REF_PIC, cextra@tcg) \ 1000 + card@tcg(TCG_CARD_REF_CHARA_PIC, cextra@tcg) * 1000 + COLOR_RED * COLOR_TINT_MULT
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_BATTLECRY_DEALCHOSENENEMY2DAMAGE
						card@tcg(TCG_CARD_REF_BG, cextra@tcg) = 7
						carddetailneff@tcg(cextra@tcg) = "Awakening-Card BUSTER  No.???   male mazin warrior  Rare:None\n[Command Card]\nEffect: Deal 2 Damage to Target Card."
					}
					if ( cardchoice@tcg == 3 ) {
						card@tcg(TCG_CARD_REF_PIC, cextra@tcg) = card@tcg(TCG_CARD_REF_PIC, cextra@tcg) \ 1000 + card@tcg(TCG_CARD_REF_CHARA_PIC, cextra@tcg) * 1000
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_BATTLECRY_DEALEVERYONE1DAMAGE
						card@tcg(TCG_CARD_REF_BG, cextra@tcg) = 4
						cdbitmod TCG_BIT_FLEETING, cextra@tcg, 1
						carddetailneff@tcg(cextra@tcg) = "Awakening-Card EXTRA   No.???   male mazin warmage  Rare:None\n[Command Card] [Discard if not Played] \nEffect: Deal 1 Damage to every card."
					}
					// gettargetcard cextra@tcg
					// a Large chunk of animation code below.
					card@tcg(TCG_CARD_LOCATION, cextra@tcg) = TCG_LOCATION_ANIM
					if ( cnt < 5 ) {
						cdbitmod TCG_BIT_FACE_UP, cextra@tcg, 1
						card@tcg(TCG_CARD_X, cextra@tcg) = basex@tcg + 457, basey@tcg + 222, basex@tcg + 457 - limit(cardsgenerated@tcg, 0, 5) * 40 + cnt * 80, basey@tcg + 222
						tcgpass 10 - cnt * 2
					}
				}
			loop
			// a Large chunk of animation code below.
			tcgpass 30
			if ( cardsgenerated@tcg == 6 ) {
				p@tcg = 0
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
					if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_ANIM ) { continue }
					if ( card@tcg(TCG_CARD_REF_DBID, cnt) != cardidbk@tcg ) { continue }
					
					cdbitmod TCG_BIT_FACE_UP, cnt, 1
					if ( cdbit(TCG_BIT_FLEETING, cnt) ) {
						card@tcg(TCG_CARD_X, cnt) = basex@tcg + 457 + 160, basey@tcg + 222, basex@tcg + 457 + 160, basey@tcg + 222
						efllistaddcard 18, cnt
					} else {
						card@tcg(TCG_CARD_X_MOVETO, cnt) = basex@tcg + 457 - limit(cardsgenerated@tcg, 0, 6) * 40 + p@tcg * 80, basey@tcg + 222
						p@tcg++
					}
				loop
				tcgpass 30
			}
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_ANIM ) { continue }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) != cardidbk@tcg ) { continue }
				card@tcg(TCG_CARD_X_MOVETO, cnt) = deckix@tcg(ap@tcg), deckiy@tcg(ap@tcg)
			loop
			tcgpass 15
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_ANIM ) { continue }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) != cardidbk@tcg ) { continue }
				card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_DECK
				gettargetcard cnt
				cdbitmod TCG_BIT_FACE_UP, cnt, 1
			loop
			cardposhand ap@tcg, -1
			animeseq@tcg = 0
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GANESH | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			aeftbk@tcg = aeft@tcg
			cardidbk@tcg = card@tcg(TCG_CARD_REF_DBID, effac@tcg)
			repeat 1
				if ( getholdersum(aeftbk@tcg) >= 7 ) { break }
				create_extra_card aeftbk@tcg, cardidbk@tcg
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
					cdbitmod TCG_BIT_COMMAND, cextra@tcg, 1
					card@tcg(TCG_CARD_X, cextra@tcg) = card@tcg(TCG_CARD_X, effac@tcg), card@tcg(TCG_CARD_Y, effac@tcg)
					card@tcg(TCG_CARD_REF_PIC, cextra@tcg) = card@tcg(TCG_CARD_REF_PIC, cextra@tcg) \ 1000 + card@tcg(TCG_CARD_REF_CHARA_PIC, cextra@tcg) * 1000
					card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_GANESHIMPACT
					card@tcg(TCG_CARD_REF_BG, cextra@tcg) = 4
					carddetailneff@tcg(cextra@tcg) = "Ganesa Impact  No.???   primordial spirit  Rare:None\n[Command Card]\nEffect: Unleash a Powerful Ganeshin Impact!"
					gettargetcard cextra@tcg
				}
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SUZAKU | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) == 0 ) {
				controllerbk@tcg = card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				cardidbk@tcg = card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				repeat 1
					create_extra_card controllerbk@tcg, cardidbk@tcg
					if ( cextra@tcg >= 0 ) {
						card@tcg(TCG_CARD_REF_DBID, cextra@tcg) = CREATURE_ID_CHICKEN
						card@tcg(TCG_CARD_COST, cextra@tcg) = 0
						card@tcg(TCG_CARD_HP, cextra@tcg) = 1
						card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
						card@tcg(TCG_CARD_REF_COST, cextra@tcg) = 0
						card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
						card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
						cdbitmod TCG_BIT_COMMAND, cextra@tcg, 1
						card@tcg(TCG_CARD_X, cextra@tcg) = card@tcg(TCG_CARD_X, effac@tcg), card@tcg(TCG_CARD_Y, effac@tcg)
						card@tcg(TCG_CARD_REF_PIC, cextra@tcg) = -31
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_SUZAKU_FLAME
						card@tcg(TCG_CARD_REF_BG, cextra@tcg) = 7
						carddetailneff@tcg(cextra@tcg) = "Flame of Suzaku  No.???   flame spirit  Rare:None\n[Command Card]\nEffect: Revives Suzaku."
						card@tcg(TCG_CARD_X_MOVETO, cextra@tcg) = deckix@tcg(card@tcg(TCG_CARD_CONTROLLER, cextra@tcg)), deckiy@tcg(card@tcg(TCG_CARD_CONTROLLER, cextra@tcg))
						cdbitmod TCG_BIT_FACE_UP, cextra@tcg, 1
						card@tcg(TCG_CARD_LOCATION, cextra@tcg) = TCG_LOCATION_ANIM
						tcgdraw
						cdbitmod TCG_BIT_FACE_UP, cextra@tcg, 0
						card@tcg(TCG_CARD_LOCATION, cextra@tcg) = TCG_LOCATION_DECK
					}
				loop
			} else {
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_FIELD ) { continue }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, cnt) == 7 ) { continue }
					dmgcard cnt, 2
				loop

			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RACHAEL_BOOKS_HANDLE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			p@tcg = 0, 0, 0, 0
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != aeft@tcg ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_GRAVEYARD ) { continue }
				if ( card@tcg(TCG_CARD_EFFECT, cnt) == TCG_EFF_RACHELSBOOK1 ) { p@tcg(0) = 1 }
				if ( card@tcg(TCG_CARD_EFFECT, cnt) == TCG_EFF_RACHELSBOOK2 ) { p@tcg(1) = 1 }
				if ( card@tcg(TCG_CARD_EFFECT, cnt) == TCG_EFF_RACHELSBOOK3 ) { p@tcg(2) = 1 }
				if ( card@tcg(TCG_CARD_EFFECT, cnt) == TCG_EFF_RACHELSBOOK4 ) { p@tcg(3) = 1 }
			loop
			if ( p@tcg(0) + p@tcg(1) + p@tcg(2) + p@tcg(3) == 4 ) {
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != aeft@tcg ) { continue }
					if ( card@tcg(TCG_CARD_EFFECT, cnt) != TCG_EFF_RENTON ) { continue }
					card@tcg(TCG_CARD_ATTACK, cnt) = limit(card@tcg(TCG_CARD_ATTACK, cnt) + 6, 0, TCG_STAT_MAX)
					card@tcg(TCG_CARD_REF_ATTACK, cnt) = limit(card@tcg(TCG_CARD_REF_ATTACK, cnt) + 6, 0, TCG_STAT_MAX)
					card@tcg(TCG_CARD_HP, cnt) = limit(card@tcg(TCG_CARD_HP, cnt) + 6, 1, TCG_STAT_MAX)
					card@tcg(TCG_CARD_REF_HP, cnt) = limit(card@tcg(TCG_CARD_REF_HP, cnt) + 6, 1, TCG_STAT_MAX)
					if ( cdbit(TCG_BIT_INSANE, cnt) == 0 )  { cdbitmod TCG_BIT_INSANE, cnt, 1 }
					efllistadd 2, 6, card@tcg(TCG_CARD_X, cnt), card@tcg(TCG_CARD_Y, cnt), card@tcg(TCG_CARD_X, cnt), card@tcg(TCG_CARD_Y, cnt)
					efllistaddcard 22, cnt
				loop
			}
			if ( aefp@tcg != 1 ) {
				getrandomcard ap@tcg
				makecardlist
				tcgdraw
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RACHAEL_BOOKS | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			aeftbk@tcg = aeft@tcg
			cardidbk@tcg = card@tcg(TCG_CARD_REF_DBID, effac@tcg)
			card@tcg(TCG_CARD_X_MOVETO, effac@tcg) = basex@tcg + 455 - 36, basey@tcg + 270 - 48
			card@tcg(TCG_CARD_LOCATION, effac@tcg) = TCG_LOCATION_ANIM
			cdbitmod TCG_BIT_FACE_UP, effac@tcg, 1
			tcgpass 20
			efllistadd 8, 0, basex@tcg + 457, basey@tcg + 270, basex@tcg + 457, basey@tcg + 270
			repeat 4
				cardchoice@tcg = cnt + 1
				create_extra_card aeftbk@tcg, cardidbk@tcg
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_COST, cextra@tcg) = 1
					card@tcg(TCG_CARD_HP, cextra@tcg) = cardchoice@tcg
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_COST, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = cardchoice@tcg
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 0
					cdbitmod TCG_BIT_COMMAND, cextra@tcg, 1
					cdbitmod TCG_BIT_VIGILANCE, cextra@tcg, 0
					cardn@tcg(TCG_CARDN_REF_SEX,  cextra@tcg) = "female"
					card@tcg(TCG_CARD_REF_PIC, cextra@tcg) = -22
					if ( cardchoice@tcg == 1 ) {
						card@tcg(TCG_CARD_X, cextra@tcg) = basex@tcg + 455 - 36, basey@tcg + 270 - 48, basex@tcg + 355 - 36, basey@tcg + 220 - 48
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_RACHELSBOOK1
						carddetailneff@tcg(cextra@tcg) = "Book of Rachel No.1    Lovely fairy tale written by Rachel.  Rare:Very\nEffect: Battlecry: Draw 2 1-cost Cards.\n        If you've played all 4 books, Renton has +6/+6 (wherever he is)."
					}
					if ( cardchoice@tcg == 2 ) {
						card@tcg(TCG_CARD_X, cextra@tcg) = basex@tcg + 455 - 36, basey@tcg + 270 - 48, basex@tcg + 355 - 36, basey@tcg + 320 - 48
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_RACHELSBOOK2
						carddetailneff@tcg(cextra@tcg) = "Book of Rachel No.2    Lovely fairy tale written by Rachel.  Rare:Very\nEffect: Battlecry: Gain +2 Mana. Draw 1 Card.\n        If you've played all 4 books, Renton has +6/+6 (wherever he is)."
					}
					if ( cardchoice@tcg == 3 ) {
						card@tcg(TCG_CARD_X, cextra@tcg) = basex@tcg + 455 - 36, basey@tcg + 270 - 48, basex@tcg + 555 - 36, basey@tcg + 320 - 48
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_RACHELSBOOK3
						carddetailneff@tcg(cextra@tcg) = "Book of Rachel No.3    Lovely fairy tale written by Rachel.  Rare:Very\nEffect: Battlecry: Give All Card on your Field +1 HP. Draw 1 Card.\n        If you've played all 4 books, Renton has +6/+6 (wherever he is)."
					}
					if ( cardchoice@tcg == 4 ) {
						card@tcg(TCG_CARD_X, cextra@tcg) = basex@tcg + 455 - 36, basey@tcg + 270 - 48, basex@tcg + 555 - 36, basey@tcg + 220 - 48
						card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_RACHELSBOOK4
						carddetailneff@tcg(cextra@tcg) = "Book of Rachel No.4    Lovely fairy tale written by Rachel.  Rare:Very\nEffect: Battlecry: Weaken All Enemies on Field by 1. Draw 1 Card.\n        If you've played all 4 books, Renton has +6/+6 (wherever he is)."
					}
					card@tcg(TCG_CARD_ANIM, cextra@tcg) = TCG_ANIM_NONE
					card@tcg(TCG_CARD_LOCATION, cextra@tcg) = TCG_LOCATION_ANIM
					cdbitmod TCG_BIT_FACE_UP, cextra@tcg, 1
					tcgpass 10 - cnt * 2
				}
			loop
			tcgpass 15
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) != cardidbk@tcg ) { continue }
				card@tcg(TCG_CARD_X_MOVETO, cnt) = deckix@tcg(ap@tcg), deckiy@tcg(ap@tcg)
				tcgpass 2
			loop
			tcgpass 15
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) != cardidbk@tcg ) { continue }
				cdbitmod TCG_BIT_FACE_UP, cnt, 0
				card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_DECK
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	
	if ( _switch_val@tcg == TCG_SKILL_EFF_EVOLVERORAN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			card@tcg(TCG_CARD_X_MOVETO, effac@tcg) = basex@tcg + 455 - 36, basey@tcg + 270 - 48
			card@tcg(TCG_CARD_LOCATION, effac@tcg) = TCG_LOCATION_ANIM
			cdbitmod TCG_BIT_FACE_UP, effac@tcg, 1
			tcgpass 20
			efllistadd 20, 0, basex@tcg + 457, basey@tcg + 270, basex@tcg + 457, basey@tcg + 270
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
				card@tcg(TCG_CARD_TEMP, cnt) = 0
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_LITTLE_GIRL ) { card@tcg(TCG_CARD_TEMP, cnt) = rnd(4) + 1 }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_YOUNG_LADY ) { card@tcg(TCG_CARD_TEMP, cnt) = rnd(2) + 1 }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_YOUNGER_SISTER ) { card@tcg(TCG_CARD_TEMP, cnt) = rnd(2) + 1 }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_OLDER_SISTER ) { card@tcg(TCG_CARD_TEMP, cnt) = rnd(2) + 1 }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_GWEN_THE_INNOCENT ) { card@tcg(TCG_CARD_TEMP, cnt) = 1 }
				if ( card@tcg(TCG_CARD_TEMP, cnt) <= 0 ) { continue }
				if ( cnt == 0 ) {
					angle@tcg = double(rnd(628)) / 100.0
				} else {
					angle@tcg += double(60 + rnd(80)) / 100.0
				}
				card@tcg(TCG_CARD_X_MOVETO, cnt) = int(basex@tcg + 455 - 36 + cos(angle@tcg) * 100), int(basey@tcg + 270 - 48 + sin(angle@tcg) * 100)
				card@tcg(TCG_CARD_ANIM, cnt) = TCG_ANIM_NONE
				card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_ANIM
				cdbitmod TCG_BIT_FACE_UP, cnt, 1
				tcgpass 10 - cnt * 2
			loop
			tcgdraw
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_ANIM ) { continue }
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_LITTLE_GIRL ) {
					if ( card@tcg(TCG_CARD_TEMP, cnt) <= 2 ) {
						card@tcg(TCG_CARD_REF_COST, cnt) = 3
						card@tcg(TCG_CARD_HP, cnt) = 3
						card@tcg(TCG_CARD_REF_HP, cnt) = 3
						card@tcg(TCG_CARD_REF_ATTACK, cnt) = 3
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(15, 18)
						card@tcg(TCG_CARD_EFFECT, cnt) = TCG_EFF_VALKYRIE
						carddetailneff@tcg(cnt) = "Valkyrie No.???    Roran Warrior  Rare:Very\nEffect: "
					}
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 3 ) {
						card@tcg(TCG_CARD_HP, cnt) = 1
						card@tcg(TCG_CARD_REF_HP, cnt) = 1
						card@tcg(TCG_CARD_REF_ATTACK, cnt) = 0
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(12, 17)
						card@tcg(TCG_CARD_EFFECT, cnt) = TCG_EFF_YOUJO
						carddetailneff@tcg(cnt) = "Littler Girl No.???    Roran Warrior  Rare:Very\nEffect: "
					}
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 4 ) {
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(14, 17)
						card@tcg(TCG_CARD_EFFECT, cnt) = TCG_EFF_WITCH
						carddetailneff@tcg(cnt) = "Witch No.???    Roran Warrior  Rare:Very\nEffect: "
					}
				}
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_YOUNG_LADY ) {
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 1 ) {
						card@tcg(TCG_CARD_REF_ATTACK, cnt) = 2
						card@tcg(TCG_CARD_REF_COST, cnt) = 2
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(27, 2)
						card@tcg(TCG_CARD_EFFECT, cnt) = TCG_EFF_YOUNGLADYWHITE
						carddetailneff@tcg(cnt) = "White Princess No.???    Roran Warmage  Rare:Very\nEffect: "
					}
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 2 ) {
						card@tcg(TCG_CARD_HP, cnt) = 3
						card@tcg(TCG_CARD_REF_HP, cnt) = 3
						card@tcg(TCG_CARD_REF_COST, cnt) = 2
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(13, 17)
						card@tcg(TCG_CARD_EFFECT, cnt) = TCG_EFF_YOUNGLADYBLACK
						cdbitmod TCG_BIT_LIFELINK, cnt, 1
						cdbitmod TCG_BIT_REGENERATION, cnt, 1
						carddetailneff@tcg(cnt) = "Miss Vampire No.???    Roran Warmage  Rare:Very\nBits:  Lifelink Regeneration\nEffect: "
					}
				}
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_YOUNGER_SISTER ) {
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 1 ) {
						card@tcg(TCG_CARD_REF_ATTACK, cnt) = 2
						card@tcg(TCG_CARD_HP, cnt) = 2
						card@tcg(TCG_CARD_REF_HP, cnt) = 2
						card@tcg(TCG_CARD_REF_COST, cnt) = 2
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(10, 9)
						cdbitmod TCG_BIT_DOUBLE_STRIKE, cnt, 1
						cdbitmod TCG_BIT_HASTE, cnt, 1
						carddetailneff@tcg(cnt) = "Sister Cat? No.???    Roran Thief  Rare:Very\nBits:  Double-Strike Haste\nEffect: "
					}
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 2 ) {
						card@tcg(TCG_CARD_REF_ATTACK, cnt) = 2
						card@tcg(TCG_CARD_REF_COST, cnt) = 2
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(6, 17)
						card@tcg(TCG_CARD_EFFECT, cnt) = TCG_EFF_YANDERE
						carddetailneff@tcg(cnt) = "Yandere Sister No.???    Roran Thief  Rare:Very\nEffect: "
					}
				}
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_OLDER_SISTER ) {
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 1 ) {
						card@tcg(TCG_CARD_REF_COST, cnt) = 4
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(25, 16)
						cdbitmod TCG_BIT_FIRST_STRIKE, cnt, 1
						card@tcg(TCG_CARD_EFFECT, cnt) = TCG_EFF_SMALLOLDERSISTER
						carddetailneff@tcg(cnt) = "Small Older Sister No.???    Roran Archer  Rare:Very\nBits:  First-Strike\nEffect: "
					}
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 2 ) {
						card@tcg(TCG_CARD_REF_COST, cnt) = 3
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(24, 15)
						card@tcg(TCG_CARD_EFFECT, cnt) = TCG_EFF_SUMMEROLDERSISTER
						carddetailneff@tcg(cnt) = "Summer Older Sister No.???    Roran Archer  Rare:Very\nEffect: "
					}
				}
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_GWEN_THE_INNOCENT ) {
					if ( card@tcg(TCG_CARD_TEMP, cnt) == 1 ) {
						card@tcg(TCG_CARD_TEMP, cnt) = 0
						card@tcg(TCG_CARD_REF_COST, cnt) = 2
						card@tcg(TCG_CARD_REF_DBID, cnt) = CREATURE_ID_GWEN_THE_PITILESS
						card@tcg(TCG_CARD_REF_ATTACK, cnt) = 2
						card@tcg(TCG_CARD_REF_PIC, cnt) = xy2pic(18, 15)
						carddetailneff@tcg(cnt) = "Gwen the Innocent Warrior No.???    Roran  Rare:Very\nEffect: Whenever Gwen gets killed, she returns to your Hand with +2/+2."
					}
				}
				if ( card@tcg(TCG_CARD_TEMP, cnt) > 0 ) {
					card@tcg(TCG_CARD_TEMP, cnt) = 0
					reconstruct_card_text cnt
					efllistaddcard 20, cnt
					tcgpass 10 - cnt * 2
				}
			loop
			tcgpass 50
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_ANIM ) { continue }
				card@tcg(TCG_CARD_X_MOVETO, cnt) = deckix@tcg(ap@tcg), deckiy@tcg(ap@tcg)
				tcgpass 2
			loop
			tcgpass 15
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != ap@tcg ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_ANIM ) { continue }
				cdbitmod TCG_BIT_FACE_UP, cnt, 0
				card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_DECK
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RAGNAROK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 ) {
				targetdeck@tcg = 0
				gosub *card_filter_reset
				rndfixlvl@tcg = FIX_QUALITY_GOOD
				if ( rnd(1) == 0 ) { rndrace@tcg = "giant" }
				if ( rnd(2) == 0 ) { rndrace@tcg = "dragon" }
				gosub *card_filter
				create_extra_card aeft@tcg, cardno
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, aeft@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GENERATE_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GENERATE_CAT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			repeat limit(aefp@tcg, 0, 20)
				if ( rnd(1) == 0 ) { p@tcg = CREATURE_ID_CAT }
				if ( rnd(2) == 0 ) { p@tcg = CREATURE_ID_SILVER_CAT }
				if ( rnd(3) == 0 ) { p@tcg = CREATURE_ID_STRAY_CAT }
				if ( rnd(5) == 0 ) {
					if ( rnd(1) == 0 ) { p@tcg = CREATURE_ID_CARBUNCLE }
					if ( rnd(2) == 0 ) { p@tcg = CREATURE_ID_TWINTAIL }
				}
				if ( rnd(10) == 0 ) {
					if ( rnd(1) == 0 ) { p@tcg = CREATURE_ID_LION }
					if ( rnd(2) == 0 ) { p@tcg = CREATURE_ID_MANTICORE }
				}
				if ( rnd(30) == 0 ) {
					if ( rnd(1) == 0 ) { p@tcg = CREATURE_ID_WALL_HACK_CHEATAH }
					if ( rnd(2) == 0 ) { p@tcg = CREATURE_ID_AUTO_AIM_CHEATAH }
					if ( rnd(3) == 0 ) { p@tcg = CREATURE_ID_SPEED_HACK_CHEATAH }
					if ( rnd(4) == 0 ) { p@tcg = CREATURE_ID_ANOTHER_WORLD_CHEATAH }
				}
				if ( cnt == 0 ) {
					if ( rnd(5) == 0 ) { p@tcg = CREATURE_ID_MIA_THE_CAT_FREAK }
					if ( rnd(6) == 0 ) { p@tcg = CREATURE_ID_TALKA_THE_LONG_TWINTAIL }
				}
				create_extra_card aeft@tcg, p@tcg
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GENERATE_CARD_RANDOM | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			gosub *card_filter_reset
			rndfixlvl@tcg = FIX_QUALITY_GOOD
			gosub *card_filter
			create_extra_card aeft@tcg, cardno
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GENERATE_AND_DRAW | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getholdersum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
				if ( cextra@tcg >= 0 ) {
					gettargetcard cextra@tcg
				}
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GENERATE_AND_DRAW011 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getholdersum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
					gettargetcard cextra@tcg
				}
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_COPY_TARGET_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getholdersum(ap@tcg) < 8 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, aeft@tcg), card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_CONTROLLER, cextra@tcg) = ap@tcg
					gettargetcard cextra@tcg
				}
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ALIEN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getholdersum(ap@tcg) < 8 & card@tcg(TCG_CARD_REF_DOMAIN, aeft@tcg) != 5 ) {
				cdbitmod TCG_BIT_BLEEDING, aeft@tcg, 1
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, aeft@tcg), card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				card@tcg(TCG_CARD_HP, cextra@tcg) = 1
				card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
				card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
				card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_CONTROLLER, cextra@tcg) = ap@tcg
					putcard cextra@tcg, ap@tcg
				}
				makecardlist
				tcgdraw
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_LOMIAS | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, ap@tcg
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) += 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) += 1
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) += 1
					card@tcg(TCG_CARD_HP, cextra@tcg) += 1
					cdbitmod TCG_BIT_EXHAUSTED, cextra@tcg, 0
					card@tcg(TCG_CARD_STATUS, cextra@tcg) = TCG_ACTION_NONE
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ZOMBIE_GIRL_EVOLVE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) > 0 ) {
				evhpbk@tcg = card@tcg(TCG_CARD_HP, aeft@tcg)
				evatkbk@tcg = card@tcg(TCG_CARD_ATTACK, aeft@tcg)
				evtarget@tcg = CREATURE_ID_ZOMBIE_GIRL
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_ZOMBIE_GIRL ) {
					if ( rnd(1) == 0 ) { evtarget@tcg = CREATURE_ID_GOTHIC }
					if ( rnd(2) == 0 ) { evtarget@tcg = CREATURE_ID_REQUIEM }
					if ( rnd(3) == 0 ) { evtarget@tcg = -1 } // Stacy
					if ( rnd(4) == 0 ) { evtarget@tcg = -2 } // Baroque
					if ( rnd(5) == 0 ) { evtarget@tcg = -3 } // Thanatos
					if ( rnd(6) == 0 ) { evtarget@tcg = -4 } // Romanesque
				}
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_ZOMBIE_GIRL & card@tcg(TCG_CARD_REF_PIC, aeft@tcg) == xy2pic(10, 25) ) {
					evtarget@tcg = CREATURE_ID_ZOMBIE_QUEEN
				}
				if ( evtarget@tcg >= 0 ) {
					create_card aeft@tcg, evtarget@tcg
				}
				card@tcg(TCG_CARD_HP, aeft@tcg) = evhpbk@tcg
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) = evatkbk@tcg
				if ( evtarget@tcg == -1 ) {
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 25) + COLOR_FRESH * COLOR_TINT_MULT
					card@tcg(TCG_CARD_REF_HP, aeft@tcg) = 5
					card@tcg(TCG_CARD_HP, aeft@tcg) = 5
					card@tcg(TCG_CARD_ATTACK, aeft@tcg) = 1
					cdbitmod TCG_BIT_DEFENDER, aeft@tcg, 1
					cdbitmod TCG_BIT_REGENERATION, aeft@tcg, 1
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_NONE
					carddetailneff@tcg(aeft@tcg) = "Stacy  No.???   female zombie warrior  Rare:None\nBits: Defender Regeneration\nEffect: None."
				}
				if ( evtarget@tcg == -2 ) {
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 25) + COLOR_RED * COLOR_TINT_MULT
					cdbitmod TCG_BIT_WINDFURY, aeft@tcg, 1
					cdbitmod TCG_BIT_WINDFURY_USABLE, aeft@tcg, 1
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_BATTLECRY_DEAL2RANDOMENEMY2DAMAGE
					carddetailneff@tcg(aeft@tcg) = "Baroque  No.???   female zombie thief  Rare:None\nBits: Windfury\nEffect: Battlecry: Deal 2 Damage to 2 Random Enemies."
				}
				if ( evtarget@tcg == -3 ) {
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 25) + COLOR_PINK * COLOR_TINT_MULT
					cdbitmod TCG_BIT_DOUBLE_STRIKE, aeft@tcg, 1
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_BATTLECRY_DEALRANDOMENEMY3DAMAGE
					carddetailneff@tcg(aeft@tcg) = "Thanatos  No.???   female zombie claymore  Rare:None\nBits: Double-Strike\nEffect: Battlecry: Deal 3 Damage to a Random Enemy."
				}
				if ( evtarget@tcg == -4 ) {
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 25)
					carddetailneff@tcg(aeft@tcg) = "Romanesque  No.???   female zombie priest  Rare:None\nEffect: Evolve to a Zombie Queen when this killed something."
				}
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
					if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
						effac@tcg = aeft@tcg
						eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
						if ( cancopyeffect(eff@tcg) ) {
							gosub *card_action_choose_target
							makecardlist
							tcgdraw
						}
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CHAOS_EVOLVE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) > 0 ) {
				evtarget@tcg = -1
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_WAR_SPIRIT ) { evtarget@tcg = CREATURE_ID_CHAOS_PALADIN }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_GUN_SPIRIT ) { evtarget@tcg = CREATURE_ID_CHAOS_HUNTER }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_MAGIC_SPIRIT ) { evtarget@tcg = CREATURE_ID_CHAOS_SHAMAN }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_PUDDING_SPIRIT ) { evtarget@tcg = CREATURE_ID_PUDDING_SPIRIT }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_CHAOS_SEED ) { evtarget@tcg = CREATURE_ID_CHAOS_SERPENT }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_SPIRIT_OF_BREAD ) { evtarget@tcg = CREATURE_ID_ANGRY_BURGER }
				if ( aeff@tcg == TCG_EFF_INQTUAL ) {
					evtarget@tcg = -1
					if ( cardn@tcg(TCG_CARDN_REF_CLASS, aeft@tcg) == "warrior" ) { evtarget@tcg = CREATURE_ID_CHAOS_PALADIN }
					if ( cardn@tcg(TCG_CARDN_REF_CLASS, aeft@tcg) == "archer" ) { evtarget@tcg = CREATURE_ID_CHAOS_HUNTER }
					if ( cardn@tcg(TCG_CARDN_REF_CLASS, aeft@tcg) == "wizard" ) { evtarget@tcg = CREATURE_ID_CHAOS_SHAMAN }
				}
				if ( evtarget@tcg >= 0 ) {
					costbk@tcg = card@tcg(TCG_CARD_REF_COST, aeft@tcg)
					if ( evtarget@tcg != CREATURE_ID_PUDDING_SPIRIT ) {
						create_card aeft@tcg, evtarget@tcg
					} else {
						card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(1, 7) + COLOR_YELLOW * COLOR_TINT_MULT
						carddetailneff@tcg(aeft@tcg) = "Super Pudding Spirit  No.???   spirit thief  Rare:None\nEffect: Battlecry: Double this Card's Stats."
					}
					card@tcg(TCG_CARD_REF_COST, aeft@tcg) = costbk@tcg
					cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
					if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
						cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
					}
					if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
						if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
							effac@tcg = aeft@tcg
							eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
							if ( cancopyeffect(eff@tcg) ) {
								gosub *card_action_choose_target
								makecardlist
								tcgdraw
							}
						}
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CHAOS_SEED_EVOLVE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_CHAOS_SEED & card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) >= effref@tcg(TCG_SKILL_POWER, aeff@tcg) ) {
				create_card aeft@tcg, CREATURE_ID_CHAOS_SERPENT
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
					if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
						effac@tcg = aeft@tcg
						eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
						if ( cancopyeffect(eff@tcg) ) {
							gosub *card_action_choose_target
							makecardlist
							tcgdraw
						}
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_EVOLVE_CTHU | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_CTHULHICK & card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) >= effref@tcg(TCG_SKILL_POWER, aeff@tcg) ) {
				create_card aeft@tcg, CREATURE_ID_NINE_HEAD_DRAGON_THE_ABYSS
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_EVOLVE_LILY | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			effdescbk@tcg = carddetailn@tcg(aeft@tcg)
			effdesc2bk@tcg = carddetailneff@tcg(aeft@tcg)
			turncountbk@tcg = card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg)
			evtarget@tcg = -1
			if ( aefp@tcg == 0 ) {
				if ( turncountbk@tcg >= 1 ) { evtarget@tcg = CREATURE_ID_ETHERIAN }
				if ( turncountbk@tcg >= 3 ) { evtarget@tcg = CREATURE_ID_ETHERIAN_PLUS }
				if ( turncountbk@tcg >= 5 ) { evtarget@tcg = -2 }
			} else {
				if ( turncountbk@tcg == 0 ) { evtarget@tcg = -3 }
				if ( turncountbk@tcg == 1 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_MEM }
				if ( turncountbk@tcg == 1 & rnd(2) == 0 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_FWBS }
				if ( turncountbk@tcg == 2 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_FSSSY }
				if ( turncountbk@tcg == 2 & rnd(2) == 0 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_CHRDH }
				if ( turncountbk@tcg == 3 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_VARGM }
				if ( turncountbk@tcg == 3 & rnd(2) == 0 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_DIBWL }
				if ( turncountbk@tcg >= 4 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_ZEHLS }
			}
			if ( evtarget@tcg >= 0 ) {
				create_card aeft@tcg, evtarget@tcg
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				carddetailn@tcg(aeft@tcg) = effdescbk@tcg
				carddetailneff@tcg(aeft@tcg) = effdesc2bk@tcg
				card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) = turncountbk@tcg
				card@tcg(TCG_CARD_REF_DBID, aeft@tcg) = CREATURE_ID_PAELS_MOM_LILY
				effac@tcg = aeft@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
				card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_LILY
				if ( aefp@tcg == 1 ) {
					carddetailneff@tcg(aeft@tcg) = "Pael's mom <Lily>  No.222   female mutant warrior  Rare:None\nEffect: Lily's Disease is cured, but it's a bit too late."
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_NONE
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(30, 10)
					card@tcg(TCG_CARD_REF_CHARA_PIC, aeft@tcg) = 0
				}
				if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
					if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
						if ( cancopyeffect(eff@tcg) ) {
							gosub *card_action_choose_target
							makecardlist
							tcgdraw
						}
					}
				}
			} else {
				if ( evtarget@tcg == -2 ) {
					aeftlily@tcg = aeft@tcg
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_SIVA
					if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
						if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
							effac@tcg = aeft@tcg
							eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
							if ( cancopyeffect(eff@tcg) ) {
								gosub *card_action_choose_target
								makecardlist
								tcgdraw
							}
						}
					}
					dmgcard aeftlily@tcg, 9999
				}
				if ( evtarget@tcg == -3 ) {
					effac@tcg = aeft@tcg
					eff@tcg = TCG_EFF_DEATHRATTLE_DRAW3CARD
					carddetailn@tcg(aeft@tcg) = effdescbk@tcg
					card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) = turncountbk@tcg
					card@tcg(TCG_CARD_REF_DBID, aeft@tcg) = CREATURE_ID_PAELS_MOM_LILY
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_DEATHRATTLE_DRAW3CARD
					carddetailneff@tcg(aeft@tcg) = "Pael's mom <Lily>  No.222   female roran warrior  Rare:None\nEffect: Lily's Disease is cured! You get 3 cards! Thank you!"
					gosub *card_action_choose_target

				}
			}
			makecardlist
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_FIRE_BATTLECRY | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
					effac@tcg = ac@tcg
					eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
					if ( cancopyeffect(eff@tcg) ) {
						gosub *card_action_choose_target
						makecardlist
						tcgdraw
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_COPY_EFFECT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
				aeft@tcg = ac@tcg
				if ( card@tcg(TCG_CARD_LOCATION, ac@tcg) == TCG_LOCATION_FIELD ) {
					if ( (effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) & TCG_SKILL_TYPE_BATTLECRY) ) {
						effac@tcg = ac@tcg
						eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
						if ( cancopyeffect(eff@tcg) ) {
							gosub *card_action_choose_target
							makecardlist
							tcgdraw
						}
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BEARCUBSUMMON | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, ac@tcg), card@tcg(TCG_CARD_REF_DBID, ac@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 0
					card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_BEARCUB
					carddetailneff@tcg(cextra@tcg) = "bear cub  No.???   very small bear baby  Rare:None\nEffect: If in Grave: All Bears gets +1 Attack."
					putcard cextra@tcg, card@tcg(TCG_CARD_CONTROLLER, cextra@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ZAILE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_REF_DBID, cnt) == card@tcg(TCG_CARD_REF_DBID, aeft@tcg) ) {
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_NONE
					carddetailneff@tcg(aeft@tcg) = "?????  No.???   ?????? ?????  Rare:Unknown\nYou can't seem to remember this Card's Effect."
				}
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GUARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_GRAVEYARD ) {
				returncard aeft@tcg
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = ap@tcg
				gettargetcard aeft@tcg
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MESHERA_CONVERTION | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			cardn@tcg(TCG_CARDN_REF_RACE, aeft@tcg) = "bacteria"
			carddetailneff@tcg(aeft@tcg) = "Meshera-infected  No.???   meshera tourist  Rare:None\nEffect: Battlecry: Transform 1 Card in your Deck into a Meshera."
			card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(31, 13)
			card@tcg(TCG_CARD_REF_CHARA_PIC, aeft@tcg) = 0
			if ( rnd(2) == 0 ) {
				card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)++
				card@tcg(TCG_CARD_ATTACK, aeft@tcg)++
			} else {
				card@tcg(TCG_CARD_REF_HP, aeft@tcg)++
				card@tcg(TCG_CARD_HP, aeft@tcg)++
			}
			card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_MESHERA_TESTER
			cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ZEOME | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( card@tcg(TCG_CARD_LOCATION, ac@tcg) == TCG_LOCATION_FIELD ) {
			returncard ac@tcg
		} else {
			if ( getdecksum(ap@tcg) == 0 & card@tcg(TCG_CARD_REF_DBID, 100 * ap@tcg + 44) != 0 ) {
				cdbitmod TCG_BIT_FACE_UP, c@tcg, 1
				if ( yaminogemu@tcg == 1 & ap@tcg == TCG_CONTROLLER_PLAYER ) {
					specialruleusenofatiguerecoil@tcg(ap@tcg) = 1
					specialruleusealwaysfatigue@tcg(1 - ap@tcg) = 1
					repeat 10
						fatigueplayer 1 - ap@tcg
					loop
					card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = basex@tcg + 118, basey@tcg + 310
					card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_ANIM
					cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
					tcgdraw
					efllistaddchat cnvtalk("Well played... " + cdatan(CDATAN_NAME, CHARA_PLAYER) + "."), ac@tcg
					tcgpass 150
					saccard ac@tcg, ap@tcg
					sac@tcg = 0
				} else {
					cpdata@tcg(TCG_PLAYER_LIFE, 1 - ap@tcg) = 0
					gameresult@tcg = 5 + (ap@tcg == 1)
				}
				tcgpass 30
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MESHERA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		f@tcg = 1
		repeat maxcard@tcg
			if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_DECK & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_HAND & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_FIELD ) {
				continue
			}
			if ( card@tcg(TCG_CARD_CONTROLLER, cnt) == ap@tcg ) {
				continue
			}
			if ( cardn@tcg(TCG_CARDN_REF_RACE, cnt) != "bacteria" | card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_RENAI_THE_OVER_MESHERA ) {
				f@tcg = 0
				break
			}
		loop
		if ( f@tcg == 1 ) {
			if ( yaminogemu@tcg == 1 & ap@tcg == TCG_CONTROLLER_PLAYER ) {
				specialruleusenofatiguerecoil@tcg(ap@tcg) = 1
				specialruleusealwaysfatigue@tcg(1 - ap@tcg) = 1
				repeat 10
					fatigueplayer 1 - ap@tcg
				loop
				card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = basex@tcg + 118, basey@tcg + 310
				card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_ANIM
				cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
				tcgdraw
				tcgpass 150
				saccard ac@tcg, ap@tcg
				sac@tcg = 0
			} else {
				cpdata@tcg(TCG_PLAYER_LIFE, 1 - ap@tcg) = 0
				gameresult@tcg = 7 + (cp@tcg == 1)
			}
		}
		tcgpass 30
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_UNITDEAD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( card@tcg(TCG_CARD_REF_DBID, 100 * ap@tcg + 59) != 0 ) {
			p@tcg = 0, 0, 0, 0
			repeat clistmax@tcg(0+3*ap@tcg)
				if ( card@tcg(TCG_CARD_LOCATION, clist@tcg(cnt, 0+3*ap@tcg)) != TCG_LOCATION_HAND ) {
					continue
				}
				if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_UNITDEAD_KING ) { 
					p@tcg(0) = 1 
					cdbitmod TCG_BIT_FACE_UP, clist@tcg(cnt, 0+3*ap@tcg), 1
				}
				if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_UNITDEAD_QUEEN ) { 
					p@tcg(1) = 1 
					cdbitmod TCG_BIT_FACE_UP, clist@tcg(cnt, 0+3*ap@tcg), 1
				}
				if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_UNITDEAD_JACK ) { 
					p@tcg(2) = 1 
					cdbitmod TCG_BIT_FACE_UP, clist@tcg(cnt, 0+3*ap@tcg), 1
				}
				if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_UNITDEAD_JOKER ) { 
					p@tcg(3) = 1 
					cdbitmod TCG_BIT_FACE_UP, clist@tcg(cnt, 0+3*ap@tcg), 1
				}
			loop
			if ( p@tcg(0) + p@tcg(1) + p@tcg(2) + p@tcg(3) == 4 ) {
				if ( yaminogemu@tcg == 1 & ap@tcg == TCG_CONTROLLER_PLAYER ) {
					specialruleusenofatiguerecoil@tcg(ap@tcg) = 1
					specialruleusealwaysfatigue@tcg(1 - ap@tcg) = 1
					repeat 10
						fatigueplayer 1 - ap@tcg
					loop
					card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = basex@tcg + 118, basey@tcg + 310
					card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_ANIM
					cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
					tcgdraw
					tcgpass 150
					repeat maxcard@tcg
						if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != card@tcg(TCG_CARD_CONTROLLER, ap@tcg) ) { continue }
						if ( card@tcg(TCG_CARD_REF_DBID, cnt) != CREATURE_ID_UNITDEAD_KING ) { continue }
						if ( card@tcg(TCG_CARD_REF_DBID, cnt) != CREATURE_ID_UNITDEAD_QUEEN ) { continue }
						if ( card@tcg(TCG_CARD_REF_DBID, cnt) != CREATURE_ID_UNITDEAD_JACK ) { continue }
						if ( card@tcg(TCG_CARD_REF_DBID, cnt) != CREATURE_ID_UNITDEAD_JOKER ) { continue }
						saccard cnt, ap@tcg
					loop
				} else {
					cpdata@tcg(TCG_PLAYER_LIFE, 1 - ap@tcg) = 0
					gameresult@tcg = 9 + (ap@tcg == 1)
				}
				goto *actionproc_WEND1
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BAN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( rnd(10) == 0 ) {
			if ( yaminogemu@tcg == 1 & ap@tcg == TCG_CONTROLLER_OPPONENT ) {
				specialruleusenofatiguerecoil@tcg(1 - ap@tcg) = 1
				specialruleusealwaysfatigue@tcg(ap@tcg) = 1
				repeat 10
					fatigueplayer ap@tcg
				loop
				card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = basex@tcg + 118, basey@tcg + 310
				card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_ANIM
				cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
				tcgdraw
				tcgpass 150
				saccard ac@tcg, ap@tcg
				sac@tcg = 0
			} else {
				cpdata@tcg(TCG_PLAYER_LIFE, ap@tcg) = 0
				gameresult@tcg = 11 + (ap@tcg == 0)
			}
			tcgpass 30
			goto *actionproc_WEND1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_VIEWDECK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == player@tcg ) {
			deckmode@tcg = -1
			deckmodecp@tcg = 1
			gosub *select_deck
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_LOCATION, cnt) == TCG_LOCATION_DECK ) {
					cdbitmod TCG_BIT_FACE_UP, cnt, 0
				}
			loop
			deckmode@tcg = 0
			deckmodecp@tcg = 0
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_VIEWHAND | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == player@tcg ) {
			repeat clistmax@tcg(0+3*(1-aeft@tcg))
				cdbitmod TCG_BIT_FACE_UP, clist@tcg(cnt, 0+3*(1-aeft@tcg)), 1
			loop
			specialruleseeopponenthand@tcg = 1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RIANNA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == player@tcg ) {
			specialruleaitakeover@tcg = 1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GARZEIM | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		efllistaddchat "\"Hmm, you've been playing for " + hour_played + " hours and " + ((timeGetTime() / 1000 - time_warn)/60) + " minutes.\"", ac@tcg
		if ( hour_played >= 24 ) {
			if ( yaminogemu@tcg == 1 & ap@tcg == TCG_CONTROLLER_PLAYER ) {
				specialruleusenofatiguerecoil@tcg(ap@tcg) = 1
				specialruleusealwaysfatigue@tcg(1 - ap@tcg) = 1
				repeat 10
					fatigueplayer 1 - ap@tcg
				loop
				card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = basex@tcg + 118, basey@tcg + 310
				card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_ANIM
				cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
				tcgdraw
				tcgpass 150
				card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_FIELD
				makecardlist
				cardpos 0, -1
				cardpos 1, -1
			} else {
				cpdata@tcg(TCG_PLAYER_LIFE, 1 - ap@tcg) = 0
				gameresult@tcg = 13 + (ap@tcg == 1)
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_TIMESTOP | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			specialruletimestop@tcg = effref@tcg(TCG_SKILL_POWER, aeff@tcg) * (1 - 2 * aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_GAINATTACKREDUCECOST | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_COST, aeft@tcg) - effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg) + effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, TCG_STAT_MAX)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_GAINATTACK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg) + effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, TCG_STAT_MAX)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_SELFGAIN10 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, ac@tcg) = limit(card@tcg(TCG_CARD_ATTACK, ac@tcg) + 1, 0, TCG_STAT_MAX)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_GAINATTACKEACHX | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			x@tcg = 0
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -1 ) { 
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) ) { continue }
					if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_GRAVEYARD & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_FIELD ) { continue }
					if ( cardn@tcg(TCG_CARDN_REF_RACE, cnt) == "minotaur" ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -2 ) { 
				repeat maxcard@tcg
					if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) ) { continue }
					if ( cardn@tcg(TCG_CARDN_REF_RACE, cnt) == "minotaur" ) { x@tcg++ }
				loop
				x@tcg /= 2
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -3 ) { 
				if ( ct@tcg == card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) ) { x@tcg++ }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -4 ) { 
				if ( ct@tcg != card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) ) { x@tcg++ }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -5 ) { 
				if ( card@tcg(TCG_CARD_REF_HP, aeft@tcg) > card@tcg(TCG_CARD_HP, aeft@tcg) ) { x@tcg = 1 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -6 ) { 
				x@tcg = 0, 0, 0, 0, 0, 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 0 ) { x@tcg(0) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 1 ) { x@tcg(1) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 2 ) { x@tcg(2) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 3 ) { x@tcg(3) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 6 ) { x@tcg(4) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 7 ) { x@tcg(5) = 1 }
				loop
				x@tcg = x@tcg(0) + x@tcg(1) + x@tcg(2) + x@tcg(3) + x@tcg(4) + x@tcg(5)
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -7 ) {
				if ( gdata(GDATA_MONTH) == 12 ) { x@tcg = 1 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -8 ) {
				if ( gdata(GDATA_WORLD) == AREA_OCEAN ) { x@tcg = 1 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -9 ) { x@tcg = hour_played }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -10 ) {
				if ( hour_played >= 3 ) { x@tcg = 1 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -11 ) {
				if ( cdbit(TCG_BIT_BLEEDING, aeft@tcg) ) { x@tcg = 1 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -12 ) {
				x@tcg = clistmax@tcg(0+3*ap@tcg) == 4
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -13 ) {
				repeat clistmax@tcg(1+ap@tcg)
					if ( cdbit(TCG_BIT_CITIZEN, clist@tcg(cnt, 1+ap@tcg)) ) {
						x@tcg++
					}
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -14 ) { 
				x@tcg = 0
				repeat gravesum@tcg(ap@tcg)
					if ( cdbit(TCG_BIT_ELEAREFUGEE, gravelist@tcg(cnt, ap@tcg)) ) { x@tcg++ }
				loop
			}
			x@tcg *= effref@tcg(TCG_SKILL_POWER, aeff@tcg)
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg) + x@tcg, 0, TCG_STAT_MAX)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_REDUCECOST | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_COST, aeft@tcg) - effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, TCG_STAT_MAX)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_REDUCECOSTEACHX | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			x@tcg = 0
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -1 ) { x@tcg = card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -2 ) { x@tcg = getholdersum(ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -3 ) { x@tcg = getspotsum(ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -4 ) { x@tcg = getdecksum(ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -5 ) { x@tcg = getholdersum(1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -6 ) { x@tcg = getspotsum(1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -7 ) { x@tcg = getdecksum(1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -8 ) { x@tcg = specialrulemanaspent@tcg(ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -9 ) { x@tcg = specialrulemanaspent@tcg(1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -10 ) { x@tcg = turn@tcg }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -11 ) { 
				x@tcg = 0
				repeat clistmax@tcg(1+ap@tcg)
					if ( card@tcg(TCG_CARD_EFFECT, clist@tcg(cnt, 1+ap@tcg)) == TCG_EFF_ORPHE ) {
						x@tcg = 9
						break
					}
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -12 ) { 
				x@tcg = 0, 0, 0, 0, 0, 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 0 ) { x@tcg(0) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 1 ) { x@tcg(1) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 2 ) { x@tcg(2) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 3 ) { x@tcg(3) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 6 ) { x@tcg(4) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 7 ) { x@tcg(5) = 1 }
				loop
				x@tcg = x@tcg(0) + x@tcg(1) + x@tcg(2) + x@tcg(3) + x@tcg(4) + x@tcg(5)
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -13 ) { 
				if ( card@tcg(TCG_CARD_REF_HP, aeft@tcg) > card@tcg(TCG_CARD_HP, aeft@tcg) ) { x@tcg = 120 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -14 ) { x@tcg = limit(cpdata@tcg(TCG_PLAYER_LIFE_TOTAL, ap@tcg) - cpdata@tcg(TCG_PLAYER_LIFE, ap@tcg), 0, 2000) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -15 ) { x@tcg = limit(cpdata@tcg(TCG_PLAYER_LIFE_TOTAL, 1 - ap@tcg) - cpdata@tcg(TCG_PLAYER_LIFE, 1 - ap@tcg), 0, 2000) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -16 ) { 
				if ( turn@tcg < effref@tcg(TCG_SKILL_POWER, aeff@tcg) ) { x@tcg = -9999 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -17 ) { x@tcg = gdata(GDATA_FLAG_THROWN_CHESTNUTS) / 10 }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -18 ) { 
				x@tcg = 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 4 & card@tcg(TCG_CARD_COST, clist@tcg(cnt, 0+3*ap@tcg)) < 2 ) {
						x@tcg++
					}
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -19 ) { x@tcg = 2 * (getspotsum(ap@tcg) < getspotsum(1-ap@tcg)) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -20 ) { 
				x@tcg = 0
				repeat gravesum@tcg(ap@tcg)
					if ( cdbit(TCG_BIT_YERLES, gravelist@tcg(cnt, ap@tcg)) ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -21 ) { 
				x@tcg = 0
				repeat clistmax@tcg(1+ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_MILITARY_PUTIT ) { x@tcg+=10 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_PUTIT_TANK ) { x@tcg+=10 }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -22 ) { 
				x@tcg = 0
				repeat clistmax@tcg(1+ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_KUROYA_THE_LOOKING_UNIVERSE ) { x@tcg+=10 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_BELPHAT_THE_COSMIC_SWORD ) { x@tcg+=10 }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -23 ) { 
				x@tcg = 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_SILVIA_THE_PRINCESS ) { x@tcg+=10 }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -24 ) { 
				x@tcg = 0
				repeat maxcard@tcg
					// if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != aeft@tcg ) { continue }
					if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_GRAVEYARD ) { continue }
					if ( cardn@tcg(TCG_CARDN_REF_RACE, cnt) != "cat" & cardn@tcg(TCG_CARDN_REF_RACE, cnt) != "catgod" & card@tcg(TCG_CARD_REF_DBID, cnt) != CREATURE_ID_YOUNGER_CAT_SISTER & card@tcg(TCG_CARD_REF_DBID, cnt) != CREATURE_ID_CAT_ZOMBIE & card@tcg(TCG_CARD_REF_DBID, cnt) != CREATURE_ID_BLACK_CAT ) { continue }
					x@tcg++
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -25 ) { x@tcg = gravesum@tcg(1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -26 ) { x@tcg = gdata(GDATA_PLAY_TIME) / 60 / 60 / 100 }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -27 ) { 
				x@tcg = 0, 0
				repeat clistmax@tcg(1+ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_ESTORK_THE_DOGGOD ) { x@tcg(0) = card@tcg(TCG_CARD_ATTACK, clist@tcg(cnt, 1+ap@tcg)) }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_SAIMEF_THE_DOGGOD ) { x@tcg(1) = card@tcg(TCG_CARD_ATTACK, clist@tcg(cnt, 1+ap@tcg)) }
				loop
				if ( x@tcg(0) < card@tcg(TCG_CARD_REF_COST, aeft@tcg) & card@tcg(TCG_CARD_REF_COST, aeft@tcg) < x@tcg(1) ) {
					x@tcg = 999
				} else {
					x@tcg = 0
				}
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -28 ) { 
				x@tcg = 0
				repeat clistmax@tcg(1)
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 1)) == 0 ) { x@tcg++ }
				loop
				repeat clistmax@tcg(2)
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 2)) == 0 ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -29 ) { 
				x@tcg = 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( cardn@tcg(TCG_CARDN_REF_RACE, clist@tcg(cnt, 0+3*ap@tcg)) == "machine" ) { x@tcg++ }
					if ( cardn@tcg(TCG_CARDN_REF_RACE, clist@tcg(cnt, 0+3*ap@tcg)) == "vehicle" ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -30 ) { 
				x@tcg = (13000 - cdata(CDATA_HUNGER, CHARA_PLAYER)) / 1000
				if ( cdata(CDATA_HUNGER, CHARA_PLAYER) < 1000 ) {
					x@tcg = 999
				}
			}
			x@tcg /= effref@tcg(TCG_SKILL_POWER, aeff@tcg)
			card@tcg(TCG_CARD_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_COST, aeft@tcg) - x@tcg, 0, TCG_STAT_MAX)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_LASTRAVEN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getholdersum(ap@tcg) == 0 ) {
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) += 2
				cdbitmod TCG_BIT_DOUBLE_STRIKE, aeft@tcg, 1
			} else {
				cdbitmod TCG_BIT_DOUBLE_STRIKE, aeft@tcg, 0
			}
			if ( getspotsum(ap@tcg) <= 1 ) {
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) += 2
				cdbitmod TCG_BIT_VIGILANCE, aeft@tcg, 1
			} else {
				cdbitmod TCG_BIT_VIGILANCE, aeft@tcg, 0
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_EHEKATL | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) = limit(rnd(rnd(9)+1) + rnd(rnd(6)+1), 0, TCG_STAT_MAX)
			card@tcg(TCG_CARD_COST, aeft@tcg) = card@tcg(TCG_CARD_REF_COST, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_KEEPSTAT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_ATTACK, aeft@tcg) > card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) ) {
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) = card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)
			}
			if ( card@tcg(TCG_CARD_COST, aeft@tcg) < card@tcg(TCG_CARD_REF_COST, aeft@tcg) ) {
				card@tcg(TCG_CARD_COST, aeft@tcg) = card@tcg(TCG_CARD_REF_COST, aeft@tcg)
			}
			if ( card@tcg(TCG_CARD_HP, aeft@tcg) < card@tcg(TCG_CARD_REF_HP, aeft@tcg) ) {
				card@tcg(TCG_CARD_REF_HP, aeft@tcg) = card@tcg(TCG_CARD_HP, aeft@tcg)
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SWAPDECKANDGRAVE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != aeft@tcg ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) == TCG_LOCATION_GRAVEYARD ) {
					card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_DECK
				} else {
					if ( card@tcg(TCG_CARD_LOCATION, cnt) == TCG_LOCATION_DECK ) {
						card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_GRAVEYARD
					}
				}
			loop
			efllistadd 2, 0, graveix@tcg, graveiy@tcg, deckix@tcg, deckiy@tcg
			cpdata@tcg(TCG_PLAYER_DECK, aeft@tcg) = getdecksum(aeft@tcg)
			cardposgrave aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_KARATA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) == 1 ) {
				effac@tcg = ac@tcg
				eff@tcg = TCG_EFF_DARKARTIFICIALGIANT
				gosub *card_action_choose_target
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SWAPGENDER | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( cardn@tcg(TCG_CARDN_REF_SEX) == "male" ) {
				cardn@tcg(TCG_CARDN_REF_SEX) = "female"
			} else {
				if ( cardn@tcg(TCG_CARDN_REF_SEX) = "female" ) {
					cardn@tcg(TCG_CARDN_REF_SEX) = "male"
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_JALDABOTH | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			specialrulekamui@tcg(aeft@tcg)++
			if ( specialrulekamui@tcg(aeft@tcg) == 8 ) {
				if ( cdata(CDATA_ID, tc) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD | cdata(CDATA_ID, tc) == CREATURE_ID_THE_CHAOS_CHILD ) {
					if ( aeft@tcg == 1 & cdata(CDATA_ID, tc) == CREATURE_ID_THE_CHAOS_CHILD ) {
						// (probably) Impossible to beat variant.
						efllistaddchat cnvtalk("I tire of this."), ac@tcg
						tcgpass 150
						efllistaddchat cnvtalk("I am finished with your games... All of you shall turn to ash."), ac@tcg
						tcgpass 150
						efllistaddchat cnvtalk("<HOROBI NO YARI> Destroy Target Player"), ac@tcg
						tcgpass 150
						cpdata@tcg(TCG_PLAYER_LIFE, TCG_CONTROLLER_PLAYER) = 0
						gameresult@tcg = 15 + (TCG_CONTROLLER_PLAYER == 0)
						tcgpass 30
						goto *actionproc_WEND1
					}
					if ( aeft@tcg == 1 & cdata(CDATA_ID, tc) != CREATURE_ID_THE_CHAOS_CHILD ) {
						// Possible to beat variant.
						efllistaddchat cnvtalk("I tire of this stupid card game."), ac@tcg
						tcgpass 150
						efllistaddchat cnvtalk("But since that I have obtained this tremendous power, that is now a trifling matter..."), ac@tcg
						tcgpass 150
						efllistaddchat cnvtalk("<Origin of Chaos> Remove the Chaos Child's Card Text"), ac@tcg
						tcgpass 150
						cdbitmod TCG_BIT_ENEMY, ac@tcg, 0
						cdbitmod TCG_BIT_DEFENDER, ac@tcg, 0
						cdbitmod TCG_BIT_EVASION, ac@tcg, 0
						card@tcg(TCG_CARD_EFFECT, ac@tcg) = TCG_EFF_NONE
						carddetailneff@tcg(ac@tcg) = ""
						goto *actionproc_WEND1
					}
				}
				if ( yaminogemu@tcg == 1 & aeft@tcg == TCG_CONTROLLER_PLAYER ) {
					specialruleusenofatiguerecoil@tcg(aeft@tcg) = 1
					specialruleusealwaysfatigue@tcg(1 - aeft@tcg) = 1
					repeat 10
						fatigueplayer 1 - aeft@tcg
					loop
				} else {
					cpdata@tcg(TCG_PLAYER_LIFE, aeft@tcg) = 0
					gameresult@tcg = 15 + (aeft@tcg == 0)
				}
				tcgpass 30
				goto *actionproc_WEND1
			}
			aeftbk@tcg = aeft@tcg
			cardidbk@tcg = card@tcg(TCG_CARD_REF_DBID, effac@tcg)
			repeat 1
				if ( getholdersum(aeftbk@tcg) >= 7 ) { break }
				create_extra_card aeftbk@tcg, cardidbk@tcg
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
					cdbitmod TCG_BIT_ENEMY, cextra@tcg, 0
					cdbitmod TCG_BIT_REGENERATION, cextra@tcg, 0
					cdbitmod TCG_BIT_DEFENDER, cextra@tcg, 0
					cdbitmod TCG_BIT_EVASION, cextra@tcg, 0
					cdbitmod TCG_BIT_COMMAND, cextra@tcg, 1
					if ( specialrulekamui@tcg(aeft@tcg) == 1 ) { efllistaddchat cnvtalk("<Sigh of the Creator Gods>"), ac@tcg }
					if ( specialrulekamui@tcg(aeft@tcg) == 2 ) { efllistaddchat cnvtalk("<Roar of the War Gods>"), ac@tcg }
					if ( specialrulekamui@tcg(aeft@tcg) == 3 ) { efllistaddchat cnvtalk("<Claws of the Beast Gods>"), ac@tcg }
					if ( specialrulekamui@tcg(aeft@tcg) == 4 ) { efllistaddchat cnvtalk("<Sentence of the Judicial Gods>"), ac@tcg }
					if ( specialrulekamui@tcg(aeft@tcg) == 5 ) { efllistaddchat cnvtalk("<Grudge of the Abominable Gods>"), ac@tcg }
					if ( specialrulekamui@tcg(aeft@tcg) == 6 ) { efllistaddchat cnvtalk("<Commandment of the Hell Gods>"), ac@tcg }
					if ( specialrulekamui@tcg(aeft@tcg) == 7 ) { efllistaddchat cnvtalk("<End of All Things>"), ac@tcg }
					card@tcg(TCG_CARD_X, cextra@tcg) = card@tcg(TCG_CARD_X, effac@tcg), card@tcg(TCG_CARD_Y, effac@tcg)
					kamuilist@tcg = 0, TCG_EFF_KAMUI1, TCG_EFF_KAMUI2, TCG_EFF_KAMUI3, TCG_EFF_KAMUI4, TCG_EFF_KAMUI5, TCG_EFF_KAMUI6, TCG_EFF_KAMUI7
					card@tcg(TCG_CARD_REF_PIC, cextra@tcg) = -23 - specialrulekamui@tcg(aeft@tcg)
					card@tcg(TCG_CARD_EFFECT, cextra@tcg) = kamuilist@tcg(specialrulekamui@tcg(aeft@tcg))
					card@tcg(TCG_CARD_REF_BG, cextra@tcg) = specialrulekamui@tcg(aeft@tcg)
					carddetailneff@tcg(cextra@tcg) = effdesc@tcg(card@tcg(TCG_CARD_EFFECT, cextra@tcg))
					gettargetcard cextra@tcg
				}
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_KAMUI | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aefp@tcg == 1 ) {
			if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
				cpdata@tcg(TCG_PLAYER_LIFE, aeft@tcg) = cpdata@tcg(TCG_PLAYER_LIFE_TOTAL, aeft@tcg)
			}
		}
		if ( aefp@tcg == 2 ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) += card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)
				card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)
				card@tcg(TCG_CARD_HP, aeft@tcg) += card@tcg(TCG_CARD_REF_HP, aeft@tcg)
				card@tcg(TCG_CARD_REF_HP, aeft@tcg) += card@tcg(TCG_CARD_REF_HP, aeft@tcg)
				efllistadd 2, 2, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			}
		}
		if ( aefp@tcg == 3 ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card@tcg(TCG_CARD_HP, aeft@tcg) /= 2
				card@tcg(TCG_CARD_REF_HP, aeft@tcg) /= 2
				efllistadd 2, -2, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
				if ( card@tcg(TCG_CARD_HP, aeft@tcg) <= 0) {
					gravecard aeft@tcg
				}
			}
		}
		if ( aefp@tcg == 4 ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				tcgpass animespeed@tcg * 10
				cdbitmod TCG_BIT_PARALYSED, aeft@tcg, 1
				efllistaddcard 7, aeft@tcg
				cdbitmod TCG_BIT_DEATHWORD, aeft@tcg, 1
				efllistaddcard 19, aeft@tcg
			}
		}
		if ( aefp@tcg == 5 ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				efllistaddcard 22, aeft@tcg
				tcgpass animespeed@tcg * 10
				cdbitmod TCG_BIT_INSANE, aeft@tcg, 1
			}
		}
		if ( aefp@tcg == 6 ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) /= 2
				card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) /= 2
				efllistadd 2, -2, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			}
		}
		if ( aefp@tcg == 7 ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				gravecard aeft@tcg
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAINSPELLDAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			specialruleeffectdamage@tcg(aeft@tcg) += aefp@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MIZUKI | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		specialruledrawtwocardsperturn@tcg = 1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_EXILE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		specialrulebattlecrytwice@tcg += effref@tcg(TCG_SKILL_POWER, aeff@tcg)
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_IMMEDIATECOMBAT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		makecardlist
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg & ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			cardstack@tcg(TCG_STACK, stack@tcg) = ac@tcg, TCG_ACTION_ATTACKING, cp@tcg, aeft@tcg
			stack@tcg++
		}
		_switch_sw@tcg++
	}
	*actionproc_SWEND1
	cpisme
	if ( card@tcg(TCG_CARD_REF_TYPE, ac@tcg) == TCG_TYPE_SPELL ) {
		card@tcg(TCG_CARD_ANIM, ac@tcg) = TCG_ANIM_FADE, 18
		tcgdraw
		gravecard ac@tcg
	}
	*actionproc_WHILE1_CONTINUE
	goto *actionproc_WHILE1
	*actionproc_WEND1
	stack@tcg = 0
	deckmode@tcg = 0
	deckmodecp@tcg = 0
	cpisme
	return
