#deffunc activatecard int activatecard_arg1, int
	efllistadd 3, 0, card@tcg(TCG_CARD_X, activatecard_arg1), card@tcg(TCG_CARD_Y, activatecard_arg1)
	card@tcg(TCG_CARD_ANIM, activatecard_arg1) = TCG_ANIM_ACTIVATE, 60
	tcgdraw
	return

#deffunc actionchain
	chainmode@tcg = 1
	chaincontinue@tcg = 0
	*actionchain_WHILE1
	tcgdraw
	chaintime@tcg--
	if ( chaintime@tcg == 0 ) {
		goto *actionchain_WEND1
	}
	await 15
	stick a@tcg
	key_check
	repeat 2
		if ( cnt == player@tcg ) {
			if ( key != "" ) {
				snd SOUNDLIST_FAIL1
				chaintime@tcg = 1
				cpisplayer
				cs@tcg = -1
				selectmodebk@tcg = selectmode@tcg
				selectmode@tcg = 2
				gosub *card_player
				selectmode@tcg = selectmodebk@tcg
				break
			}
		}
		else {
			if ( chaintime@tcg == cfg_chaintime / 2 ) {
				if ( cnt != cp@tcg ) {
					cpflip
				}
				gosub *card_ai
				break
			}
		}
	loop
	if ( chaincontinue@tcg ) {
		goto *actionchain_WEND1
	}
	goto *actionchain_WHILE1
	*actionchain_WEND1
	chaintime@tcg = 0
	chainmode@tcg = 0
	cpisme
	return chaincontinue@tcg

#deffunc actionproc
	spellused@tcg = 0
	*actionproc_WHILE1
	// On activate block.
	if ( stack@tcg > 0 ) {
		cc@tcg = cardstack@tcg(TCG_STACK_CARD, stack@tcg - 1)
		if ( spellused@tcg == 0 ) {
			if ( cardstack@tcg(TCG_STACK_ACTION, stack@tcg - 1) == TCG_ACTION_ATTACKING ) {
				attackingcard@tcg = cc@tcg
				if ( cp@tcg == TCG_CONTROLLER_PLAYER ) {
					card@tcg(TCG_CARD_Y_MOVETO, cc@tcg) -= 25
				}
				else {
					card@tcg(TCG_CARD_Y_MOVETO, cc@tcg) += 25
				}
				card@tcg(TCG_CARD_STATUS, cc@tcg) = TCG_ACTION_ATTACKING
				if ( cdbit(TCG_BIT_WINDFURY_USABLE, cc@tcg) == TRUE ) {
					cdbitmod TCG_BIT_WINDFURY_USABLE, cc@tcg, 0
				} else {
					cdbitmod TCG_BIT_EXHAUSTED, cc@tcg, 1
				}
				tcgdraw
				attacktarget@tcg = -1
				cpisenemy
				chainmode@tcg = 1
				if ( cp@tcg == player@tcg ) {
					cs@tcg = -1
					repeat clistmax@tcg(cl@tcg)
						c@tcg = clist@tcg(cnt, cl@tcg)
						if ( cdbit(TCG_BIT_EXHAUSTED, c@tcg) == 0 | card@tcg(TCG_CARD_STATUS, c@tcg) == TCG_ACTION_EXHAUSTED ) {
							cs@tcg = cnt
							csline@tcg = cl@tcg
							break
						}
					loop
					selectmode@tcg = 1
					gosub *card_player
					selectmode@tcg = -1
				}
				else {
					aiblock@tcg = 1
					gosub *card_ai
					aiblock@tcg = 0
				}
				chainmode@tcg = 0
				if ( spellused@tcg ) {
					goto *actionproc_WHILE1_CONTINUE
				}
			}
		}
	}
	stack@tcg--
	if ( stack@tcg < 0 ) {
		goto *actionproc_WEND1
	}
	// On resolve block
	ac@tcg = cardstack@tcg(TCG_STACK_CARD, stack@tcg)
	act@tcg = cardstack@tcg(TCG_STACK_ACTION, stack@tcg)
	ap@tcg = cardstack@tcg(TCG_STACK_CONTROLLER, stack@tcg)
	aeff@tcg = cardstack@tcg(TCG_STACK_EFFECT, stack@tcg)
	aeft@tcg = cardstack@tcg(TCG_STACK_TARGET, stack@tcg)
	aefp@tcg = cardstack@tcg(TCG_STACK_POWER, stack@tcg)
	if ( dbg_tcg ) { 
		dialog "Stack:" + stack@tcg + "/" + ac@tcg + "/" + act@tcg + "/" + ap@tcg + "/" + aflt@tcg + "/" + aeft@tcg + "/" + aefp@tcg
	}
	if ( ap@tcg != cp@tcg ) {
		cpflip
	}
	if ( cardstack@tcg(TCG_STACK_ACTION, stack@tcg) == TCG_ACTION_INVOKING ) {
		act@tcg = card@tcg(TCG_CARD_EFFECT, ac@tcg)
		card@tcg(TCG_CARD_STATUS, ac@tcg) = TCG_ACTION_INVOKING
	}
	_switch_val@tcg = act@tcg
	if ( _switch_val@tcg == TCG_ACTION_ATTACKING | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		tc@tcg = attacktarget@tcg
		if ( tc@tcg != (-1) ) {
			if ( cdbit(TCG_BIT_VIGILANCE, tc@tcg) | cdbit(TCG_BIT_DEFENDER, tc@tcg) ) {
				card@tcg(TCG_CARD_STATUS, tc@tcg) = TCG_ACTION_NONE
			} else {
				card@tcg(TCG_CARD_STATUS, tc@tcg) = TCG_ACTION_DEFENDING
				cdbitmod TCG_BIT_EXHAUSTED, tc@tcg, 1
			}
			if ( cp@tcg == TCG_CONTROLLER_PLAYER ) {
				card@tcg(TCG_CARD_Y_MOVETO, tc@tcg) += 25
			}
			else {
				card@tcg(TCG_CARD_Y_MOVETO, tc@tcg) -= 25
			}
			tcgdraw
			if ( cdbit(TCG_BIT_FIRST_STRIKE, ac@tcg) | cdbit(TCG_BIT_DOUBLE_STRIKE, ac@tcg) ) {
				if ( (cdbit(TCG_BIT_TRAMPLE, ac@tcg)|specialrulelifeordeathcombat@tcg) & card@tcg(TCG_CARD_ATTACK, ac@tcg) > card@tcg(TCG_CARD_HP, tc@tcg) ) {
					dmgplayer card@tcg(TCG_CARD_CONTROLLER, tc@tcg), card@tcg(TCG_CARD_ATTACK, ac@tcg) - card@tcg(TCG_CARD_HP, tc@tcg)
				}
				if ( cdbit(TCG_BIT_LIFELINK, ac@tcg) ) {
					dmgplayer card@tcg(TCG_CARD_CONTROLLER, ac@tcg), (-1) * limit(card@tcg(TCG_CARD_ATTACK, ac@tcg), 0, card@tcg(TCG_CARD_HP, tc@tcg))
				}
				dmgcard tc@tcg, card@tcg(TCG_CARD_ATTACK, ac@tcg) + cdbit(TCG_BIT_DEATHTOUCH, ac@tcg) * 999
				tc@tcg = attacktarget@tcg
				ac@tcg = attackingcard@tcg
			}
			if ( cdbit(TCG_BIT_FIRST_STRIKE, tc@tcg) | cdbit(TCG_BIT_DOUBLE_STRIKE, tc@tcg) ) {
				if ( cdbit(TCG_BIT_LIFELINK, tc@tcg) ) {
					dmgplayer card@tcg(TCG_CARD_CONTROLLER, tc@tcg), (-1) * limit(card@tcg(TCG_CARD_ATTACK, tc@tcg), 0, card@tcg(TCG_CARD_HP, ac@tcg))
				}
				dmgcard ac@tcg, card@tcg(TCG_CARD_ATTACK, tc@tcg) + cdbit(TCG_BIT_DEATHTOUCH, tc@tcg) * 999
				tc@tcg = attacktarget@tcg
				ac@tcg = attackingcard@tcg
			}
			if ( card@tcg(TCG_CARD_LOCATION, ac@tcg) == TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, tc@tcg) == TCG_LOCATION_FIELD ) {
				if ( cdbit(TCG_BIT_FIRST_STRIKE, ac@tcg) != TRUE ) {
					if ( (cdbit(TCG_BIT_TRAMPLE, ac@tcg)|specialrulelifeordeathcombat@tcg) & card@tcg(TCG_CARD_ATTACK, ac@tcg) > card@tcg(TCG_CARD_HP, tc@tcg) ) {
						dmgplayer card@tcg(TCG_CARD_CONTROLLER, tc@tcg), card@tcg(TCG_CARD_ATTACK, ac@tcg) - card@tcg(TCG_CARD_HP, tc@tcg)
					}
					if ( cdbit(TCG_BIT_LIFELINK, ac@tcg) ) {
						dmgplayer card@tcg(TCG_CARD_CONTROLLER, ac@tcg), (-1) * limit(card@tcg(TCG_CARD_ATTACK, ac@tcg), 0, card@tcg(TCG_CARD_HP, tc@tcg))
					}
					dmgcard tc@tcg, card@tcg(TCG_CARD_ATTACK, ac@tcg) + cdbit(TCG_BIT_DEATHTOUCH,ac@tcg) * 999
					tc@tcg = attacktarget@tcg
					ac@tcg = attackingcard@tcg
				}
				if ( cdbit(TCG_BIT_FIRST_STRIKE, tc@tcg) != TRUE ) {
					if ( cdbit(TCG_BIT_LIFELINK, tc@tcg) ) {
						dmgplayer card@tcg(TCG_CARD_CONTROLLER, tc@tcg), (-1) * limit(card@tcg(TCG_CARD_ATTACK, tc@tcg), 0, card@tcg(TCG_CARD_HP, ac@tcg))
					}
					dmgcard ac@tcg, card@tcg(TCG_CARD_ATTACK, tc@tcg) + cdbit(TCG_BIT_DEATHTOUCH,tc@tcg) * 999
					tc@tcg = attacktarget@tcg
					ac@tcg = attackingcard@tcg
				}
			}
			tc@tcg = attacktarget@tcg
			ac@tcg = attackingcard@tcg
			if ( card@tcg(TCG_CARD_LOCATION, tc@tcg) == TCG_LOCATION_FIELD ) {
				if ( cp@tcg == TCG_CONTROLLER_PLAYER ) {
					card@tcg(TCG_CARD_Y_MOVETO, tc@tcg) -= 25
				}
				else {
					card@tcg(TCG_CARD_Y_MOVETO, tc@tcg) += 25
				}
			}
		}
		else {
			dmgplayer tp@tcg, card@tcg(TCG_CARD_ATTACK, ac@tcg)
		}
		tc@tcg = attacktarget@tcg
		ac@tcg = attackingcard@tcg
		if ( cdbit(TCG_BIT_EXHAUSTED, ac@tcg) != TRUE ) {
			card@tcg(TCG_CARD_STATUS, ac@tcg) = TCG_ACTION_NONE
		}
		if ( card@tcg(TCG_CARD_LOCATION, ac@tcg) == TCG_LOCATION_FIELD ) {
			if ( cp@tcg == TCG_CONTROLLER_PLAYER ) {
				card@tcg(TCG_CARD_Y_MOVETO, ac@tcg) += 25
			}
			else {
				card@tcg(TCG_CARD_Y_MOVETO, ac@tcg) -= 25
			}
		}
		cardpos 0, -1
		cardpos 1, -1
		tcgdraw
		tc@tcg = attacktarget@tcg
		ac@tcg = attackingcard@tcg
		if ( dbg_tcg ) { dialog "" + attackingcard@tcg + "/" + attacktarget@tcg }
		if ( tc@tcg != (-1) ) {
			tc@tcg = attacktarget@tcg
			ac@tcg = attackingcard@tcg
			if ( card@tcg(TCG_CARD_LOCATION, ac@tcg) == TCG_LOCATION_FIELD & card@tcg(TCG_CARD_ATTACK, tc@tcg) > 0 & cdbit(TCG_BIT_SPLIT, ac@tcg) == TRUE ) {
				effac@tcg = ac@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, ac@tcg)
				cardstack@tcg(TCG_STACK, stack@tcg) = ac@tcg, TCG_SKILL_EFF_SPLITSELF, card@tcg(TCG_CARD_CONTROLLER, ac@tcg), 1, 0, 0
				stack@tcg++
				actionproc
				makecardlist
			}
			tc@tcg = attacktarget@tcg
			ac@tcg = attackingcard@tcg
			if ( card@tcg(TCG_CARD_LOCATION, tc@tcg) == TCG_LOCATION_FIELD & card@tcg(TCG_CARD_ATTACK, ac@tcg) > 0 & cdbit(TCG_BIT_SPLIT, tc@tcg) == TRUE ) {
				effac@tcg = tc@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, tc@tcg)
				cardstack@tcg(TCG_STACK, stack@tcg) = tc@tcg, TCG_SKILL_EFF_SPLITSELF, card@tcg(TCG_CARD_CONTROLLER, tc@tcg), 1, 0, 0
				stack@tcg++
				actionproc
				makecardlist
			}
			tc@tcg = attacktarget@tcg
			ac@tcg = attackingcard@tcg
			if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, ac@tcg)) == TCG_SKILL_TYPE_AFTERCOMBAT ) {
				// dialog "" + ac@tcg + "/" + card@tcg(TCG_CARD_EFFECT, ac@tcg) + "/" + effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, ac@tcg))
				effac@tcg = ac@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, ac@tcg)
				gosub *card_action_choose_target
			}
			tc@tcg = attacktarget@tcg
			ac@tcg = attackingcard@tcg
			if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, tc@tcg)) == TCG_SKILL_TYPE_AFTERCOMBAT ) {
				// dialog "" + tc@tcg + "/" + card@tcg(TCG_CARD_EFFECT, tc@tcg) + "/" + effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, tc@tcg))
				effac@tcg = tc@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, tc@tcg)
				gosub *card_action_choose_target
			}
			tc@tcg = attacktarget@tcg
			ac@tcg = attackingcard@tcg
			// dialog "" + ac@tcg + "/" + card@tcg(TCG_CARD_EFFECT, ac@tcg) + "/" + effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			if ( card@tcg(TCG_CARD_LOCATION, tc@tcg) != TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, ac@tcg) == TCG_LOCATION_FIELD ) {
				effac@tcg = ac@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, ac@tcg)
				if ( effref@tcg(TCG_SKILL_TYPE, eff@tcg) == TCG_SKILL_TYPE_ONKILL ) {
					gosub *card_action_choose_target
				}
			}
			tc@tcg = attacktarget@tcg
			ac@tcg = attackingcard@tcg
			// dialog "" + tc@tcg + "/" + card@tcg(TCG_CARD_EFFECT, tc@tcg) + "/" + effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, tc@tcg))
			if ( card@tcg(TCG_CARD_LOCATION, ac@tcg) != TCG_LOCATION_FIELD & card@tcg(TCG_CARD_LOCATION, tc@tcg) == TCG_LOCATION_FIELD ) {
				effac@tcg = tc@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, tc@tcg)
				if ( effref@tcg(TCG_SKILL_TYPE, eff@tcg) == TCG_SKILL_TYPE_ONKILL ) {
					gosub *card_action_choose_target
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DRAW_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		getrandomcard aeft@tcg
		makecardlist
		tcgdraw
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEAL_PLAYER_DAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			dmgplayer aeft@tcg, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HEAL_PLAYER_DAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			dmgplayer aeft@tcg, (-1) * effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HALVEHEALTH | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			dmgplayer aeft@tcg, cpdata@tcg(TCG_PLAYER_LIFE, aeft@tcg) / 2
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAIN_MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAIN_MANA_NEXT_TURN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_NEXTTURN_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAIN_MAX_MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_MAX_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RYUTYE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( cp@tcg == ap@tcg ) {
				if ( sac@tcg ) {
					sac@tcg = 0
					gravecard aeft@tcg
				} else {
					saccard aeft@tcg, ap@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DRAFT_MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			cpdata@tcg(TCG_PLAYER_NEXTTURN_MANA, aeft@tcg) -= effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SAVE_MANA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) >= effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) ) {
				cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) -= effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
				cpdata@tcg(TCG_PLAYER_NEXTTURN_MANA, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
			}
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg)), basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120, basex@tcg + 23, basey@tcg + 236 - aeft@tcg * 120
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_LUNE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) >= 1 ) {
				getrandomcard aeft@tcg
				cpdata@tcg(TCG_PLAYER_MANA, aeft@tcg) -= 1
			}
			makecardlist
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CONTROLLERDRAW1GAIN1 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			getrandomcard card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
			cpdata@tcg(TCG_PLAYER_MANA, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) += 1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEAL_CREATURE_DAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dmgcard aeft@tcg, effref@tcg(TCG_SKILL_POWER, aeff@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HEAL_CREATURE_DAMAGE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dmgcard aeft@tcg, (-1) * effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, ac@tcg))
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GRAVECARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			efllistadd 1, 0, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg) 
			gravecard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_ATTACK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, 99)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, 99)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_HP | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 1, 99)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 1, 99)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_COST | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_COST, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_COST, aeft@tcg), 0, 99)
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_COST, aeft@tcg), 0, 99)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CREATURE_GAIN_ATTACKHP | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, 99)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, 99)
			card@tcg(TCG_CARD_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg))
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 1, 99)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 1, 99)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DYS | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) += card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) += card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)
			card@tcg(TCG_CARD_HP, aeft@tcg) += card@tcg(TCG_CARD_REF_HP, aeft@tcg)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) += card@tcg(TCG_CARD_REF_HP, aeft@tcg)
			efllistadd 2, 2, card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HEALTOFULL | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_HP, aeft@tcg) = card@tcg(TCG_CARD_REF_HP, aeft@tcg)
			efllistadd 2, card@tcg(TCG_CARD_REF_HP, aeft@tcg), card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HPBECOME1 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_HP, aeft@tcg) = 1
			efllistadd 2, 1, card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RANDOMMIZESTAT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) + rnd(6)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = card@tcg(TCG_CARD_ATTACK, aeft@tcg)
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg), 0, 99)
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg), 0, 99)
			card@tcg(TCG_CARD_HP, aeft@tcg) = effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) + rnd(6)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = card@tcg(TCG_CARD_HP, aeft@tcg)
			card@tcg(TCG_CARD_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_HP, aeft@tcg), 0, 99)
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = limit(card@tcg(TCG_CARD_REF_HP, aeft@tcg), 0, 99)
			efllistadd 2, effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), card@tcg(TCG_CARD_X, ac@tcg), card@tcg(TCG_CARD_Y, ac@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CHANGESIDE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 8 ) {
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_TURNCOUNTACCELERATE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) += effref@tcg(TCG_SKILL_POWER, aeff@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RETURN_TO_DECK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			returncard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RETURN_TO_DECK_DRAW1 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			returncard aeft@tcg
			getrandomcard ap@tcg
			makecardlist
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DRAW_TARGET_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) != ap@tcg ) {
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = ap@tcg
			}
			gettargetcard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BOUNCE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			gettargetcard aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_YEEK_TRANSFORM | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			create_card aeft@tcg, CREATURE_ID_YEEK
			cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
			if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
				cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
			}
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SPAGHET | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_NONE
			card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(9, 22) + 1000 * (card@tcg(TCG_CARD_REF_PIC, aeft@tcg) / 1000)
			card@tcg(TCG_CARD_REF_CHARA_PIC, aeft@tcg) = 0
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_23PUTIT_TRANSFORM | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			create_card aeft@tcg, CREATURE_ID_PUTIT
			cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
			if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
				cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
			}
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = 2
			card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg) = 2
			card@tcg(TCG_CARD_HP, aeft@tcg) = 3
			card@tcg(TCG_CARD_REF_HP, aeft@tcg) = 3
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SETBIT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg & effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) >= 5 ) {
			cdbitmod effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), aeft@tcg, 1
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_UNEFF_SETBIT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg & effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)) >= 5 ) {
			cdbitmod effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), aeft@tcg, 0
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SETEFF | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg & effref@tcg(TCG_SKILL_POWER, aeff@tcg) >= 5 ) {
			card@tcg(TCG_CARD_EFFECT, aeft@tcg) = effref@tcg(TCG_SKILL_POWER, aeff@tcg)
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_COPYEFFECT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
				card@tcg(TCG_CARD_REF_PIC, ac@tcg) = card@tcg(TCG_CARD_REF_PIC, aeft@tcg)
				card@tcg(TCG_CARD_REF_CHARA_PIC, ac@tcg) = card@tcg(TCG_CARD_REF_CHARA_PIC, aeft@tcg)
				efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BUFF_CREATURE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( rnd(1) == 0 ) { p@tcg = TCG_BIT_REGENERATION }
			if ( rnd(2) == 0 ) { p@tcg = TCG_BIT_ARMOR }
			if ( rnd(3) == 0 ) { p@tcg = TCG_BIT_FLYING }
			if ( rnd(4) == 0 ) { p@tcg = TCG_BIT_INTIMIDATE }
			if ( rnd(5) == 0 ) { p@tcg = TCG_BIT_REACH }
			if ( rnd(6) == 0 ) { p@tcg = TCG_BIT_LIFELINK }
			if ( rnd(7) == 0 ) { p@tcg = TCG_BIT_TRAMPLE }
			if ( rnd(8) == 0 ) { p@tcg = TCG_BIT_FIRST_STRIKE }
			if ( rnd(9) == 0 ) { p@tcg = TCG_BIT_WINDFURY }
			if ( rnd(10) == 0 ) { p@tcg = TCG_BIT_VIGILANCE }
			cdbitmod p@tcg, aeft@tcg, 1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_DEBUFF_CREATURE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( rnd(1) == 0 ) { p@tcg = TCG_BIT_POISONED }
			if ( rnd(2) == 0 ) { p@tcg = TCG_BIT_FROZEN }
			if ( rnd(3) == 0 ) { p@tcg = TCG_BIT_PARALYSED }
			if ( rnd(4) == 0 ) { p@tcg = TCG_BIT_SILENCED }
			if ( rnd(5) == 0 ) { p@tcg = TCG_BIT_BLEEDING }
			cdbitmod p@tcg, aeft@tcg, 1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CLEANSE_CREATURE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			repeat 32, 32
				cdbitmod cnt, aeft@tcg, 0
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SPLITSELF | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, ac@tcg), card@tcg(TCG_CARD_REF_DBID, ac@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_HP, cextra@tcg) = card@tcg(TCG_CARD_HP, ac@tcg)
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = card@tcg(TCG_CARD_ATTACK, ac@tcg)
					card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_NONE
					putcard cextra@tcg, card@tcg(TCG_CARD_CONTROLLER, cextra@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_TRANSFORMTO | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card_ref card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				dbid = stat
				if ( dbid >= 0 ) {
					racebk@tcg = cardn@tcg(TCG_CARDN_REF_RACE, ac@tcg)
					create_card ac@tcg, dbid
					cardn@tcg(TCG_CARDN_REF_RACE, ac@tcg) = racebk@tcg
					cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
					if ( card@tcg(TCG_CARD_STATUS, ac@tcg) != TCG_ACTION_NONE ) {
						cdbitmod TCG_BIT_EXHAUSTED, ac@tcg, 1
					}
					if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, ac@tcg)) == TCG_SKILL_TYPE_BATTLECRY ) {
						effac@tcg = ac@tcg
						eff@tcg = card@tcg(TCG_CARD_EFFECT, ac@tcg)
						gosub *card_action_choose_target
						makecardlist
						tcgdraw
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MUTATE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			gosub *card_filter_reset
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_SKILL_FILTER_BLUE ) { rnddomain@tcg = 1 }
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_SKILL_FILTER_RAT ) { rndrace@tcg = "rat" }
			if ( effref@tcg(TCG_SKILL_POWER, aeff@tcg) == TCG_SKILL_FILTER_MESHERA ) { 
				rndrace@tcg = "bacteria" 
				rnddomain@tcg = 1
			}
			gosub *card_filter
			card_ref cardno
			dbid = stat
			if ( dbid >= 0 ) {
				racebk@tcg = cardn@tcg(TCG_CARDN_REF_RACE, aeft@tcg)
				create_card aeft@tcg, dbid
				cardn@tcg(TCG_CARDN_REF_RACE, aeft@tcg) = racebk@tcg
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) == TCG_SKILL_TYPE_BATTLECRY & card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
					effac@tcg = aeft@tcg
					eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
					gosub *card_action_choose_target
					makecardlist
					tcgdraw
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MERGEANDUPGRADE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				dbid = -1
				if ( card@tcg(TCG_CARD_REF_DBID, ac@tcg) == CREATURE_ID_BISQUE_DOLL ) { dbid = CREATURE_ID_BISQUE_DOLL }
				if ( card@tcg(TCG_CARD_REF_DBID, ac@tcg) == CREATURE_ID_YERLES_COMBAT_PLANE ) { dbid = CREATURE_ID_YERLES_LATEST_OUTFIT_SOLDIER }
				if ( dbid >= 0) {
					card@tcg(TCG_CARD_X_MOVETO, ac@tcg) = card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
					repeat 3
						tcgdraw
					loop
					card@tcg(TCG_CARD_LOCATION, ac@tcg) = TCG_LOCATION_NONE
					create_card aeft@tcg, dbid
					cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
					if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
						cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
					}
					if ( dbid == CREATURE_ID_BISQUE_DOLL ) {
						card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 33)
						card@tcg(TCG_CARD_REF_HP, aeft@tcg) *= 3
						card@tcg(TCG_CARD_HP, aeft@tcg) *= 3
						cdbitmod TCG_BIT_DOUBLE_STRIKE, aeft@tcg, 1
						cdbitmod TCG_BIT_ARMOR, aeft@tcg, 1
					}
					makecardlist
					cardpos 0, -1
					cardpos 1, -1
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GAVELA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dbid = -1
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_MILITARY_PUTIT ) { dbid = CREATURE_ID_PUTIT_TANK }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_MACHINE_INFANTRY ) { dbid = CREATURE_ID_YERLES_ELITE_MACHINE_INFANTRY }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_COMBAT_PLANE ) { dbid = CREATURE_ID_YERLESWOOD_TYPE_M }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_LATEST_OUTFIT_SOLDIER ) { dbid = CREATURE_ID_YERLES_CYBORG_SOLDIER }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_YERLES_SELF_PROPELLED_GUN ) { dbid = CREATURE_ID_SECURITY_SYSTEM }
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_SECURITY_SYSTEM ) { dbid = CREATURE_ID_YERLES_MORTAR }
			if ( dbid >= 0) {
				costbk@tcg = card@tcg(TCG_CARD_COST, aeft@tcg)
				create_card aeft@tcg, dbid
				card@tcg(TCG_CARD_COST, aeft@tcg) = costbk@tcg
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) == TCG_SKILL_TYPE_BATTLECRY & card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
					effac@tcg = aeft@tcg
					eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
					gosub *card_action_choose_target
					makecardlist
					tcgdraw
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CHANGEDBID | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_REF_DBID, aeft@tcg) = effref@tcg(TCG_SKILL_POWER, aeff@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MARKS | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			p@tcg = 0
			target@tcg = -1
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != 1 - card@tcg(TCG_CARD_CONTROLLER, effac@tcg) ) { continue } // Opponent's
				if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_DECK ) { continue } // in Deck
				if ( rnd(p@tcg + 1) == 0 ) {
					target@tcg(p@tcg) = cnt
					p@tcg++
				}
			loop
			if ( p@tcg > 0 & target@tcg > -1 ) {
				card@tcg(TCG_CARD_LOCATION, aeft@tcg) = TCG_LOCATION_NONE
				card@tcg(TCG_CARD_CONTROLLER, target@tcg) = ap@tcgp@tcg
				gettargetcard target@tcg
				card@tcg(TCG_CARD_REF_COST, target@tcg) = card@tcg(TCG_CARD_REF_COST, target@tcg) - 1
				card@tcg(TCG_CARD_COST, target@tcg) = card@tcg(TCG_CARD_COST, target@tcg) - 1
				makecardlist
				tcgdraw
			}
			cardposhand 0, -1
			cardposhand 1, -1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_PUT_TARGET_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				putcardfree@tcg = 1
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_PUT_TARGET_CARD_AND_DMG | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				putcardfree@tcg = 1
				aeftbk@tcg = aeft@tcg
				effpowbk@tcg = effref@tcg(TCG_SKILL_POWER, aeff@tcg)
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				dmgcard aeftbk@tcg, effpowbk@tcg
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RESURRECT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 8 & card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) >= effref@tcg(TCG_SKILL_POWER, aeff@tcg) ) {
				putcardfree@tcg = 1
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SWITCHSIDE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_FIELD ) {
				putcard aeft@tcg, 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SWAPDECK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_DECK ) {
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				repeat 2
					cpdata@tcg(TCG_PLAYER_DECK, cnt) = getdecksum(cnt)
				loop
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MIMIC | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				evhpbk@tcg = card@tcg(TCG_CARD_HP, ac@tcg)
				evatkbk@tcg = card@tcg(TCG_CARD_ATTACK, ac@tcg)
				create_card ac@tcg, card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				cdbitmod TCG_BIT_FACE_UP, ac@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, ac@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, ac@tcg, 1
				}
				card@tcg(TCG_CARD_HP, ac@tcg) = evhpbk@tcg
				card@tcg(TCG_CARD_ATTACK, ac@tcg) = evatkbk@tcg
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = TCG_EFF_MIMIC2
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_PUT_CORGON_AND_CHANGEEFF | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 & card@tcg(TCG_CARD_LOCATION, aeft@tcg) != TCG_LOCATION_FIELD ) {
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = TCG_EFF_QURUIZA2
				putcardfree@tcg = 1
				putcard aeft@tcg, card@tcg(TCG_CARD_CONTROLLER, aeft@tcg)
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_1DMGEVERYPIECE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			dmgplayer 1 - card@tcg(TCG_CARD_CONTROLLER, aeft@tcg), 1
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SUMMON | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, ap@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SUMMON_FIRE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 ) {
				if ( rnd(1) == 0 ) { p@tcg = CREATURE_ID_FIRE_DRAGON_CHILD }
				if ( rnd(2) == 0 ) { p@tcg = CREATURE_ID_RED_PUTIT }
				if ( rnd(3) == 0 ) { p@tcg = CREATURE_ID_DRAGON_BAT }
				if ( rnd(4) == 0 ) { p@tcg = CREATURE_ID_FIRE_ENT }
				if ( rnd(5) == 0 ) { p@tcg = CREATURE_ID_RED_WASP }
				if ( rnd(6) == 0 ) { p@tcg = CREATURE_ID_IMP }
				if ( rnd(7) == 0 ) { p@tcg = CREATURE_ID_FIRE_DRAKE }
				if ( rnd(8) == 0 ) { p@tcg = CREATURE_ID_RED_BAPTIST }
				if ( rnd(9) == 0 ) { p@tcg = CREATURE_ID_RED_DRAGON }
				if ( rnd(10) == 0 ) { p@tcg = CREATURE_ID_STONE_GOLEM }
				if ( rnd(11) == 0 ) { p@tcg = CREATURE_ID_STEEL_GOLEM }
				if ( rnd(12) == 0 ) { p@tcg = CREATURE_ID_FIRE_CRAB }
				if ( rnd(13) == 0 ) { p@tcg = CREATURE_ID_FIRE_CENTIPEDE }
				// if ( rnd(14) == 0 ) { p@tcg = CREATURE_ID_CULTIST_OF_FIRE }
				create_extra_card aeft@tcg, p@tcg
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, ap@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SUMMONSPIDER | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 ) {
				if ( rnd(1) == 0 ) { p@tcg = CREATURE_ID_SPIDER }
				if ( rnd(2) == 0 ) { p@tcg = CREATURE_ID_BLACK_WIDOW }
				if ( rnd(3) == 0 ) { p@tcg = CREATURE_ID_PARALYZER }
				if ( rnd(4) == 0 ) { p@tcg = CREATURE_ID_TARANTULA }
				if ( rnd(5) == 0 ) { p@tcg = CREATURE_ID_BLOOD_SPIDER }
				create_extra_card aeft@tcg, p@tcg
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, ap@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_HEINRICH | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			aeftbk@tcg = aeft@tcg
			apbk@tcg = ap@tcg
			repeat 1 // Used to be 2, but too slow and op
				if ( getspotsum(aeftbk@tcg) < 8 ) {
					create_extra_card aeftbk@tcg, CREATURE_ID_YERLES_MACHINE_INFANTRY
					if ( cextra@tcg >= 0 ) {
						putcard cextra@tcg, apbk@tcg
					}
				}
				if ( getspotsum(aeftbk@tcg) < 8 ) {
					create_extra_card aeftbk@tcg, CREATURE_ID_YERLES_SELF_PROPELLED_GUN
					if ( cextra@tcg >= 0 ) {
						putcard cextra@tcg, apbk@tcg
					}
				}
				if ( getholdersum(aeftbk@tcg) < 8 ) {
					create_extra_card aeftbk@tcg, CREATURE_ID_YERLES_COMBAT_PLANE
					if ( cextra@tcg >= 0 ) {
						gettargetcard cextra@tcg
					}
				}
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_RAGNAROK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 ) {
				gosub *card_filter_reset
				rndfixlvl@tcg = FIX_QUALITY_GOOD
				if ( rnd(1) == 0 ) { rndrace@tcg = "giant" }
				if ( rnd(2) == 0 ) { rndrace@tcg = "dragon" }
				gosub *card_filter
				card_ref cardno
				dbid = stat
				create_extra_card aeft@tcg, dbid
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, aeft@tcg
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GENERATE_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getholdersum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GENERATE_AND_DRAW | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getholdersum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
				if ( cextra@tcg >= 0 ) {
					gettargetcard cextra@tcg
				}
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GENERATE_AND_DRAW011 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getholdersum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_COST, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
					gettargetcard cextra@tcg
				}
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_COPY_TARGET_CARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getholdersum(ap@tcg) < 8 & card@tcg(TCG_CARD_REF_DOMAIN, aeft@tcg) != 5 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, aeft@tcg), card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_CONTROLLER, cextra@tcg) = ap@tcg
					gettargetcard cextra@tcg
				}
				makecardlist
				tcgdraw
			}
		}
		cardposhand 0, -1
		cardposhand 1, -1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ALIEN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getholdersum(ap@tcg) < 8 & card@tcg(TCG_CARD_REF_DOMAIN, aeft@tcg) != 5 ) {
				cdbitmod TCG_BIT_BLEEDING, aeft@tcg, 1
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, aeft@tcg), card@tcg(TCG_CARD_REF_DBID, aeft@tcg)
				card@tcg(TCG_CARD_HP, cextra@tcg) = 1
				card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
				card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
				card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_CONTROLLER, cextra@tcg) = ap@tcg
					putcard cextra@tcg, ap@tcg
				}
				makecardlist
				tcgdraw
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_LOMIAS | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) < 8 & effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) > TCG_SKILL_FILTER_DBID ) {
				create_extra_card aeft@tcg, effref@tcg(TCG_SKILL_FILTER, card@tcg(TCG_CARD_EFFECT, ac@tcg)) - TCG_SKILL_FILTER_DBID
				if ( cextra@tcg >= 0 ) {
					putcard cextra@tcg, ap@tcg
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) += 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) += 1
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) += 2
					card@tcg(TCG_CARD_HP, cextra@tcg) += 2
					cdbitmod TCG_BIT_EXHAUSTED, cextra@tcg, 0
					card@tcg(TCG_CARD_STATUS, cextra@tcg) = TCG_ACTION_NONE
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ZOMBIE_GIRL_EVOLVE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) > 0 ) {
				evhpbk@tcg = card@tcg(TCG_CARD_HP, aeft@tcg)
				evatkbk@tcg = card@tcg(TCG_CARD_ATTACK, aeft@tcg)
				evtarget@tcg = CREATURE_ID_ZOMBIE_GIRL
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_ZOMBIE_GIRL ) {
					if ( rnd(1) == 0 ) { evtarget@tcg = CREATURE_ID_GOTHIC }
					if ( rnd(2) == 0 ) { evtarget@tcg = CREATURE_ID_REQUIEM }
					if ( rnd(3) == 0 ) { evtarget@tcg = -1 } // Stacy
					if ( rnd(4) == 0 ) { evtarget@tcg = -2 } // Baroque
					if ( rnd(5) == 0 ) { evtarget@tcg = -3 } // Thanatos
					if ( rnd(6) == 0 ) { evtarget@tcg = -4 } // Romanesque
				}
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_ZOMBIE_GIRL & card@tcg(TCG_CARD_REF_PIC, aeft@tcg) == xy2pic(10, 25) ) {
					evtarget@tcg = CREATURE_ID_ZOMBIE_QUEEN
				}
				if ( evtarget@tcg >= 0 ) {
					create_card aeft@tcg, evtarget@tcg
				}
				card@tcg(TCG_CARD_HP, aeft@tcg) = evhpbk@tcg
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) = evatkbk@tcg
				if ( evtarget@tcg == -1 ) {
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 25) + COLOR_FRESH * COLOR_TINT_MULT
					card@tcg(TCG_CARD_REF_HP, aeft@tcg) = 5
					card@tcg(TCG_CARD_HP, aeft@tcg) = 5
					card@tcg(TCG_CARD_ATTACK, aeft@tcg) = 1
					cdbitmod TCG_BIT_DEFENDER, aeft@tcg, 1
					cdbitmod TCG_BIT_REGENERATION, aeft@tcg, 1
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_NONE
				}
				if ( evtarget@tcg == -2 ) {
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 25) + COLOR_RED * COLOR_TINT_MULT
					cdbitmod TCG_BIT_WINDFURY, aeft@tcg, 1
					cdbitmod TCG_BIT_WINDFURY_USABLE, aeft@tcg, 1
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_BATTLECRY_DEAL2RANDOMENEMY2DAMAGE
				}
				if ( evtarget@tcg == -3 ) {
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 25) + COLOR_PINK * COLOR_TINT_MULT
					cdbitmod TCG_BIT_DOUBLE_STRIKE, aeft@tcg, 1
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_BATTLECRY_DEALRANDOMENEMY3DAMAGE
				}
				if ( evtarget@tcg == -4 ) {
					card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(10, 25)
				}
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) == TCG_SKILL_TYPE_BATTLECRY ) {
					effac@tcg = aeft@tcg
					eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
					gosub *card_action_choose_target
					makecardlist
					tcgdraw
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CHAOS_EVOLVE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) > 0 ) {
				evtarget@tcg = -1
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_WAR_SPIRIT ) { evtarget@tcg = CREATURE_ID_CHAOS_PALADIN }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_GUN_SPIRIT ) { evtarget@tcg = CREATURE_ID_CHAOS_HUNTER }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_MAGIC_SPIRIT ) { evtarget@tcg = CREATURE_ID_CHAOS_SHAMAN }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_PUDDING_SPIRIT ) { evtarget@tcg = CREATURE_ID_PUDDING_SPIRIT }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_CHAOS_SEED ) { evtarget@tcg = CREATURE_ID_CHAOS_SERPENT }
				if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_SPIRIT_OF_BREAD ) { evtarget@tcg = CREATURE_ID_ANGRY_BURGER }
				if ( evtarget@tcg >= 0 ) {
					if ( evtarget@tcg != CREATURE_ID_PUDDING_SPIRIT ) {
						create_card aeft@tcg, evtarget@tcg
					} else {
						card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(1, 7) + COLOR_YELLOW * COLOR_TINT_MULT
					}
					cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
					if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
						cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
					}
					if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) == TCG_SKILL_TYPE_BATTLECRY ) {
						effac@tcg = aeft@tcg
						eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
						gosub *card_action_choose_target
						makecardlist
						tcgdraw
					}
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_CHAOS_SEED_EVOLVE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_CHAOS_SEED & card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) >= 3 ) {
				create_card aeft@tcg, CREATURE_ID_CHAOS_SERPENT
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) == TCG_SKILL_TYPE_BATTLECRY ) {
					effac@tcg = aeft@tcg
					eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
					gosub *card_action_choose_target
					makecardlist
					tcgdraw
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_EVOLVE_CTHU | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_REF_DBID, aeft@tcg) == CREATURE_ID_CTHULHICK & card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) >= 7 ) {
				create_card aeft@tcg, CREATURE_ID_NINE_HEAD_DRAGON_THE_ABYSS
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_EVOLVE_LILY | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			effdescbk@tcg = carddetailn@tcg(aeft@tcg)
			effdesc2bk@tcg = carddetailneff@tcg(aeft@tcg)
			turncountbk@tcg = card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg)
			evtarget@tcg = -1
			if ( aefp@tcg == 0 ) {
				if ( turncountbk@tcg >= 1 ) { evtarget@tcg = CREATURE_ID_ETHERIAN }
				if ( turncountbk@tcg >= 4 ) { evtarget@tcg = CREATURE_ID_ETHERIAN_PLUS }
				if ( turncountbk@tcg >= 8 ) { evtarget@tcg = -2 }
			} else {
				if ( turncountbk@tcg == 0 ) { evtarget@tcg = -3 }
				if ( turncountbk@tcg == 1 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_MEM }
				if ( turncountbk@tcg == 2 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_FWBS }
				if ( turncountbk@tcg == 3 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_FSSSY }
				if ( turncountbk@tcg == 4 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_CHRDH }
				if ( turncountbk@tcg == 5 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_VARGM }
				if ( turncountbk@tcg == 6 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_DIBWL }
				if ( turncountbk@tcg >= 7 ) { evtarget@tcg = CREATURE_ID_CHAOSHAPRINCESS_ZEHLS }
			}
			if ( evtarget@tcg >= 0 ) {
				create_card aeft@tcg, evtarget@tcg
				cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
				if ( card@tcg(TCG_CARD_STATUS, aeft@tcg) != TCG_ACTION_NONE ) {
					cdbitmod TCG_BIT_EXHAUSTED, aeft@tcg, 1
				}
				carddetailn@tcg(aeft@tcg) = effdescbk@tcg
				carddetailneff@tcg(aeft@tcg) = effdesc2bk@tcg
				card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) = turncountbk@tcg
				card@tcg(TCG_CARD_REF_DBID, aeft@tcg) = CREATURE_ID_PAELS_MOM_LILY
				effac@tcg = aeft@tcg
				eff@tcg = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
				card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_LILY
				if ( aefp@tcg == 1 ) {
					carddetailneff@tcg(aeft@tcg) = "Lily's Disease is cured, but it's a bit too late."
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_NONE
				}
				if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, aeft@tcg)) == TCG_SKILL_TYPE_BATTLECRY ) {
					gosub *card_action_choose_target
				}
			} else {
				if ( evtarget@tcg == -2 ) {
					dmgcard aeft@tcg, 9999
				}
				if ( evtarget@tcg == -3 ) {
					effac@tcg = aeft@tcg
					eff@tcg = TCG_EFF_DEATHRATTLE_DRAW3CARD
					carddetailn@tcg(aeft@tcg) = effdescbk@tcg
					card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) = turncountbk@tcg
					card@tcg(TCG_CARD_REF_DBID, aeft@tcg) = CREATURE_ID_PAELS_MOM_LILY
					card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_NONE
					carddetailneff@tcg(aeft@tcg) = "Lily's Disease is cured! You get 3 cards! Thank you!"
					gosub *card_action_choose_target

				}
			}
			makecardlist
			tcgdraw
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_COPY_EFFECT | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
				card@tcg(TCG_CARD_EFFECT, ac@tcg) = card@tcg(TCG_CARD_EFFECT, aeft@tcg)
				if ( effref@tcg(TCG_SKILL_TYPE, card@tcg(TCG_CARD_EFFECT, ac@tcg)) == TCG_SKILL_TYPE_BATTLECRY ) {
					effac@tcg = ac@tcg
					eff@tcg = card@tcg(TCG_CARD_EFFECT, ac@tcg)
					gosub *card_action_choose_target
					makecardlist
					tcgdraw
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SPLITSELF01 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, ac@tcg), card@tcg(TCG_CARD_REF_DBID, ac@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 0
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 0
					card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_NONE
					putcard cextra@tcg, card@tcg(TCG_CARD_CONTROLLER, cextra@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_BEARCUBSUMMON | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( ac@tcg >= 0 & ac@tcg < maxcard@tcg ) {
			if ( getspotsum(card@tcg(TCG_CARD_CONTROLLER, ac@tcg)) < 8 ) {
				create_extra_card card@tcg(TCG_CARD_CONTROLLER, ac@tcg), card@tcg(TCG_CARD_REF_DBID, ac@tcg)
				if ( cextra@tcg >= 0 ) {
					card@tcg(TCG_CARD_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_HP, cextra@tcg) = 1
					card@tcg(TCG_CARD_ATTACK, cextra@tcg) = 1
					card@tcg(TCG_CARD_REF_ATTACK, cextra@tcg) = 1
					card@tcg(TCG_CARD_EFFECT, cextra@tcg) = TCG_EFF_BEARCUB
					carddetailneff@tcg(cextra@tcg) = "bear cub  No.???   very small bear baby  Rare:None\nEffect: Deathrattle: All Bears get +1/+1."
					putcard cextra@tcg, card@tcg(TCG_CARD_CONTROLLER, cextra@tcg)
				}
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_GUARD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( card@tcg(TCG_CARD_LOCATION, aeft@tcg) == TCG_LOCATION_GRAVEYARD ) {
				returncard aeft@tcg
				card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) = ap@tcg
				gettargetcard aeft@tcg
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MESHERA_CONVERTION | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			cardn@tcg(TCG_CARDN_REF_RACE, aeft@tcg) = "bacteria"
			carddetailneff@tcg(aeft@tcg) = "This one's infected, playing it will only spread the Disease"
			card@tcg(TCG_CARD_REF_PIC, aeft@tcg) = xy2pic(31, 13)
			card@tcg(TCG_CARD_REF_CHARA_PIC, aeft@tcg) = 0
			if ( rnd(2) == 0 ) {
				card@tcg(TCG_CARD_REF_ATTACK, aeft@tcg)++
				card@tcg(TCG_CARD_ATTACK, aeft@tcg)++
			} else {
				card@tcg(TCG_CARD_REF_HP, aeft@tcg)++
				card@tcg(TCG_CARD_HP, aeft@tcg)++
			}
			card@tcg(TCG_CARD_EFFECT, aeft@tcg) = TCG_EFF_MESHERA_TESTER
			cdbitmod TCG_BIT_FACE_UP, aeft@tcg, 1
			efllistadd 2, 1, card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg), card@tcg(TCG_CARD_X, aeft@tcg), card@tcg(TCG_CARD_Y, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ZEOME | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( getdecksum(ap@tcg) == 0 & card@tcg(TCG_CARD_REF_DBID, 100 * ap@tcg + 44) != 0 ) {
			cdbitmod TCG_BIT_FACE_UP, c@tcg, 1
			cpdata@tcg(TCG_PLAYER_LIFE, 1 - ap@tcg) = 0
			gameresult@tcg = 5 + (ap@tcg == 1)
			repeat 6
				tcgdraw
			loop
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MESHERA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		f@tcg = 1
		repeat maxcard@tcg
			if ( card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_DECK & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_HAND & card@tcg(TCG_CARD_LOCATION, cnt) != TCG_LOCATION_FIELD ) {
				continue
			}
			if ( card@tcg(TCG_CARD_CONTROLLER, cnt) == cp@tcg ) {
				continue
			}
			if ( cardn@tcg(TCG_CARDN_REF_RACE, cnt) != "bacteria" | card@tcg(TCG_CARD_REF_DBID, cnt) == CREATURE_ID_RENAI_THE_OVER_MESHERA ) {
				f@tcg = 0
				break
			}
		loop
		if ( f@tcg == 1 ) {
			cpdata@tcg(TCG_PLAYER_LIFE, 1 - cp@tcg) = 0
			gameresult@tcg = 7 + (cp@tcg == 1)
		}
		repeat 6
			tcgdraw
		loop
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_UNITDEAD | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( card@tcg(TCG_CARD_REF_DBID, 100 * ap@tcg + 59) != 0 ) {
			p@tcg = 0, 0, 0, 0
			repeat clistmax@tcg(0+3*ap@tcg)
				if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_UNITDEAD_KING ) { p(0) = 1 }
				if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_UNITDEAD_QUEEN ) { p(1) = 1 }
				if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_UNITDEAD_JACK ) { p(2) = 1 }
				if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 0+3*ap@tcg)) == CREATURE_ID_UNITDEAD_JOKER ) { p(3) = 1 }
			loop
			if ( p(0) + p(1) + p(2) + p(3) == 4 ) {
				cpdata@tcg(TCG_PLAYER_LIFE, 1 - ap@tcg) = 0
				gameresult@tcg = 9 + (ap@tcg == 1)
				goto *actionproc_WEND1
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_TIMESTOP | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			specialruletimestop@tcg = effref@tcg(TCG_SKILL_POWER, aeff@tcg) * (1 - 2 * aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_GAINATTACKREDUCECOST | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_COST, aeft@tcg) - effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, 99)
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg) + effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, 99)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_GAINATTACK | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg) + effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, 99)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_SELFGAIN10 | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_ATTACK, ac@tcg) = limit(card@tcg(TCG_CARD_ATTACK, ac@tcg) + 1, 0, 99)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_GAINATTACKEACHX | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			x@tcg = 0
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -1 ) { 
				repeat clistmax@tcg(1+ap@tcg)
					if ( cardn@tcg(TCG_CARDN_REF_RACE, clist@tcg(cnt, 1+ap@tcg)) == "minotaur" ) { x@tcg++ }
				loop
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( cardn@tcg(TCG_CARDN_REF_RACE, clist@tcg(cnt, 0+3*ap@tcg)) == "minotaur" ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -2 ) { 
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( cardn@tcg(TCG_CARDN_REF_RACE, clist@tcg(cnt, 0+3*ap@tcg)) == "minotaur" ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -3 ) { 
				if ( ct@tcg == card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) ) { x@tcg++ }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -4 ) { 
				if ( ct@tcg != card@tcg(TCG_CARD_CONTROLLER, aeft@tcg) ) { x@tcg++ }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -5 ) { 
				if ( card@tcg(TCG_CARD_REF_HP, aeft@tcg) > card@tcg(TCG_CARD_HP, aeft@tcg) ) { x@tcg = 1 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -6 ) { 
				x@tcg = 0, 0, 0, 0, 0, 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 0 ) { x@tcg(0) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 1 ) { x@tcg(1) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 2 ) { x@tcg(2) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 3 ) { x@tcg(3) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 6 ) { x@tcg(4) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 7 ) { x@tcg(5) = 1 }
				loop
				x@tcg = x@tcg(0) + x@tcg(1) + x@tcg(2) + x@tcg(3) + x@tcg(4) + x@tcg(5)
			}
			x@tcg *= effref@tcg(TCG_SKILL_POWER, aeff@tcg)
			card@tcg(TCG_CARD_ATTACK, aeft@tcg) = limit(card@tcg(TCG_CARD_ATTACK, aeft@tcg) + x@tcg, 0, 99)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_REDUCECOST | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_COST, aeft@tcg) - effref@tcg(TCG_SKILL_POWER, card@tcg(TCG_CARD_EFFECT, effac@tcg)), 0, 99)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_REDUCECOSTEACHX | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			x@tcg = 0
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -2 ) { x@tcg = card@tcg(TCG_CARD_TURN_COUNT, aeft@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -2 ) { x@tcg = getholdersum(ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -3 ) { x@tcg = getspotsum(ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -4 ) { x@tcg = getdecksum(ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -5 ) { x@tcg = getholdersum(1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -6 ) { x@tcg = getspotsum(1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -7 ) { x@tcg = getdecksum(1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -8 ) { x@tcg = cpdata@tcg(TCG_PLAYER_MANA_SPENT, ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -9 ) { x@tcg = cpdata@tcg(TCG_PLAYER_MANA_SPENT, 1-ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -10 ) { x@tcg = turn@tcg }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -11 ) { 
				x@tcg = 0
				repeat clistmax@tcg(1+ap@tcg)
					if ( card@tcg(TCG_CARD_EFFECT, clist@tcg(cnt, 1+ap@tcg)) == TCG_EFF_ORPHE ) {
						x@tcg = 9
						break
					}
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -12 ) { 
				x@tcg = 0, 0, 0, 0, 0, 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 0 ) { x@tcg(0) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 1 ) { x@tcg(1) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 2 ) { x@tcg(2) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 3 ) { x@tcg(3) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 6 ) { x@tcg(4) = 1 }
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 7 ) { x@tcg(5) = 1 }
				loop
				x@tcg = x@tcg(0) + x@tcg(1) + x@tcg(2) + x@tcg(3) + x@tcg(4) + x@tcg(5)
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -13 ) { 
				if ( card@tcg(TCG_CARD_REF_HP, aeft@tcg) > card@tcg(TCG_CARD_HP, aeft@tcg) ) { x@tcg = 120 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -14 ) { x@tcg = limit(40 - cpdata@tcg(TCG_PLAYER_DOMAIN, ap@tcg) * 5, 25, 40) - cpdata@tcg(TCG_PLAYER_LIFE, ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -15 ) { x@tcg = limit(40 - cpdata@tcg(TCG_PLAYER_DOMAIN, 1 - ap@tcg) * 5, 25, 40) - cpdata@tcg(TCG_PLAYER_LIFE, 1 - ap@tcg) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -16 ) { 
				if ( turn@tcg < effref@tcg(TCG_SKILL_POWER, aeff@tcg) ) { x@tcg = -9999 }
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -17 ) { x@tcg = gdata(GDATA_FLAG_THROWN_CHESTNUTS) / 10 }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -18 ) { 
				x@tcg = 0
				repeat clistmax@tcg(0+3*ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DOMAIN, clist@tcg(cnt, 0+3*ap@tcg)) == 4 & card@tcg(TCG_CARD_COST, clist@tcg(cnt, 0+3*ap@tcg)) < 2 ) {
						x@tcg++
					}
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -19 ) { x@tcg = 2 * (getspotsum(ap@tcg) < getspotsum(1-ap@tcg)) }
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -20 ) { 
				x@tcg = 0
				repeat gravesum@tcg(ap@tcg)
					if ( cdbit(TCG_BIT_YERLES, gravelist@tcg(cnt, ap@tcg)) ) { x@tcg++ }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -21 ) { 
				x@tcg = 0
				txt "" + (1+ap@tcg)
				repeat clistmax@tcg(1+ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_MILITARY_PUTIT ) { x@tcg+=10 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_PUTIT_TANK ) { x@tcg+=10 }
				loop
			}
			if ( effref@tcg(TCG_SKILL_FILTER, aeff@tcg) == -22 ) { 
				x@tcg = 0
				txt "" + (1+ap@tcg)
				repeat clistmax@tcg(1+ap@tcg)
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_KUROYA_THE_LOOKING_UNIVERSE ) { x@tcg+=10 }
					if ( card@tcg(TCG_CARD_REF_DBID, clist@tcg(cnt, 1+ap@tcg)) == CREATURE_ID_BELPHAT_THE_COSMIC_SWORD ) { x@tcg+=10 }
				loop
			}
			x@tcg /= effref@tcg(TCG_SKILL_POWER, aeff@tcg)
			card@tcg(TCG_CARD_COST, aeft@tcg) = limit(card@tcg(TCG_CARD_COST, aeft@tcg) - x@tcg, 0, 99)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_LASTRAVEN | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			if ( getholdersum(ap@tcg) == 0 ) {
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) += 2
				cdbitmod TCG_BIT_DOUBLE_STRIKE, aeft@tcg, 1
			} else {
				cdbitmod TCG_BIT_DOUBLE_STRIKE, aeft@tcg, 0
			}
			if ( getspotsum(ap@tcg) <= 1 ) {
				card@tcg(TCG_CARD_ATTACK, aeft@tcg) += 2
				cdbitmod TCG_BIT_VIGILANCE, aeft@tcg, 1
			} else {
				cdbitmod TCG_BIT_VIGILANCE, aeft@tcg, 0
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_ONGOING_EHEKATL | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg >= 0 & aeft@tcg < maxcard@tcg ) {
			card@tcg(TCG_CARD_REF_COST, aeft@tcg) = limit(rnd(rnd(9)+1) + rnd(rnd(6)+1), 0, 99)
			card@tcg(TCG_CARD_COST, aeft@tcg) = card@tcg(TCG_CARD_REF_COST, aeft@tcg)
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_SWAPDECKANDGRAVE | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			repeat maxcard@tcg
				if ( card@tcg(TCG_CARD_CONTROLLER, cnt) != aeft@tcg ) { continue }
				if ( card@tcg(TCG_CARD_LOCATION, cnt) == TCG_LOCATION_GRAVEYARD ) {
					card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_DECK
				} else {
					if ( card@tcg(TCG_CARD_LOCATION, cnt) == TCG_LOCATION_DECK ) {
						card@tcg(TCG_CARD_LOCATION, cnt) = TCG_LOCATION_GRAVEYARD
					}
				}
			loop
			efllistadd 2, 0, graveix@tcg, graveiy@tcg, deckix@tcg, deckiy@tcg
			cpdata@tcg(TCG_PLAYER_DECK, aeft@tcg) = getdecksum(aeft@tcg)
			cardposgrave aeft@tcg
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_KARATA | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		if ( aeft@tcg == 0 | aeft@tcg == 1 ) {
			if ( getspotsum(aeft@tcg) == 1 ) {
				eff@tcg = TCG_EFF_DARKARTIFICIALGIANT
				gosub *card_action_choose_target
			}
		}
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == TCG_SKILL_EFF_MIZUKI | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		specialruledrawtwocardsperturn@tcg = 1
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == cddraw2card@tcg | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		getrandomcard ap@tcg
		tcgdraw
		getrandomcard ap@tcg
		tcgdraw
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == cdsummonrace@tcg | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		deckmode@tcg = 1
		deckrefn@tcg = cardn@tcg(TCG_CARDN_REF_RACE, ac@tcg)
		gosub *select_deck
		goto *actionproc_SWEND1
		_switch_sw@tcg++
	}
	if ( _switch_val@tcg == cdsummon@tcg | _switch_sw@tcg ) {
		_switch_sw@tcg = 0
		deckmode@tcg = 2
		gosub *select_deck
		goto *actionproc_SWEND1
	}
	*actionproc_SWEND1
	cpisme
	if ( card@tcg(TCG_CARD_REF_TYPE, ac@tcg) == TCG_TYPE_SPELL ) {
		card@tcg(TCG_CARD_ANIM, ac@tcg) = TCG_ANIM_FADE, 18
		tcgdraw
		gravecard ac@tcg
	}
	*actionproc_WHILE1_CONTINUE
	goto *actionproc_WHILE1
	*actionproc_WEND1
	stack@tcg = 0
	deckmode@tcg = 0
	cpisme
	return
