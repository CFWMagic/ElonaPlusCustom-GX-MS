#deffunc itemcreate int itemcreate_charid, int itemcreate_dbid, int itemcreate_x, int itemcreate_y, int itemcreate_num
	itemcreatehack = -1
	if ( flttypeminor != FILTER_NOTHING ) {
		flttypemajor = FILTER_NOTHING
	}
	if ( itemcreate_dbid == 0 ) {
		dbid = -1
	}
	else {
		dbid = itemcreate_dbid
	}
	if ( itemcreate_num != 0 ) {
		initnum = itemcreate_num
	}
	else {
		initnum = 0
	}
	val = itemcreate_charid, itemcreate_x, itemcreate_y
	gosub *item_init
	itemcreatehack = 0
	return stat

#deffunc inv_getheader int inv_getheader_arg1
	if ( inv_getheader_arg1 == 0 ) {
		invhead = 0
		invrange = SIZE_INV1
		return
	}
	if ( inv_getheader_arg1 == (-1) ) {
		invhead = RANGE_INV2
		invrange = MAX_INV_DATA - RANGE_INV2
		return
	}
	invhead = SIZE_INV1 + SIZE_INV2 * (inv_getheader_arg1 - 1)
	invrange = SIZE_INV2
	return

#defcfunc inv_getowner int inv_getowner_arg1
	if ( inv_getowner_arg1 < SIZE_INV1 ) {
		return 0
	}
	if ( inv_getowner_arg1 >= RANGE_INV2 ) {
		return -1
	}
	return (inv_getowner_arg1 - SIZE_INV1) / SIZE_INV2 + 1

#deffunc inv_find int inv_find_arg1, int inv_find_arg2
	locvar_inv_find_f = -1
	inv_getheader inv_find_arg2
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) <= 0 ) {
			continue
		}
		if ( inv(INV_ITEM_ID, cnt) == inv_find_arg1 ) {
			locvar_inv_find_f = cnt
			break
		}
	loop
	return locvar_inv_find_f

#deffunc fix_find int fix_find_itemid, int fix_find_charid
	inv_getheader fix_find_charid
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) <= 0 ) {
			continue
		}
		if ( inv(INV_ITEM_ID, cnt) != fix_find_itemid ) {
			continue
		}
		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_SHELTER ) {
			if ( inv(INV_ITEM_PROPERTY, cnt) == PROP_CONSTRUCT ) {
				inv(INV_ITEM_PROPERTY, cnt) = PROP_NONE
				inv(INV_ITEM_FILE, cnt) = 0
				inv(INV_ITEM_PARAM2, cnt) = 100
				snd SOUNDLIST_AMMO
			}
		}
	loop
	return

#deffunc item_find int item_find_itemid, int item_find_mode, int item_find_inv
	locvar_item_find_p = -1, -1
	repeat 2
		if ( cnt == 0 ) {
			if ( item_find_inv > 0 ) {
				continue
			}
			inv_getheader -1
		}
		else {
			if ( item_find_inv < 0 ) {
				continue
			}
			inv_getheader 0
		}
		locvar_item_find_p(2) = cnt
		repeat invrange, invhead
			if ( inv(INV_ITEM_NUM, cnt) <= 0 ) {
				continue
			}
			if ( locvar_item_find_p(2) == 0 ) {
				if ( inv(INV_ITEM_X, cnt) != cdata(CDATA_X, CHARA_PLAYER) | inv(INV_ITEM_Y, cnt) != cdata(CDATA_Y, CHARA_PLAYER) ) {
					continue
				}
			}
			if ( item_find_mode == 0 ) {
				if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE) == item_find_itemid ) {
					locvar_item_find_p = cnt
				}
			}
			if ( item_find_mode == 1 ) {
				if ( inv(INV_ITEM_SKILL_REF, cnt) == item_find_itemid ) {
					if ( locvar_item_find_p(1) < inv(INV_ITEM_PARAM1, cnt) ) {
						locvar_item_find_p = cnt, inv(INV_ITEM_PARAM1, cnt)
					}
				}
			}
			if ( item_find_mode == 2 ) {
				if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE_MINOR) == item_find_itemid ) {
					locvar_item_find_p = cnt
				}
			}
			if ( item_find_mode == 3 ) {
				if ( inv(INV_ITEM_ID, cnt) == item_find_itemid ) {
					locvar_item_find_p = cnt
				}
			}
			if ( item_find_mode == 4 ) {
				if ( inv(INV_ITEM_ID, cnt) == item_find_itemid ) {
					if ( inv(INV_ITEM_PARAM2, cnt) >= 3 ) {
						locvar_item_find_p = cnt
					}
				}
			}
			if ( item_find_mode == 5 ) {
				if ( inv(INV_ITEM_ID, cnt) == item_find_itemid ) {
					if ( inv(INV_ITEM_CHARGE, cnt) == 6666 ) {
						locvar_item_find_p = cnt
					}
				}
			}
		loop
	loop
	return locvar_item_find_p

#defcfunc encfind int encfind_arg1, int encfind_arg2
	locvar_encfind_f = -1
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		if ( cdata(cnt, encfind_arg1) \ EXT_EQUIP_SLOTS == 0 ) {
			continue
		}
		locvar_encfind_i = cdata(cnt, encfind_arg1) \ EXT_EQUIP_SLOTS - 1
		repeat RANGE_INV_ITEM_ENCHANT
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, locvar_encfind_i) == 0 ) {
				break
			}
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, locvar_encfind_i) == encfind_arg2 ) {
				if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, locvar_encfind_i) > locvar_encfind_f ) {
					locvar_encfind_f = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, locvar_encfind_i)
					break
				}
			}
		loop
	loop
	return locvar_encfind_f

#defcfunc encfindpower int encfindpower_arg1, int encfindpower_arg2
	locvar_encfind_f = -1
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		if ( cdata(cnt, encfindpower_arg1) \ EXT_EQUIP_SLOTS == 0 ) {
			continue
		}
		locvar_encfind_i = cdata(cnt, encfindpower_arg1) \ EXT_EQUIP_SLOTS - 1
		repeat RANGE_INV_ITEM_ENCHANT
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, locvar_encfind_i) == 0 ) {
				break
			}
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, locvar_encfind_i) == encfindpower_arg2 ) {
				locvar_encfind_f += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, locvar_encfind_i)
			}
		loop
	loop
	return locvar_encfind_f

#defcfunc encfindspec int encfindspec_arg1, int encfindspec_arg2
	locvar_encfind_f = -1
	repeat RANGE_INV_ITEM_ENCHANT
		if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, encfindspec_arg1) == 0 ) {
			break
		}
		if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, encfindspec_arg1) == encfindspec_arg2 ) {
			locvar_encfind_f = 1
			break
		}
	loop
	return locvar_encfind_f

#deffunc itemlist int itemlist_arg1, int itemlist_arg2
	inv_getheader itemlist_arg1
	listmax = 0
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			continue
		}
		if ( inv(INV_ITEM_ID, cnt) == itemlist_arg2 ) {
			list(0, listmax) = cnt
			listmax++
		}
	loop
	return

#defcfunc itemusingfind int itemusingfind_itemid, int itemusingfind_arg2
	locvar_itemusingfind_f = -1
	repeat MAX_CHARA_TOTAL
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_ROW_ACT, cnt) != ACTION_NONE ) {
			if ( cdata(CDATA_ACTION_PERIOD, cnt) > 0 ) {
				if ( cdata(CDATA_ROW_ACT, cnt) != ACTION_SEX & cdata(CDATA_ROW_ACT, cnt) != ACTION_CHARGE & cdata(CDATA_ROW_ACT, cnt) != ACTION_PERFORM_PREACH & cdata(CDATA_ROW_ACT, cnt) != ACTION_MEAL & cdata(CDATA_ROW_ACT, cnt) != ACTION_PERFORM_DANCE & cdata(CDATA_ROW_ACT, cnt) != ACTION_XMAS_CAKE & cdata(CDATA_ROW_ACT, cnt) != ACTION_PERSUASION & cdata(CDATA_ROW_ACT, cnt) != ACTION_PECULIAR_JOKE & cdata(CDATA_ROW_ACT, cnt) != ACTION_BLENDED_LIE & cdata(CDATA_ROW_ACT, cnt) != ACTION_INTIMIDATION & cdata(CDATA_ROW_ACT, cnt) != ACTION_MYSTERIOUS_SONG & cdata(CDATA_ROW_ACT, cnt) != ACTION_TUIN_DER_LUSTEN & cdata(CDATA_ROW_ACT, cnt) != ACTION_BEGGING ) {
					if ( cdata(CDATA_ITEM_USING, cnt) == itemusingfind_itemid ) {
						if ( itemusingfind_arg2 == FALSE | (itemusingfind_arg2 == TRUE & cnt != 0) ) {
							locvar_itemusingfind_f = cnt
							break
						}
					}
				}
			}
		}
	loop
	return locvar_itemusingfind_f

#defcfunc itemfind int itemfind_arg1, int itemfind_arg2, int itemfind_arg3
	inv_getheader itemfind_arg1
	locvar_itemusingfind_f = -1
	if ( itemfind_arg3 == 0 ) {
		repeat invrange, invhead
			if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
				continue
			}
			if ( inv(INV_ITEM_ID, cnt) == itemfind_arg2 ) {
				locvar_itemusingfind_f = cnt
				break
			}
		loop
		return locvar_itemusingfind_f
	}
	if ( itemfind_arg3 == 1 ) {
		repeat invrange, invhead
			if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
				continue
			}
			if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE_MINOR) == itemfind_arg2 ) {
				locvar_itemusingfind_f = cnt
				break
			}
		loop
		return locvar_itemusingfind_f
	}
	return locvar_itemusingfind_f

#defcfunc allitemfind int allitemfind_arg1
	inv_getheader -1
	locvar_itemusingfind_f = -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			continue
		}
		if ( inv(INV_ITEM_ID, cnt) == allitemfind_arg1 ) {
			locvar_itemusingfind_f = cnt
			break
		}
	loop
	return locvar_itemusingfind_f

#defcfunc mapfoodtypefind int mapfoodtypefind_x, int mapfoodtypefind_y, int mapfoodtypefind_arg3
	inv_getheader -1
	locvar_itemusingfind_f = -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			continue
		}
		if ( inv(INV_ITEM_PARAM1, cnt) / 1000 == mapfoodtypefind_arg3 ) {
			if ( inv(INV_ITEM_PARAM2, cnt) == 0 & inv(INV_ITEM_PARAM3, cnt) > 0 ) {
				if ( inv(INV_ITEM_X, cnt) == mapfoodtypefind_x ) {
					if ( inv(INV_ITEM_Y, cnt) == mapfoodtypefind_y ) {
						locvar_itemusingfind_f = cnt
						break
					}
				}
			}
		}
	loop
	return locvar_itemusingfind_f

#defcfunc mapitemfind int mapitemfind_x, int mapitemfind_y, int mapitemfind_itemid
	inv_getheader -1
	locvar_itemusingfind_f = -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			continue
		}
		if ( inv(INV_ITEM_ID, cnt) == mapitemfind_itemid ) {
			if ( inv(INV_ITEM_X, cnt) == mapitemfind_x ) {
				if ( inv(INV_ITEM_Y, cnt) == mapitemfind_y ) {
					locvar_itemusingfind_f = cnt
					break
				}
			}
		}
	loop
	return locvar_itemusingfind_f

#deffunc cell_refresh int cell_refresh_x, int cell_refresh_y
	if ( mode == MODELIST_SHOP | mode == MODELIST_TXT_ADV ) {
		return
	}
	if ( cell_refresh_x < 0 | cell_refresh_y < 0 | cell_refresh_x >= mdata(MDATA_WIDTH) | cell_refresh_y >= mdata(MDATA_HEIGHT) ) {
		return
	}
	locvar_cell_refresh_p = 0
	map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS) = 0
	map(cell_refresh_x, cell_refresh_y, MAP_LIGHT_TYPE) = 0
	inv_getheader -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) > 0 ) {
			if ( inv(INV_ITEM_X, cnt) == cell_refresh_x & inv(INV_ITEM_Y, cnt) == cell_refresh_y ) {
				floorstack(locvar_cell_refresh_p) = cnt
				locvar_cell_refresh_p++
				wpoke map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS), 0, inv(INV_ITEM_PIC, cnt)
				wpoke map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS), 2, inv(INV_ITEM_COL, cnt)
				if ( ilight(inv(INV_ITEM_ID, cnt)) != LIGHT_TYPE_NONE ) {
					map(cell_refresh_x, cell_refresh_y, MAP_LIGHT_TYPE) = ilight(inv(INV_ITEM_ID, cnt))
				}
				/********** JAMES CUSTOM - DISPLAY CUSTOM ITEM FROM OMAKE - BEGINNING *********/
				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_OMAKE_CUSTOM_ITEM & inv(INV_ITEM_OMAKE_CUSTOM_ITEM_ID, cnt) < useritemmax & useritemmax > 0 ) {
					map(cell_refresh_x, cell_refresh_y, MAP_LIGHT_TYPE) = useritemdata(13, inv(INV_ITEM_OMAKE_CUSTOM_ITEM_ID, cnt))
				}
				/********** JAMES CUSTOM - DISPLAY CUSTOM ITEM FROM OMAKE - ENDING *********/
			}
		}
	loop
	if ( locvar_cell_refresh_p > 3 ) {
		wpoke map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS), 0, 363
		wpoke map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS), 2, 0
	}
	else {
		if ( locvar_cell_refresh_p > 1 ) {
			locvar_cell_refresh_n(2) = 0
			repeat locvar_cell_refresh_p
				locvar_cell_refresh_cnt2 = cnt
				locvar_cell_refresh_i = -1
				repeat locvar_cell_refresh_p
					if ( locvar_cell_refresh_cnt2 == 1 ) {
						if ( cnt == locvar_cell_refresh_n(0) ) {
							continue
						}
					}
					if ( locvar_cell_refresh_cnt2 == 2 ) {
						if ( cnt == locvar_cell_refresh_n(0) | cnt == locvar_cell_refresh_n(1) ) {
							continue
						}
					}
					if ( inv(INV_ITEM_TURN, floorstack(cnt)) > locvar_cell_refresh_i ) {
						locvar_cell_refresh_n(locvar_cell_refresh_cnt2) = cnt
						locvar_cell_refresh_i = inv(INV_ITEM_TURN, floorstack(cnt))
					}
				loop
			loop
			map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS) = floorstack(locvar_cell_refresh_n(0)) - RANGE_INV2
			map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS) += (floorstack(locvar_cell_refresh_n(1)) - RANGE_INV2) * 1000
			if ( locvar_cell_refresh_p > 2 ) {
				map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS) += (floorstack(locvar_cell_refresh_n(2)) - RANGE_INV2) * 1000000
			}
			else {
				map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS) += 999 * 1000000
			}
			map(cell_refresh_x, cell_refresh_y, MAP_ITEM_CHIPS) *= -1
		}
	}
	return

#deffunc itemturn int itemturn_itemid
	if ( gdata(GDATA_ITEM_TURN) < 0 ) {
		gdata(GDATA_ITEM_TURN) = 0
	}
	gdata(GDATA_ITEM_TURN)++
	inv(INV_ITEM_TURN, itemturn_itemid) = gdata(GDATA_ITEM_TURN)
	return

#deffunc removeitem int removeitem_itemid, int removeitem_amount
	locvar_removeitem_n = removeitem_amount
	if ( locvar_removeitem_n == 0 ) {
		locvar_removeitem_n = 1
	}
	inv(INV_ITEM_NUM, removeitem_itemid) -= locvar_removeitem_n
	if ( removeitem_itemid < SIZE_INV1 ) {
		gosub *calcBurdenPc
	}
	if ( inv(INV_ITEM_NUM, removeitem_itemid) <= 0 ) {
		inv(INV_ITEM_NUM, removeitem_itemid) = 0
		if ( mode != MODELIST_SHOP ) {
			if ( removeitem_itemid >= RANGE_INV2 ) {
				cell_refresh inv(INV_ITEM_X, removeitem_itemid), inv(INV_ITEM_Y, removeitem_itemid)
			}
		}
	}
	return

#deffunc item_copy int item_copy_src, int item_copy_dst
	if ( item_copy_src < 0 | item_copy_dst < 0 ) {
		return
	}
	repeat INV_ITEM_MAX
		inv(cnt, item_copy_dst) = inv(cnt, item_copy_src)
	loop
	return

#deffunc item_exchange int item_exchange_itemid1, int item_exchange_itemid2
	repeat INV_ITEM_MAX
		locvar_item_exchange_p = inv(cnt, item_exchange_itemid2)
		inv(cnt, item_exchange_itemid2) = inv(cnt, item_exchange_itemid1)
		inv(cnt, item_exchange_itemid1) = locvar_item_exchange_p
	loop
	return

#deffunc item_delete int item_delete_itemid
	memset inv(INV_ITEM_NUM, item_delete_itemid), 0, INV_ITEM_MAX * 4
	return

#defcfunc inv_getspace int inv_getspace_charid
	inv_getheader inv_getspace_charid
	locvar_item_exchange_p = 0
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			locvar_item_exchange_p++
			break
		}
	loop
	return locvar_item_exchange_p

#defcfunc inv_sum int inv_sum_charid
	inv_getheader inv_sum_charid
	locvar_inv_sum_op = 0
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) != 0 ) {
			locvar_inv_sum_op++
		}
	loop
	return locvar_inv_sum_op

#deffunc item_compress int
	locvar_item_exchange_p = 0
	repeat 100
		locvar_item_exchange_p(1) = 200 * (cnt * cnt + 1)
		repeat invrange, invhead
			if ( inv(INV_ITEM_NUM, cnt) != 0 ) {
				if ( ibit(ITEM_BIT_PRECIOUS, cnt) == 0 ) {
					if ( inv(INV_ITEM_VALUE, cnt) < locvar_item_exchange_p(1) ) {
						inv(INV_ITEM_NUM, cnt) = 0
						locvar_item_exchange_p++
						if ( inv(INV_ITEM_X, cnt) >= 0 & inv(INV_ITEM_X, cnt) < mdata(MDATA_WIDTH) & inv(INV_ITEM_Y, cnt) >= 0 & inv(INV_ITEM_Y, cnt) < mdata(MDATA_HEIGHT) ) {
							cell_refresh inv(INV_ITEM_X, cnt), inv(INV_ITEM_Y, cnt)
						}
					}
				}
			}
			if ( locvar_item_exchange_p > 10 ) {
				break
			}
		loop
		if ( locvar_item_exchange_p > 10 ) {
			break
		}
	loop
	locvar_item_exchange_p = -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			locvar_item_exchange_p = cnt
			break
		}
	loop
	if ( locvar_item_exchange_p == (-1) ) {
		repeat
			locvar_item_exchange_p = invhead + rnd(invrange)
			if ( ibit(ITEM_BIT_PRECIOUS, cnt) == 0 ) {
				inv(INV_ITEM_NUM, locvar_item_exchange_p) = 0
				if ( mode != MODELIST_SHOP ) {
					if ( inv(INV_ITEM_X, locvar_item_exchange_p) >= 0 & inv(INV_ITEM_X, locvar_item_exchange_p) < mdata(MDATA_WIDTH) & inv(INV_ITEM_Y, locvar_item_exchange_p) >= 0 & inv(INV_ITEM_Y, locvar_item_exchange_p) < mdata(MDATA_HEIGHT) ) {
						cell_refresh inv(INV_ITEM_X, locvar_item_exchange_p), inv(INV_ITEM_Y, locvar_item_exchange_p)
					}
				}
				break
			}
		loop
	}
	return

#defcfunc inv_checkiffreespace
	inv_getheader -1
	locvar_item_freespace_count = 0
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			locvar_item_freespace_count++
		}
	loop
	return locvar_item_freespace_count

#defcfunc inv_getfreeid int inv_getfreeid_charid
	inv_getheader inv_getfreeid_charid
	locvar_item_exchange_p = -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			locvar_item_exchange_p = cnt
			break
		}
	loop
	if ( locvar_item_exchange_p == (-1) ) {
		if ( inv_getfreeid_charid == (-1) ) {
			if ( mode != MODELIST_SHOP ) {
				txt lang("アイテム情報が多すぎる！幾つかのアイテムは破壊された。", "Too many item data! Some items in this area are destroyed.")
				item_compress inv_getfreeid_charid
			}
		}
	}
	return locvar_item_exchange_p

#defcfunc inv_weight int inv_weight_charid
	locvar_item_exchange_p = 0
	inv_getheader inv_weight_charid
	if ( inv_weight_charid == CHARA_PLAYER ) {
		gdata(GDATA_CARGO_WEIGHT) = 0
	}
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) != 0 ) {
			if ( inv(INV_ITEM_WEIGHT, cnt) >= 0 ) {
				locvar_item_exchange_p += inv(INV_ITEM_WEIGHT, cnt) * inv(INV_ITEM_NUM, cnt)
			}
			else {
				if ( inv_weight_charid == CHARA_PLAYER ) {
					gdata(GDATA_CARGO_WEIGHT) += inv(INV_ITEM_WEIGHT, cnt) * inv(INV_ITEM_NUM, cnt) * (-1)
				}
			}
		}
	loop
	return locvar_item_exchange_p

#deffunc item_num int item_num_itemid, int item_num_amount
	inv(INV_ITEM_NUM, item_num_itemid) += item_num_amount
	if ( inv(INV_ITEM_NUM, item_num_itemid) < 0 ) {
		inv(INV_ITEM_NUM, item_num_itemid) = 0
	}
	if ( item_num_itemid >= RANGE_INV2 ) {
		cell_refresh inv(INV_ITEM_X, item_num_itemid), inv(INV_ITEM_Y, item_num_itemid)
	}
	else {
		gosub *calcBurdenPc
	}
	return

#deffunc item_separate var item_separate_itemid
	if ( inv(INV_ITEM_NUM, item_separate_itemid) <= 1 ) {
		return item_separate_itemid
	}
	locvar_item_separate_ti = inv_getfreeid(inv_getowner(item_separate_itemid))
	if ( locvar_item_separate_ti == (-1) ) {
		locvar_item_separate_ti = inv_getfreeid(-1)
		if ( locvar_item_separate_ti == (-1) ) {
			inv(INV_ITEM_NUM, item_separate_itemid) = 1
			txt lang("何かが地面に落ちて消えた…", "Something falls on the ground and disappears...")
			return item_separate_itemid
		}
	}
	item_copy item_separate_itemid, locvar_item_separate_ti
	inv(INV_ITEM_NUM, locvar_item_separate_ti) = inv(INV_ITEM_NUM, item_separate_itemid) - 1
	inv(INV_ITEM_NUM, item_separate_itemid) = 1
	if ( inv_getowner(locvar_item_separate_ti) == (-1) ) {
		if ( mode != MODELIST_SHOP ) {
			if ( inv_getowner(item_separate_itemid) != (-1) ) {
				inv(INV_ITEM_X, item_separate_itemid) = cdata(CDATA_X, inv_getowner(item_separate_itemid))
				inv(INV_ITEM_Y, item_separate_itemid) = cdata(CDATA_Y, inv_getowner(item_separate_itemid))
			}
			inv(INV_ITEM_X, locvar_item_separate_ti) = inv(INV_ITEM_X, item_separate_itemid)
			inv(INV_ITEM_Y, locvar_item_separate_ti) = inv(INV_ITEM_Y, item_separate_itemid)
			itemturn locvar_item_separate_ti
			cell_refresh inv(INV_ITEM_X, locvar_item_separate_ti), inv(INV_ITEM_Y, locvar_item_separate_ti)
			txt lang("何かが地面に落ちた。", "Something falls down from your backpack.")
			gosub *calcBurdenPc
		}
	}
	return locvar_item_separate_ti

#deffunc item_separatefish var item_separatefish_itemid
	if ( inv(INV_ITEM_NUM, item_separatefish_itemid) <= 1 ) {
		return item_separatefish_itemid
	}
	locvar_item_separate_ti = inv_getfreeid(inv_getowner(item_separatefish_itemid))
	if ( locvar_item_separate_ti == (-1) ) {
		locvar_item_separate_ti = inv_getfreeid(-1)
		if ( locvar_item_separate_ti == (-1) ) {
			inv(INV_ITEM_NUM, item_separatefish_itemid) = 1
			txt lang("何かが餌を奪って水底に潜って逃げた…", "Something dives to the bottom of the water and disappears...")
			return item_separatefish_itemid
		}
	}
	item_copy item_separatefish_itemid, locvar_item_separate_ti
	inv(INV_ITEM_NUM, locvar_item_separate_ti) = inv(INV_ITEM_NUM, item_separatefish_itemid) - 1
	inv(INV_ITEM_NUM, item_separatefish_itemid) = 1
	if ( inv_getowner(locvar_item_separate_ti) == (-1) ) {
		if ( mode != MODELIST_SHOP ) {
			if ( inv_getowner(item_separatefish_itemid) != (-1) ) {
				inv(INV_ITEM_X, item_separatefish_itemid) = cdata(CDATA_X, inv_getowner(item_separatefish_itemid))
				inv(INV_ITEM_Y, item_separatefish_itemid) = cdata(CDATA_Y, inv_getowner(item_separatefish_itemid))
			}
			inv(INV_ITEM_X, locvar_item_separate_ti) = inv(INV_ITEM_X, item_separatefish_itemid)
			inv(INV_ITEM_Y, locvar_item_separate_ti) = inv(INV_ITEM_Y, item_separatefish_itemid)
			itemturn locvar_item_separate_ti
			cell_refresh inv(INV_ITEM_X, locvar_item_separate_ti), inv(INV_ITEM_Y, locvar_item_separate_ti)
			txt lang("何かが餌に気づいて浮かんできた。", "Something has emerged in order to get the bait.")
			gosub *calcBurdenPc
		}
	}
	return locvar_item_separate_ti

#deffunc chara_unequip int chara_unequip_itemid
	if ( inv(INV_ITEM_EQUIP, chara_unequip_itemid) == 0 ) {
		return 0
	}
	locvar_chara_unequip_p = inv(INV_ITEM_EQUIP, chara_unequip_itemid)
	locvar_chara_unequip_c = inv_getowner(chara_unequip_itemid)
	if ( locvar_chara_unequip_c == (-1) ) {
		return 0
	}
	cdata(locvar_chara_unequip_p, locvar_chara_unequip_c) = cdata(locvar_chara_unequip_p, locvar_chara_unequip_c) / 10000 * 10000
	inv(INV_ITEM_EQUIP, chara_unequip_itemid) = 0
	return 1

#deffunc item_identify int item_identify_itemid, int item_identify_idlevel, int item_identify_power
	locvar_item_identify_idlv = item_identify_idlevel
	if ( item_identify_power ) {
		if ( item_identify_power >= inv(INV_ITEM_IDENTIFY_LEVEL, item_identify_itemid) ) {
			locvar_item_identify_idlv = ITEM_KNOWN_FULL
		}
	}
	if ( locvar_item_identify_idlv >= ITEM_KNOWN_QUALITY ) {
		if ( refitem(inv(INV_ITEM_ID, item_identify_itemid), DBSPEC_TYPE) >= FILTER_ITEM_MIN ) {
			locvar_item_identify_idlv = ITEM_KNOWN_FULL
		}
	}
	if ( locvar_item_identify_idlv == (-1) | inv(INV_ITEM_KNOWN, item_identify_itemid) >= locvar_item_identify_idlv ) {
		idtresult = ITEM_KNOWN_NONE
		return ITEM_KNOWN_NONE
	}
	inv(INV_ITEM_KNOWN, item_identify_itemid) = locvar_item_identify_idlv
	if ( inv(INV_ITEM_KNOWN, item_identify_itemid) >= ITEM_KNOWN_NAME ) {
		itemmemory(0, inv(INV_ITEM_ID, item_identify_itemid)) = 1
	}
	idtresult = locvar_item_identify_idlv
	return idtresult

#deffunc item_checkknown int item_checkknown_itemid
	if ( inv(INV_ITEM_KNOWN, item_checkknown_itemid) >= ITEM_KNOWN_FULL ) {
		inv(INV_ITEM_KNOWN, item_checkknown_itemid) = ITEM_KNOWN_FULL
	}
	if ( itemmemory(0, inv(INV_ITEM_ID, item_checkknown_itemid)) ) {
		if ( inv(INV_ITEM_KNOWN, item_checkknown_itemid) == ITEM_KNOWN_NONE ) {
			item_identify item_checkknown_itemid, ITEM_KNOWN_NAME
		}
	}
	return

#defcfunc rpname int rpname_arg1
	locvar_rpname_s = "?????"
	if ( rpdatan(rpname_arg1) != "" ) {
		return rpdatan(rpname_arg1)
	}
	if ( rpname_arg1 >= EXT_RP ) {
		return ioriginalnameref(rpname_arg1 - EXT_RP)
	}
	return locvar_rpname_s

#defcfunc itemowner int itemowner_itemid
	if ( itemowner_itemid < SIZE_INV1 ) {
		return 1
	}
	if ( itemowner_itemid >= SIZE_INV1 ) {
		if ( itemowner_itemid < SIZE_INV1 + SIZE_INV2 * MAX_CHARA_NC ) {
			return 1
		}
	}
	return 0

*itemNameSub
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_KITTY_BANK ) {
		locvar_itemowner_s += lang("" + moneyboxn(inv(INV_ITEM_PARAM2, itemowner_itemid)), "(" + moneyboxn(inv(INV_ITEM_PARAM2, itemowner_itemid)) + ")")
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_BAIT ) {
		locvar_itemowner_s += lang("" + biten(inv(INV_ITEM_PARAM1, itemowner_itemid)), " <" + biten(inv(INV_ITEM_PARAM1, itemowner_itemid)) + ">")
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_EVITEM ) {

		/********** ORIGINAL - BEGINNING **********

		locvar_itemowner_s += lang("" + evitemn(inv(INV_ITEM_PARAM1, itemowner_itemid)), " <" + evitemn(inv(INV_ITEM_PARAM1, itemowner_itemid)) + ">")

		 ********** ORIGINAL - ENDING **********/

		/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Proper plural for items -- evolution item names

		locvar_itemowner_s += lang("" + evitemn(inv(INV_ITEM_PARAM1, itemowner_itemid)), "<" + evitemn(inv(INV_ITEM_PARAM1, itemowner_itemid)))

		if ( locvar_itemowner_num2 > 1 ) {
			locvar_itemowner_s += lang("", "s>")
		}
		else {
			locvar_itemowner_s += lang("", ">")
		}

		/********** BLOODYSHADE CUSTOM - ENDING **********/

	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_CF_POTIOMAN | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_CRUSH_POTIOMAN | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_BATTLE_POTIOMAN | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SUPER_POTIOMAN ) {
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) == 0 ) {
			if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_CF_POTIOMAN ) {
				locvar_itemowner_s += lang("ＣＦポーショマン", "CF potioman")
			}
			if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_CRUSH_POTIOMAN ) {
				locvar_itemowner_s += lang("クラッシュポーショマン", "crush potioman")
			}
			if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_BATTLE_POTIOMAN ) {
				locvar_itemowner_s += lang("バトルポーショマン", "battle potioman")
			}
			if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SUPER_POTIOMAN ) {
				locvar_itemowner_s += lang("スーパーポーショマン", "super potioman")
			}
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) \ 100 == POTIOMAN_NAME_SPINNING ) {
			locvar_itemowner_s += lang("スピニング", "Spinning")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) \ 100 == POTIOMAN_NAME_MIGHTY ) {
			locvar_itemowner_s += lang("マイティ", "Mighty")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) \ 100 == POTIOMAN_NAME_DUAL ) {
			locvar_itemowner_s += lang("デュアル", "Dual")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) \ 100 == POTIOMAN_NAME_RAPID ) {
			locvar_itemowner_s += lang("ラピッド", "Rapid")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) \ 100 == POTIOMAN_NAME_SNIPE ) {
			locvar_itemowner_s += lang("スナイプ", "Snipe")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) \ 100 == POTIOMAN_NAME_DECEIVE ) {
			locvar_itemowner_s += lang("デシーヴ", "Deceive")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_FLAENIX ) {
			locvar_itemowner_s += lang("フレイクス", "-Flaenix")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_GRIFEAK ) {
			locvar_itemowner_s += lang("グリフビーク", "-Grifeak")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_PEGATHER ) {
			locvar_itemowner_s += lang("ペガフェザー", "-Pegather")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_DRAGOUL ) {
			locvar_itemowner_s += lang("ドラゴウル", "-Dragoul")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_RAVRAIN ) {
			locvar_itemowner_s += lang("レイヴレイン", "-Ravrain")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_VALKSPEAR ) {
			locvar_itemowner_s += lang("バルキスピア", "-Valkspear")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_ORFIN ) {
			locvar_itemowner_s += lang("オルフィン", "-Orfin")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_WOLFANG ) {
			locvar_itemowner_s += lang("ウルファング", "-Wolfang")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_LEOHEART ) {
			locvar_itemowner_s += lang("レオハート", "-Leoheart")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_TIGELAW ) {
			locvar_itemowner_s += lang("タイガロウ", "-Tigelaw")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_FOXAIL ) {
			locvar_itemowner_s += lang("フォクテイル", "-Foxail")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_BEARM ) {
			locvar_itemowner_s += lang("ベアーム", "-Bearm")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_IFHEAT ) {
			locvar_itemowner_s += lang("イフヒート", "-Ifheat")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_DINOGUTS ) {
			locvar_itemowner_s += lang("ダイガッツ", "-Dinoguts")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_CERBEADS ) {
			locvar_itemowner_s += lang("ケルヘッズ", "-Cerbeads")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_BIHORN ) {
			locvar_itemowner_s += lang("バイホーン", "-Bihorn")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_WYVERNG ) {
			locvar_itemowner_s += lang("ワイバング", "-Wyverng")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_LEVIASCALE ) {
			locvar_itemowner_s += lang("リヴァスケイル", "-Leviascale")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_BUSHILADE ) {
			locvar_itemowner_s += lang("ブシレード", "-Bushilade")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_OGREAND ) {
			locvar_itemowner_s += lang("オーガンド", "-Ogreand")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_STAGITO ) {
			locvar_itemowner_s += lang("スタアギト", "-Stagito")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_GOLEDY ) {
			locvar_itemowner_s += lang("ゴレディ", "-Goledy")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_KNIMAIL ) {
			locvar_itemowner_s += lang("ナイメイル", "-Knimail")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_SOLDIGUN ) {
			locvar_itemowner_s += lang("ソルジガン", "-Soldigun")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_DEATRANIUM ) {
			locvar_itemowner_s += lang("デスレニアム", "-Deatranium")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_GIGANOOT ) {
			locvar_itemowner_s += lang("ギガンテット", "-Giganoot")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_KOBOLORD ) {
			locvar_itemowner_s += lang("コボルード", "-Kobolord")
		}
		if ( inv(INV_ITEM_PARAM3, itemowner_itemid) / 100 == POTIOMAN_SUBNAME_HERCUREST ) {
			locvar_itemowner_s += lang("ヘラクレスト", "-Hercurest")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 50 ) {
			locvar_itemowner_s += lang("Ｆ", " F")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 51 ) {
			locvar_itemowner_s += lang("Ｉ", " I")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 52 ) {
			locvar_itemowner_s += lang("Ｌ", " L")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 53 ) {
			locvar_itemowner_s += lang("Ｄ", " D")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 54 ) {
			locvar_itemowner_s += lang("Ｍ", " M")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 55 ) {
			locvar_itemowner_s += lang("Ｐ", " P")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 56 ) {
			locvar_itemowner_s += lang("Ｈ", " H")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 57 ) {
			locvar_itemowner_s += lang("Ｓ", " S")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 58 ) {
			locvar_itemowner_s += lang("Ｎ", " N")
		}
		if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 59 ) {
			locvar_itemowner_s += lang("Ｃ", " C")
		}
		if ( inv(INV_ITEM_AMUR_CAGE, itemowner_itemid) > 0 ) {
			locvar_itemowner_s += lang("Ｘ", "X")
		}
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_ANCIENT_BOOK ) {
		if ( jp ) {
			if ( inv(INV_ITEM_PARAM2, itemowner_itemid) != 0 ) {
				locvar_itemowner_s += "解読済みの"
			}
		}
		if ( inv(INV_ITEM_KNOWN, itemowner_itemid) >= ITEM_KNOWN_FULL ) {
			locvar_itemowner_s += lang("《" + magebookn(inv(INV_ITEM_BOOK_ID, itemowner_itemid)) + "》という題名の", " titled <" + magebookn(inv(INV_ITEM_BOOK_ID, itemowner_itemid)) + ">")
		}
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_RECIPE ) {
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) == 0 ) {
			locvar_itemowner_s += lang("もう使えない", " which cannot be used anymore")
		}
		else {
			if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) == CREATURE_ID_BUG ) {
				locvar_itemowner_s += lang("カスタム", "")
			}
			else {
				locvar_itemowner_s += lang("" + rpname(inv(INV_ITEM_SUB_NAME, itemowner_itemid)) + "の", " of " + rpname(inv(INV_ITEM_SUB_NAME, itemowner_itemid)) + "")
			}
		}
	}
	if ( locvar_itemowner_a == FILTER_ITEM_BOOK ) {
		if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SKILLBOOK ) {
			locvar_itemowner_s += lang("《" + skillname(inv(INV_ITEM_BOOK_ID, itemowner_itemid)) + "》という題名の", " titled <Art of " + skillname(inv(INV_ITEM_BOOK_ID, itemowner_itemid)) + ">")
		}
		else {
			if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_BOOK_RACHEL ) {
				locvar_itemowner_s += lang("第", " of Rachel No.") + inv(INV_ITEM_PARAM2, itemowner_itemid) + lang("巻目の", "")
			}
			else {
				if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_RED_BOOK ) {
					booktitlefix itemowner_itemid // BOOKS COMPATIABILITY
					locvar_itemowner_s += lang("《" + booktitle(inv(INV_ITEM_BOOK_ID, itemowner_itemid)) + "》という題名の", " titled <" + booktitle(inv(INV_ITEM_BOOK_ID, itemowner_itemid)) + ">")
				}
			}
		}
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_MEMORY_FRAGMENT | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_MEMORY_CONVERTER ) {
		locvar_itemowner_s += lang("《" + skillname(inv(INV_ITEM_PARAM1, itemowner_itemid)) + "》の", " <Art of " + skillname(inv(INV_ITEM_PARAM1, itemowner_itemid)) + ">")
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SPIRITIUM ) {
		locvar_itemowner_s += lang("《" + _seikaku(inv(INV_ITEM_PARAM1, itemowner_itemid)) + "》の", "<" + _seikaku(inv(INV_ITEM_PARAM1, itemowner_itemid)) + "> ")
	}
	if ( locvar_itemowner_a == FILTER_FURNITURE_ALTAR ) {
		if ( inv(INV_ITEM_GOD, itemowner_itemid) != GOD_EYTH ) {
			locvar_itemowner_s += lang(godname(inv(INV_ITEM_GOD, itemowner_itemid)) + "の", " <" + godname(inv(INV_ITEM_GOD, itemowner_itemid)) + ">")
		}
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_JUICE ) {
		if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) != 0 ) {
			inv(INV_ITEM_ID, itemowner_itemid) = inv(INV_ITEM_SUB_NAME, itemowner_itemid)
			locvar_itemowner_s += iknownnameref(inv(INV_ITEM_ID, itemowner_itemid)) + lang("", " ")
			inv(INV_ITEM_ID, itemowner_itemid) = ITEM_ID_JUICE
		}
		if ( ibit(ITEM_BIT_HERBED_IN, itemowner_itemid) == 1 ) {
			locvar_itemowner_s += lang("ミックス", "mix")
		}
		if ( ibit(ITEM_BIT_ACIDPROOF, itemowner_itemid) == 1 ) {
			locvar_itemowner_s += lang("オーレ", "milk")
		}
		if ( ibit(ITEM_BIT_ACIDPROOF, itemowner_itemid) != 1 ) {
			locvar_itemowner_s += lang("ジュース", "juice")
		}
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_COFFEE ) {
		if ( ibit(ITEM_BIT_ACIDPROOF, itemowner_itemid) == 1 ) {
			locvar_itemowner_s += lang("カフェオーレ", "milk coffee")
		}
		if ( ibit(ITEM_BIT_ACIDPROOF, itemowner_itemid) != 1 ) {
			locvar_itemowner_s += lang("コーヒー", "coffee")
		}
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_BLACK_TEA ) {
		if ( ibit(ITEM_BIT_ACIDPROOF, itemowner_itemid) == TRUE ) {
			locvar_itemowner_s += lang("ミルクティー", "milk tea")
		}
		if ( ibit(ITEM_BIT_ACIDPROOF, itemowner_itemid) != TRUE ) {
			locvar_itemowner_s += lang("紅茶", "black tea")
		}
	}
	if ( locvar_itemowner_a == FILTER_ITEM_FOOD ) {
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) != 0 ) {
			if ( inv(INV_ITEM_PARAM2, itemowner_itemid) != 0 ) {
				locvar_itemowner_skip = 1
				if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_FISH ) {
					locvar_itemowner_s = locvar_itemowner_s + foodname(inv(INV_ITEM_PARAM1, itemowner_itemid) / 1000, "" + fishdatan(inv(INV_ITEM_SUB_NAME, itemowner_itemid)), inv(INV_ITEM_PARAM2, itemowner_itemid), inv(INV_ITEM_SUB_NAME, itemowner_itemid))
				}
				else {
					locvar_itemowner_s = locvar_itemowner_s + foodname(inv(INV_ITEM_PARAM1, itemowner_itemid) / 1000, ioriginalnameref(inv(INV_ITEM_ID, itemowner_itemid)), inv(INV_ITEM_PARAM2, itemowner_itemid), inv(INV_ITEM_SUB_NAME, itemowner_itemid))
				}
				/********** JAMES CUSTOM - DISPLAY USER PARTS NAME - BEGINNING *********/
				if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) == CREATURE_ID_USER & inv(INV_ITEM_AMUR_CAGE, itemowner_itemid) > 0 ) {
					sreplace locvar_itemowner_s, locvar_itemowner_s, "user", getcnpcnamebychecksum(itemowner_itemid)
				}
				/********** JAMES CUSTOM - DISPLAY USER PARTS NAME - ENDING *********/
				return
			}
		}
		if ( inv(INV_ITEM_PROPERTY, itemowner_itemid) == PROP_QUEST ) {
			locvar_itemowner_s += lang("", " grown ") + _weight(inv(INV_ITEM_SUB_NAME, itemowner_itemid)) + lang("育った", "")
		}
	}
	if ( jp ) {
		if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_MANUSCRIPT ) {
			locvar_itemowner_s += _bookself(inv(INV_ITEM_PARAM3, itemowner_itemid))
		}
		if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_PRODUCED_BOOK ) {
			randomize inv(INV_ITEM_SUB_NAME, itemowner_itemid) - 40000
			locvar_itemowner_s += _bookselfs(inv(INV_ITEM_PARAM3, itemowner_itemid))
			randomize
		}
	} else {
		if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_MANUSCRIPT ) {
			locvar_itemowner_s += " (" + _bookself(inv(INV_ITEM_PARAM3, itemowner_itemid))  + ")"
		}
	}
	if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) != 0 ) {
		if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_FISH | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_FISH_JUNK ) {
			if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) < 0 | inv(INV_ITEM_SUB_NAME, itemowner_itemid) >= 120 ) {
				locvar_itemowner_s += "/bugged/"
				return
			}
			locvar_itemowner_s += "" + fishdatan(inv(INV_ITEM_SUB_NAME, itemowner_itemid))
		}
		else {
			if ( locvar_itemowner_a == FILTER_ITEM_FOOD | locvar_itemowner_a == FILTER_REMAINS | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_FIGURINE | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_CARD | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SHIT | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_BOTTLE_MILK | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SOUL_SPINDLE | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_GOLDEN_DOLL | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SOCKS2 | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_NECRO_PARTS ) {
				if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SOUL_SPINDLE ) {
					if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) < 0 | inv(INV_ITEM_SUB_NAME, itemowner_itemid) >= MAX_DB ) {
						locvar_itemowner_s += "/bugged/"
						return
					}
					if ( inv(INV_ITEM_PROPERTY, itemowner_itemid) != PROP_QUEST ) {
						locvar_itemowner_s += lang("", " of ") + refchara(inv(INV_ITEM_SUB_NAME, itemowner_itemid), DBSPEC_CHARA_NAME_ORG, 1)
						if ( jp ) {
							locvar_itemowner_s += "との"
						}
					}
				}
				else {
					if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) < 0 | inv(INV_ITEM_SUB_NAME, itemowner_itemid) >= MAX_DB ) {
						locvar_itemowner_s += "/bugged/"
						return
					}
					if ( inv(INV_ITEM_PROPERTY, itemowner_itemid) != PROP_QUEST ) {
						locvar_itemowner_s += lang("", " of ") + refchara(inv(INV_ITEM_SUB_NAME, itemowner_itemid), DBSPEC_CHARA_NAME_ORG, 1)
						if ( jp ) {
							locvar_itemowner_s += "の"
						}
					}
					if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_NECRO_PARTS & jp ) {
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 1 ) {
							locvar_itemowner_s += lang("あたま", "head")
						}
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 2 ) {
							locvar_itemowner_s += lang("くび", "neck")
						}
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 3 ) {
							locvar_itemowner_s += lang("せなか", "back")
						}
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 4 ) {
							locvar_itemowner_s += lang("どうたい", "chest")
						}
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 5 ) {
							locvar_itemowner_s += lang("て", "hand")
						}
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 6 ) {
							locvar_itemowner_s += lang("ゆび", "finger")
						}
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 7 ) {
							locvar_itemowner_s += lang("うで", "arm")
						}
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 8 ) {
							locvar_itemowner_s += lang("こし", "waist")
						}
						if ( inv(INV_ITEM_PARTS, itemowner_itemid) == 9 ) {
							locvar_itemowner_s += lang("あし", "leg")
						}
					}
				}
				/********** JAMES CUSTOM - DISPLAY USER PARTS NAME - BEGINNING *********/
				if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) == CREATURE_ID_USER & inv(INV_ITEM_AMUR_CAGE, itemowner_itemid) > 0 ) {
					sreplace locvar_itemowner_s, locvar_itemowner_s, "user", getcnpcnamebychecksum(itemowner_itemid)
				}
				/********** JAMES CUSTOM - DISPLAY USER PARTS NAME - ENDING *********/
			}
		}
		if ( locvar_itemowner_a == FILTER_FURNITURE ) {
			if ( jp ) {
				if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) >= 12 ) {
					inv(INV_ITEM_SUB_NAME, itemowner_itemid) = 0
				}
				else {
					locvar_itemowner_s += _furniture(inv(INV_ITEM_SUB_NAME, itemowner_itemid))
				}
			}
		}
		if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_DEED ) {
			locvar_itemowner_s += lang("", " of ") + _homename(inv(INV_ITEM_PARAM1, itemowner_itemid)) + lang("の", "")
		}
		if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_BILL ) {
			locvar_itemowner_s += lang("" + inv(INV_ITEM_SUB_NAME, itemowner_itemid) + "goldの", " <" + inv(INV_ITEM_SUB_NAME, itemowner_itemid) + "gp>")
		}
		if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_VOMIT | inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_URINE ) {
			if ( inv(INV_ITEM_SUB_NAME, itemowner_itemid) < 0 | inv(INV_ITEM_SUB_NAME, itemowner_itemid) >= MAX_DB ) {
				locvar_itemowner_s += "/bugged/"
				return
			}
			locvar_itemowner_s += lang("" + refchara(inv(INV_ITEM_SUB_NAME, itemowner_itemid), DBSPEC_CHARA_NAME_ORG, 1) + "の", " of " + refchara(inv(INV_ITEM_SUB_NAME, itemowner_itemid), DBSPEC_CHARA_NAME_ORG, 1))
		}
	}
	if ( inv(INV_ITEM_ID, itemowner_itemid) == ITEM_ID_SECRET_TREASURE ) {
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) == TRAIT_OTHER_SAINT ) {
			locvar_itemowner_s += lang("善人の", " of saint")
		}
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) == TRAIT_OTHER_WICKED ) {
			locvar_itemowner_s += lang("悪人の", " of wicked")
		}
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) == TRAIT_GOD_EHEKATL ) {
			locvar_itemowner_s += lang("エヘカトルの", " of Ehekatl")
		}
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) == TRAIT_GOD_OPATOS ) {
			locvar_itemowner_s += lang("オパートスの", " of Opatos")
		}
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) == TRAIT_GOD_ITZPALT ) {
			locvar_itemowner_s += lang("イツパロトルの", " of Itzpalt")
		}
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) == TRAIT_GOD_JURE ) {
			locvar_itemowner_s += lang("ジュアの", " of Jure")
		}
		if ( inv(INV_ITEM_PARAM1, itemowner_itemid) == locvar_itemowner_traitmanifeat ) { // seems like there was a plan to have a Mani feat at some point
			locvar_itemowner_s += lang("マニの", " of Mani")
		}
	}
	return

#defcfunc itemname int itemname_itemid, int itemname_arg2, int itemname_arg3
	itemnamehack = inv(INV_ITEM_ID, itemname_itemid) + 1
	if ( inv(INV_ITEM_ID, itemname_itemid) >= maxitemid - 2 | inv(INV_ITEM_ID, itemname_itemid) > length(ioriginalnameref) ) {
		itemnamehack = 0
		return lang("未知のアイテム(バージョン非互換)", "unknown item (incompatible version)")
	}

	/********** ORIGINAL - BEGINNING **********

	if ( inv(INV_ITEM_QUALITY, itemname_itemid) >= FIX_QUALITY_GODLY ) {
		locvar_itemname_iqiality(itemname_itemid) = FIX_QUALITY_GODLY
	}

	 ********** ORIGINAL - ENDING **********/

	/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Fix typos in E+, if just properly using the macro, it would break even more things (turn artifacts into godly items)

	if ( inv(INV_ITEM_QUALITY, itemname_itemid) > FIX_QUALITY_UNIQUE ) {
		inv(INV_ITEM_QUALITY, itemname_itemid) = FIX_QUALITY_UNIQUE
	}

	/********** BLOODYSHADE CUSTOM - ENDING **********/

	item_checkknown itemname_itemid
	if ( itemname_arg2 == 0 ) {
		locvar_itemowner_num2 = inv(INV_ITEM_NUM, itemname_itemid)
	}
	else {
		locvar_itemowner_num2 = itemname_arg2
	}
	locvar_itemowner_a = refitem(inv(INV_ITEM_ID, itemname_itemid), DBSPEC_TYPE)
	if ( jp ) {
		if ( locvar_itemowner_num2 > 1 ) {
			locvar_itemname_s2 = "個の"
			if ( locvar_itemowner_a == FILTER_ARMOR ) {
				locvar_itemname_s2 = "着の"
			}
			if ( locvar_itemowner_a == FILTER_ITEM_SPELLBOOK | locvar_itemowner_a == FILTER_ITEM_BOOK ) {
				if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_RECIPE ) {
					locvar_itemname_s2 = "枚の"
				}
				else {
					locvar_itemname_s2 = "冊の"
				}
			}
			if ( locvar_itemowner_a == FILTER_WEAPON ) {
				locvar_itemname_s2 = "本の"
			}
			if ( locvar_itemowner_a == FILTER_ITEM_POTION ) {
				locvar_itemname_s2 = "服の"
			}
			if ( locvar_itemowner_a == FILTER_ITEM_SCROLL ) {
				locvar_itemname_s2 = "巻の"
			}
			if ( locvar_itemowner_a == FILTER_GLOVES | locvar_itemowner_a == FILTER_BOOTS | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SOCKS2 ) {
				locvar_itemname_s2 = "対の"
			}
			if ( locvar_itemowner_a == FILTER_GOLD | locvar_itemowner_a == FILTER_PLATINUM | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SMALL_MEDAL | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_MUSIC_TICKET | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_TOKEN_FRIENDSHIP | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SOCKS | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_PANTY | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_1_2_MILLION_TAX_CERTIFICATE | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_12_MILLION_TAX_CERTIFICATE | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_BRONZE_COIN | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SKILL_TICKET | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_MANUSCRIPT ) {
				locvar_itemname_s2 = "枚の"
			}
			if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_FISH ) {
				locvar_itemname_s2 = "匹の"
			}
			locvar_itemowner_s = "" + locvar_itemowner_num2 + locvar_itemname_s2
		}
		else {
			locvar_itemowner_s = ""
		}
		if ( inv(INV_ITEM_KNOWN, itemname_itemid) >= ITEM_KNOWN_FULL ) {
			if ( inv(INV_ITEM_STATUS, itemname_itemid) == ITEM_STATUS_BLESSED ) {
				locvar_itemowner_s += strblessed
			}
			if ( inv(INV_ITEM_STATUS, itemname_itemid) == ITEM_STATUS_CURSED ) {
				locvar_itemowner_s += strcursed
			}
			if ( inv(INV_ITEM_STATUS, itemname_itemid) == ITEM_STATUS_DOOMED ) {
				locvar_itemowner_s += strdoomed
			}
		}
	}
	else {
		locvar_itemowner_s = ""
		if ( inv(INV_ITEM_KNOWN, itemname_itemid) >= ITEM_KNOWN_FULL ) {
			if ( inv(INV_ITEM_STATUS, itemname_itemid) == ITEM_STATUS_BLESSED ) {
				locvar_itemowner_s = strblessed + " "
			}
			if ( inv(INV_ITEM_STATUS, itemname_itemid) == ITEM_STATUS_CURSED ) {
				locvar_itemowner_s = strcursed + " "
			}
			if ( inv(INV_ITEM_STATUS, itemname_itemid) == ITEM_STATUS_DOOMED ) {
				locvar_itemowner_s = strdoomed + " "
			}
		}
		if ( irandomname(inv(INV_ITEM_ID, itemname_itemid)) == 1 & inv(INV_ITEM_KNOWN, itemname_itemid) < ITEM_KNOWN_NAME ) {
			locvar_itemname_s2 = ""
		}
		else {
			locvar_itemname_s2 = "" + ioriginalnameref2(inv(INV_ITEM_ID, itemname_itemid))
			/********** JAMES CUSTOM - DISPLAY CUSTOM ITEM FROM OMAKE - BEGINNING *********/
			if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_OMAKE_CUSTOM_ITEM & inv(INV_ITEM_OMAKE_CUSTOM_ITEM_ID, itemname_itemid) < useritemmax & useritemmax > 0 ) {
				locvar_itemname_s2 = ""
			}
			/********** JAMES CUSTOM - DISPLAY CUSTOM ITEM FROM OMAKE - ENDING *********/
			if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_JUICE ) {
				locvar_itemname_s2 += "bottle"
			}
			if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_COFFEE ) {
				locvar_itemname_s2 += "cup"
			}
			if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_BLACK_TEA ) {
				locvar_itemname_s2 += "cup"
			}
			if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_PRODUCED_BOOK ) {
				locvar_itemname_s2 += _bookselfs(inv(INV_ITEM_PARAM3, itemname_itemid))
			}
			if ( instr(ioriginalnameref(inv(INV_ITEM_ID, itemname_itemid)), 0, "with") != (-1) ) {
				locvar_itemname_s3 = "with"
			}
			else {
				locvar_itemname_s3 = "of"
			}
			if ( inv(INV_ITEM_KNOWN, itemname_itemid) != ITEM_KNOWN_NONE ) {
				if ( locvar_itemname_s2 == "" ) {
					if ( inv(INV_ITEM_WEIGHT, itemname_itemid) < 0 ) {
						locvar_itemname_s2 = "cargo"
					}
					if ( locvar_itemowner_a == FILTER_GLOVES | locvar_itemowner_a == FILTER_BOOTS ) {
						locvar_itemname_s2 = "pair"
					}
				}
			}
			if ( locvar_itemowner_a == FILTER_ITEM_FOOD ) {
				if ( inv(INV_ITEM_PARAM1, itemname_itemid) != 0 ) {
					if ( inv(INV_ITEM_PARAM2, itemname_itemid) != 0 ) {
							locvar_itemname_s2 = "dish"
					}
				}
			}
		}
		if ( locvar_itemname_s2 != "" ) {
			if ( locvar_itemowner_num2 > 1 ) {

				/********** ORIGINAL - BEGINNING **********

				locvar_itemowner_s = "" + locvar_itemowner_num2 + " " + locvar_itemowner_s + locvar_itemname_s2 + "s " + locvar_itemname_s3 + " "

				 ********** ORIGINAL - ENDING **********/

				/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Proper plural for items -- type names

				switch locvar_itemname_s2
					case "dish"
						locvar_itemowner_s = "" + locvar_itemowner_num2 + " " + locvar_itemowner_s + locvar_itemname_s2 + "es " + locvar_itemname_s3 + " "
						swbreak
					default
						locvar_itemowner_s = "" + locvar_itemowner_num2 + " " + locvar_itemowner_s + locvar_itemname_s2 + "s " + locvar_itemname_s3 + " "
						swbreak
				swend

				/********** BLOODYSHADE CUSTOM - ENDING **********/

			}
			else {
				locvar_itemowner_s = locvar_itemowner_s + locvar_itemname_s2 + " " + locvar_itemname_s3 + " "
			}
		}
		else {
			if ( locvar_itemowner_num2 > 1 ) {
				locvar_itemowner_s = "" + locvar_itemowner_num2 + " " + locvar_itemowner_s
			}
		}
	}
	if ( ibit(ITEM_BIT_ALIVE, itemname_itemid) == TRUE ) {
		if ( inv(INV_ITEM_PARAM1, itemname_itemid) < 15 ) {
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) >= inv(INV_ITEM_PARAM1, itemname_itemid) * 100 ) {
				locvar_itemowner_s += lang("[成長可能な]", "[Growable] ")
			}
		}
	}
	if ( ibit(ITEM_BIT_SHOP_SAMPLE, itemname_itemid) == TRUE ) {
		locvar_itemowner_s += lang("見本用の", "sample ")
	}
	if ( inv(INV_ITEM_MATERIAL, itemname_itemid) == ITEM_MATERIAL_RAW ) {
		if ( inv(INV_ITEM_ROT, itemname_itemid) < 0 ) {
			locvar_itemowner_s += lang("腐った", "rotten ")
		}
	}
	if ( locvar_itemowner_a == FILTER_ITEM_FOOD & inv(INV_ITEM_PARAM1, itemname_itemid) / 1000 == 6 & inv(INV_ITEM_PARAM2, itemname_itemid) == 0 ) {
		locvar_itemowner_s += "" + inv(INV_ITEM_WEIGHT, itemname_itemid) / 100 * sqrt(sqrt(inv(INV_ITEM_WEIGHT, itemname_itemid) + 4000)) + lang("cmの", "cm ")
	}
	if ( en ) {
		if ( locvar_itemowner_a == FILTER_ITEM_FOOD ) {
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) != 0 ) {
				if ( inv(INV_ITEM_PARAM2, itemname_itemid) != 0 ) {
					locvar_itemowner_skip = 1
				}
			}
		}
		if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) != 0 ) {
			if ( locvar_itemowner_a == FILTER_FURNITURE ) {
				if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) >= 12 ) {
					inv(INV_ITEM_SUB_NAME, itemname_itemid) = 0
				}
				else {
					locvar_itemowner_s += _furniture(inv(INV_ITEM_SUB_NAME, itemname_itemid)) + " "
				}
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_ANCIENT_BOOK ) {
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) != 0 ) {
				locvar_itemowner_s += "decoded "
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_RECIPE ) {
			if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) == 0 ) {
				locvar_itemowner_s += "custom "
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_NECRO_PARTS ) {
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_HEAD ) {
				locvar_itemowner_s += "head"
			}
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_NECK ) {
				locvar_itemowner_s += "neck"
			}
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_BACK ) {
				locvar_itemowner_s += "back"
			}
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_BODY ) {
				locvar_itemowner_s += "chest"
			}
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_HAND ) {
				locvar_itemowner_s += "hand"
			}
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_RING ) {
				locvar_itemowner_s += "finger"
			}
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_ARM ) {
				locvar_itemowner_s += "arm"
			}
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_WAIST ) {
				locvar_itemowner_s += "waist"
			}
			if ( inv(INV_ITEM_PARTS, itemname_itemid) == EQUIP_SLOT_LEG ) {
				locvar_itemowner_s += "leg"
			}
		}
	}
	/********** JAMES CUSTOM - DISPLAY CUSTOM ITEM FROM OMAKE - BEGINNING *********/
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_OMAKE_CUSTOM_ITEM & inv(INV_ITEM_OMAKE_CUSTOM_ITEM_ID, itemname_itemid) < useritemmax & useritemmax > 0 ) {
		if ( inv(INV_ITEM_KNOWN, itemname_itemid) < ITEM_KNOWN_FULL ) {
			if ( inv(INV_ITEM_QUALITY, itemname_itemid) < FIX_QUALITY_MIRACLE | locvar_itemowner_a >= FILTER_ITEM_MIN ) {
				locvar_itemowner_s += useritemdatan(1, inv(INV_ITEM_OMAKE_CUSTOM_ITEM_ID, itemname_itemid))
			}
			else {
				locvar_itemowner_s += useritemdatan(4, inv(INV_ITEM_OMAKE_CUSTOM_ITEM_ID, itemname_itemid))
			}
		}
		else {
			locvar_itemowner_s += useritemdatan(1, inv(INV_ITEM_OMAKE_CUSTOM_ITEM_ID, itemname_itemid))
		}
		gosub *itemNameSub
		return capitalize(locvar_itemowner_s, cfg_capitalizeItemName)
	}
	/********** JAMES CUSTOM - DISPLAY CUSTOM ITEM FROM OMAKE - ENDING *********/
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_MATERIAL_KIT ) {
		locvar_itemowner_s += "" + mtname(0, inv(INV_ITEM_MATERIAL, itemname_itemid)) + lang("製の", " ")
	}
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_HANDMADE_CHOCOLATE ) {
		if ( inv(INV_ITEM_PARAM3, itemname_itemid) == 6 ) {
			locvar_itemowner_s += lang("願いの女神の", "Wish Goddess ")
		}
	}
	if ( jp ) {
		gosub *itemNameSub
	}
	if ( locvar_itemowner_a == FILTER_FURNITURE ) {
		if ( inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_WILD_FLOWER ) {
			if ( inv(INV_ITEM_MATERIAL, itemname_itemid) != ITEM_MATERIAL_SAND ) {
				locvar_itemowner_s += "" + mtname(0, inv(INV_ITEM_MATERIAL, itemname_itemid)) + lang("細工の", "work ")
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_WILD_FLOWER ) {
			if ( inv(INV_ITEM_MATERIAL, itemname_itemid) != ITEM_MATERIAL_RAW ) {
				locvar_itemowner_s += "" + mtname(0, inv(INV_ITEM_MATERIAL, itemname_itemid)) + lang("細工の", "work ")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 0 ) {
				locvar_itemowner_s += lang("野花", "wild flower")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 1 ) {
				locvar_itemowner_s += lang("スイセン", "daffodil")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 2 ) {
				locvar_itemowner_s += lang("マーガレット", "margaret")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 3 ) {
				locvar_itemowner_s += lang("たんぽぽ", "dandelion")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 4 ) {
				locvar_itemowner_s += lang("チューリップ", "tulip")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 5 ) {
				locvar_itemowner_s += lang("バラ", "rose")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 6 ) {
				locvar_itemowner_s += lang("アジサイ", "hydrangea")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 7 ) {
				locvar_itemowner_s += lang("百合", "lily")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 8 ) {
				locvar_itemowner_s += lang("ひまわり", "sunflower")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 9 ) {
				locvar_itemowner_s += lang("マリーゴールド", "marigold")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 10 ) {
				locvar_itemowner_s += lang("コスモス", "cosmos")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) == 11 ) {
				locvar_itemowner_s += lang("キク", "chrysanthemum")
			}
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) >= 12 ) {
				locvar_itemowner_s += lang("プリムラ", "primula")
			}
		}
	}
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_GIFT ) {
		locvar_itemowner_s += "" + giftn(inv(INV_ITEM_PARAM4, itemname_itemid)) + lang("", " ")
	}
	if ( locvar_itemowner_skip == 1 ) {
		goto *skipName
	}
	locvar_itemname_alpha = FILTER_NOTHING
	if ( inv(INV_ITEM_KNOWN, itemname_itemid) >= ITEM_KNOWN_FULL ) {
		if ( locvar_itemowner_a < FILTER_ITEM_MIN ) {
			if ( ibit(ITEM_BIT_ULTIMATE, itemname_itemid) ) {
				locvar_itemname_alpha = 1
				locvar_itemowner_s += lang("エターナルフォース", "eternal force") + strblank
			}
			else {
				if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) >= 10000 ) {
					if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) < 20000 ) {
						if ( jp ) {
							locvar_itemowner_s += egoname(inv(INV_ITEM_SUB_NAME, itemname_itemid) - 10000) + strblank
						}
					}
					else {
						if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) < 40000 ) {
							locvar_itemowner_s += egominorn(inv(INV_ITEM_SUB_NAME, itemname_itemid) - 20000) + strblank
						}
					}
				}
				if ( inv(INV_ITEM_QUALITY, itemname_itemid) != FIX_QUALITY_UNIQUE ) {
					if ( inv(INV_ITEM_QUALITY, itemname_itemid) >= FIX_QUALITY_MIRACLE ) {
						if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 0 ) {
							locvar_itemowner_s += mtname(1, inv(INV_ITEM_MATERIAL, itemname_itemid)) + strblank
						}
					}
					else {
						if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 0 ) {
							locvar_itemowner_s += mtname(0, inv(INV_ITEM_MATERIAL, itemname_itemid)) + strblank
						}
						if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 0 ) {
							if ( jp ) {
								if ( peek(mtname(0, inv(INV_ITEM_MATERIAL, itemname_itemid))) == 131 ) {
									locvar_itemname_alpha = 1
								}
								else {
									locvar_itemowner_s += "の"
								}
							}
						}
					}
				}
			}
		}
	}
	if ( inv(INV_ITEM_KNOWN, itemname_itemid) == ITEM_KNOWN_NONE ) {
		locvar_itemowner_s += iknownnameref(inv(INV_ITEM_ID, itemname_itemid))
	}
	else {
		if ( inv(INV_ITEM_PARAM4, itemname_itemid) != 0 & inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_FISHING_POLE & inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_GIFT ) {
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 1 ) {
				exist exedir + "user\\item\\plan1.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 2 ) {
				exist exedir + "user\\item\\plan2.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 3 ) {
				exist exedir + "user\\item\\plan3.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 4 ) {
				exist exedir + "user\\item\\plan4.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 5 ) {
				exist exedir + "user\\item\\plan5.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 6 ) {
				exist exedir + "user\\item\\plan6.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 7 ) {
				exist exedir + "user\\item\\plan7.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 8 ) {
				exist exedir + "user\\item\\plan8.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 9 ) {
				exist exedir + "user\\item\\plan9.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 10 ) {
				exist exedir + "user\\item\\plan10.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 11 ) {
				exist exedir + "user\\item\\plan11.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 12 ) {
				exist exedir + "user\\item\\plan12.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 13 ) {
				exist exedir + "user\\item\\plan13.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 14 ) {
				exist exedir + "user\\item\\plan14.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 15 ) {
				exist exedir + "user\\item\\plan15.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 16 ) {
				exist exedir + "user\\item\\plan16.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 17 ) {
				exist exedir + "user\\item\\plan17.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 18 ) {
				exist exedir + "user\\item\\plan18.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 19 ) {
				exist exedir + "user\\item\\plan19.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 20 ) {
				exist exedir + "user\\item\\plan20.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 21 ) {
				exist exedir + "user\\item\\plan21.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 22 ) {
				exist exedir + "user\\item\\plan22.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 23 ) {
				exist exedir + "user\\item\\plan23.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 24 ) {
				exist exedir + "user\\item\\plan24.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 25 ) {
				exist exedir + "user\\item\\plan25.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 26 ) {
				exist exedir + "user\\item\\plan26.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 27 ) {
				exist exedir + "user\\item\\plan27.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 28 ) {
				exist exedir + "user\\item\\plan28.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 29 ) {
				exist exedir + "user\\item\\plan29.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 30 ) {
				exist exedir + "user\\item\\plan30.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 31 ) {
				exist exedir + "user\\item\\plan31.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 32 ) {
				exist exedir + "user\\item\\plan32.txt"
			}
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 33 ) {
				exist exedir + "user\\item\\plan33.txt"
			}
			if ( strsize != (-1) ) {
				sdim locvar_itemname_buff, strsize
				notesel locvar_itemname_buff
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 1 ) {
					noteload exedir + "user\\item\\plan1.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 2 ) {
					noteload exedir + "user\\item\\plan2.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 3 ) {
					noteload exedir + "user\\item\\plan3.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 4 ) {
					noteload exedir + "user\\item\\plan4.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 5 ) {
					noteload exedir + "user\\item\\plan5.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 6 ) {
					noteload exedir + "user\\item\\plan6.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 7 ) {
					noteload exedir + "user\\item\\plan7.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 8 ) {
					noteload exedir + "user\\item\\plan8.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 9 ) {
					noteload exedir + "user\\item\\plan9.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 10 ) {
					noteload exedir + "user\\item\\plan10.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 11 ) {
					noteload exedir + "user\\item\\plan11.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 12 ) {
					noteload exedir + "user\\item\\plan12.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 13 ) {
					noteload exedir + "user\\item\\plan13.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 14 ) {
					noteload exedir + "user\\item\\plan14.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 15 ) {
					noteload exedir + "user\\item\\plan15.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 16 ) {
					noteload exedir + "user\\item\\plan16.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 17 ) {
					noteload exedir + "user\\item\\plan17.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 18 ) {
					noteload exedir + "user\\item\\plan18.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 19 ) {
					noteload exedir + "user\\item\\plan19.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 20 ) {
					noteload exedir + "user\\item\\plan20.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 21 ) {
					noteload exedir + "user\\item\\plan21.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 22 ) {
					noteload exedir + "user\\item\\plan22.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 23 ) {
					noteload exedir + "user\\item\\plan23.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 24 ) {
					noteload exedir + "user\\item\\plan24.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 25 ) {
					noteload exedir + "user\\item\\plan25.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 26 ) {
					noteload exedir + "user\\item\\plan26.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 27 ) {
					noteload exedir + "user\\item\\plan27.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 28 ) {
					noteload exedir + "user\\item\\plan28.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 29 ) {
					noteload exedir + "user\\item\\plan29.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 30 ) {
					noteload exedir + "user\\item\\plan30.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 31 ) {
					noteload exedir + "user\\item\\plan31.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 32 ) {
					noteload exedir + "user\\item\\plan32.txt"
				}
				if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 33 ) {
					noteload exedir + "user\\item\\plan33.txt"
				}
				locvar_itemname_t = "%txtName"
				locvar_itemname_p = instr(locvar_itemname_buff, 0, locvar_itemname_t + "," + lang("JP", "EN"))
				locvar_itemname_buff = strmid(locvar_itemname_buff, locvar_itemname_p, instr(locvar_itemname_buff, locvar_itemname_p + 1, "%"))
				if ( noteinfo(0) > 1 ) {
					locvar_itemname_p = noteinfo(0) - 1
					noteget locvar_itemname_t, locvar_itemname_p
					if ( locvar_itemname_t != "" ) {
						locvar_itemname_buff = locvar_itemname_t
					}
				}
				locvar_itemowner_s += locvar_itemname_buff
				locvar_itemname_p = 0
			}
		}
		else {
			if ( inv(INV_ITEM_KNOWN, itemname_itemid) < ITEM_KNOWN_FULL ) {
				if ( inv(INV_ITEM_QUALITY, itemname_itemid) < FIX_QUALITY_MIRACLE | locvar_itemowner_a >= FILTER_ITEM_MIN ) {

					/********** ORIGINAL - BEGINNING **********

					locvar_itemowner_s += ioriginalnameref(inv(INV_ITEM_ID, itemname_itemid))

					 ********** ORIGINAL - ENDING **********/

					/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // unidentified wild flowers shouldn't have another "wild flower" in front of the name

					if ( inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_WILD_FLOWER ) {
						locvar_itemowner_s += ioriginalnameref(inv(INV_ITEM_ID, itemname_itemid))
					}

					/********** BLOODYSHADE CUSTOM - ENDING **********/

				}
				else {
					locvar_itemowner_s += iknownnameref(inv(INV_ITEM_ID, itemname_itemid))
				}
			}
			else {
				if ( inv(INV_ITEM_QUALITY, itemname_itemid) == FIX_QUALITY_UNIQUE | ibit(ITEM_BIT_PRECIOUS, itemname_itemid) == 1 ) {
					if ( jp ) {
						locvar_itemowner_s = "★" + locvar_itemowner_s + ioriginalnameref(inv(INV_ITEM_ID, itemname_itemid))
					}
					else {
						locvar_itemowner_s += ioriginalnameref(inv(INV_ITEM_ID, itemname_itemid))
					}
				}
				else {
					if ( inv(INV_ITEM_QUALITY, itemname_itemid) >= FIX_QUALITY_MIRACLE ) {
						if ( jp ) {
							locvar_itemowner_s = "☆" + locvar_itemowner_s
						}
					}
					if ( locvar_itemname_alpha == 1 & jp ) {
						locvar_itemowner_s += ialphanameref(inv(INV_ITEM_ID, itemname_itemid))
					}
					else {

						/********** ORIGINAL - BEGINNING **********

						locvar_itemowner_s += ioriginalnameref(inv(INV_ITEM_ID, itemname_itemid))

						 ********** ORIGINAL - ENDING **********/

						/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // identified wild flowers shouldn't have another "wild flower" in front of the name

						if ( inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_WILD_FLOWER ) {
							locvar_itemowner_s += ioriginalnameref(inv(INV_ITEM_ID, itemname_itemid))
						}

						/********** BLOODYSHADE CUSTOM - ENDING **********/

					}
					if ( en ) {
						if ( locvar_itemowner_a < FILTER_ITEM_MIN ) {
							if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) >= 10000 ) {
								if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) < 20000 ) {
									locvar_itemowner_s += " " + egoname(inv(INV_ITEM_SUB_NAME, itemname_itemid) - 10000)
								}
							}
						}
						if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_PRODUCED_BOOK ) {
							randomize inv(INV_ITEM_SUB_NAME, itemname_itemid) - 40000
							locvar_itemowner_s += lang("『", "<") + random_title(1) + lang("』", ">")
							randomize
							goto *skipName
						}
					}
					if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) >= 40000 ) {
						randomize inv(INV_ITEM_SUB_NAME, itemname_itemid) - 40000
						if ( inv(INV_ITEM_QUALITY, itemname_itemid) == FIX_QUALITY_MIRACLE ) {
							locvar_itemowner_s += lang("『", " <") + random_title(1) + lang("』", ">")
						}
						else {
							locvar_itemowner_s += lang("《", " {") + random_title(1) + lang("》", "}")
						}
						randomize
					}
				}
			}
		}
	}
	*skipName
	if ( en ) {
		if ( itemname_arg3 == 0 ) {
			if ( inv(INV_ITEM_KNOWN, itemname_itemid) >= ITEM_KNOWN_FULL & (inv(INV_ITEM_QUALITY, itemname_itemid) >= FIX_QUALITY_MIRACLE & locvar_itemowner_a < FILTER_ITEM_MIN) ) {
				locvar_itemowner_s = "the " + locvar_itemowner_s
			}
			else {
				if ( locvar_itemowner_num2 == 1 ) {
					if (locvar_itemowner_s == "unicorn horn") {
						locvar_itemowner_s = "a " + locvar_itemowner_s
					} else {
						locvar_itemname_s4 = strmid(locvar_itemowner_s, 0, 1)
						if ( locvar_itemname_s4 == "a" | locvar_itemname_s4 == "o" | locvar_itemname_s4 == "i" | locvar_itemname_s4 == "u" | locvar_itemname_s4 == "e" ) {
							locvar_itemowner_s = "an " + locvar_itemowner_s
						}
						else {
							locvar_itemowner_s = "a " + locvar_itemowner_s
						}
					}
				}
			}
		}

		/********** ORIGINAL - BEGINNING **********

		if ( locvar_itemname_s2 == "" ) {
			if ( inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_FISH ) {
				if ( locvar_itemowner_num2 > 1 ) {
					locvar_itemowner_s += "s"
				}
			}
		}

		 ********** ORIGINAL - ENDING **********/

		/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Proper plural for items -- item names

		if ( locvar_itemname_s2 == "" ) {
			if ( inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_FISH & inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_EVITEM ) {
				if ( locvar_itemowner_num2 > 1 ) {
					check_string_ending = 1
					item_string_id = inv(INV_ITEM_ID, itemname_itemid)

					switch item_string_id // special handles certain items
						case ITEM_ID_DECORATED_GLOVES
						case ITEM_ID_THICK_GAUNTLETS
						case ITEM_ID_HEAVY_BOOTS
						case ITEM_ID_COMPOSITE_BOOTS
						case ITEM_ID_WASHINGS
						case ITEM_ID_GOODS
						case ITEM_ID_VARIOUS_ACCESSORIES
						case ITEM_ID_ALCHEMY_TOOLS
						case ITEM_ID_PAINTING_TOOLS
						case ITEM_ID_DISORDERLY_BOOKS
						case ITEM_ID_GLOVES
						case ITEM_ID_PLATE_GAUNTLETS
						case ITEM_ID_LIGHT_GLOVES
						case ITEM_ID_COMPOSITE_GAUNTLETS
						case ITEM_ID_SHOES
						case ITEM_ID_BOOTS
						case ITEM_ID_TIGHT_BOOTS
						case ITEM_ID_ARMORED_BOOTS
						case ITEM_ID_SEVEN_LEAGUE_BOOTS
						case ITEM_ID_UPSTAIRS
						case ITEM_ID_DOWNSTAIRS
						case ITEM_ID_ROMIAS
						case ITEM_ID_KNEADED_SWEETS_OF_WITCH
						case ITEM_ID_SOUP_OF_WONDERLAND
						case ITEM_ID_COFFEE_BEANS
						case ITEM_ID_PANZERFAUST_X
						case ITEM_ID_ELEMENTS_EYES
						case ITEM_ID_DUMBBELL_OF_OPATOS
						case ITEM_ID_DOWSING_OPATOS
						case ITEM_ID_SCISSORS
						case ITEM_ID_CROP_MANAGEMENT_TOOLS
						case ITEM_ID_MEMORY_FRAGMENT
							check_string_ending = 0
							swbreak
						case ITEM_ID_DISH
						case ITEM_ID_DEAD_FISH
						case ITEM_ID_MATERIAL_BOX
						case ITEM_ID_SHOP_STRONGBOX
						case ITEM_ID_TAX_MASTERS_TAX_BOX
						case ITEM_ID_LEASH
						case ITEM_ID_COOLER_BOX
						case ITEM_ID_SCHRODINGERS_CAT
						case ITEM_ID_BIG_BRUSH
						case ITEM_ID_JUKE_BOX
						case ITEM_ID_SPECIAL_AMMO_BOX
							locvar_itemowner_s += "es"
							check_string_ending = 0
							swbreak
						case ITEM_ID_TOY
						case ITEM_ID_SKELETON_KEY
						case ITEM_ID_DD_CEMETERY_KEY
							locvar_itemowner_s += "s"
							check_string_ending = 0
							swbreak
						case ITEM_ID_COFFIN_OF_NECROMANCY
							temp_var_str1 = strmid(locvar_itemowner_s, 0, instr(locvar_itemowner_s, 0, "coffin "))
							locvar_itemowner_s = temp_var_str1 + "coffins" + strmid(locvar_itemowner_s, instr(locvar_itemowner_s, 0, " of "), strlen(locvar_itemowner_s) - 1)
							check_string_ending = 0
							swbreak
					swend

					if ( check_string_ending == 1 ) {
						last_char = strmid(locvar_itemowner_s, strlen(locvar_itemowner_s) - 1, 1)

						switch last_char
							case "s"
								locvar_itemowner_s += "es"
								swbreak
							case "f"
								locvar_itemowner_s = strmid(locvar_itemowner_s, 0, strlen(locvar_itemowner_s) - 1) + "ves"
								swbreak
							case "y"
								locvar_itemowner_s = strmid(locvar_itemowner_s, 0, strlen(locvar_itemowner_s) - 1) + "ies"
								swbreak
							case " "
								swbreak
							default
								locvar_itemowner_s += "s"
								swbreak
						swend
					}
				}
			}
		}

		/********** BLOODYSHADE CUSTOM - ENDING **********/

		gosub *itemNameSub
	}

	/********** ANNA/BLOODYSHADE CUSTOM - BEGINNING **********/ // Highlight/Filter Items. Also shows fruit tree info in item name if quality is known

	if ( ItemHighlight(inv(INV_ITEM_ID, itemname_itemid)) == 1 & TweakData(TWEAK_CONVENIENCE_HIGHLIGHT_FILTER, TWEAK_CATEGORY_CONVENIENCE) > 0 ) {
		locvar_itemowner_s = capitalize(locvar_itemowner_s, 2)
	}

	if ( inv(INV_ITEM_KNOWN, itemname_itemid) >= ITEM_KNOWN_QUALITY ) {
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_TREE_FRUIT ) {
			locvar_itemowner_s += " (" + ioriginalnameref(inv(INV_ITEM_PARAM2, itemname_itemid)) + ": " + inv(INV_ITEM_PARAM1, itemname_itemid) + ")"
		}
	}

	/********** ANNA/BLOODYSHADE CUSTOM - ENDING **********/

	if ( inv(INV_ITEM_KNOWN, itemname_itemid) >= ITEM_KNOWN_FULL ) {
		if ( inv(INV_ITEM_LEVEL, itemname_itemid) != 0 ) {
			locvar_itemowner_s += "" + cnvfix(inv(INV_ITEM_LEVEL, itemname_itemid))
		}
		if ( inv(INV_ITEM_PARAM2, itemname_itemid) != 0 ) {
			if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SKULL_SWORD | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_VIOLENT_SKULL_SWORD | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_MAGISTUS | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_TRISMAGISTUS | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_MYSTERIOUS_FOSSIL | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_MEMORY_FRAGMENT | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_MANA_DESTONE | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_FIGHTING_DESTONE | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_DEVIL_FRAGMENT ) {
				locvar_itemowner_s += " (Lv. " + inv(INV_ITEM_PARAM2, itemname_itemid) + ")"
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_AWAKE_DESTONE ) {
			locvar_itemname_init = (inv(INV_ITEM_PARAM2, itemname_itemid) + inv(INV_ITEM_PARAM3, itemname_itemid) + inv(INV_ITEM_AMUR_CAGE, itemname_itemid)) / 10
			locvar_itemowner_s += " (LV." + locvar_itemname_init + ")"
		}
		if ( ibit(ITEM_BIT_CHARGE_ITEM, itemname_itemid) == 1 ) {
			locvar_itemowner_s += lang("(残り" + inv(INV_ITEM_CHARGE, itemname_itemid) + "回)", " (Charges: " + inv(INV_ITEM_CHARGE, itemname_itemid) + ")")
		}
		if ( refitem(inv(INV_ITEM_ID, itemname_itemid), DBSPEC_TYPE) == FILTER_ITEM_FOOD ) {
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) != 0 ) {
				if ( inv(INV_ITEM_PARAM2, itemname_itemid) != 0 ) {
					locvar_itemowner_s += " (Rank: " + inv(INV_ITEM_PARAM2, itemname_itemid) + ")"
				}
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_BOTTLE_DYE ) {
			locvar_itemowner_s += " (No." + inv(INV_ITEM_COL, itemname_itemid) + ")"
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SLIME_FUKAGURUMI ) {
			locvar_itemowner_s += lang("", " of ")
			if ( jp ) {
				locvar_itemowner_s += "の"
			}
			randomize inv(INV_ITEM_PARAM1, itemname_itemid)
			locvar_itemowner_s += randomname()
			if ( jp ) {
				locvar_itemowner_s += "ちゃん"
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_CF_POTIOMAN | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_CRUSH_POTIOMAN | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_BATTLE_POTIOMAN | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SUPER_POTIOMAN ) {
			locvar_itemowner_s += lang("(装弾数" + inv(INV_ITEM_PARAM2, itemname_itemid) + ")", " (Bullets: " + inv(INV_ITEM_PARAM2, itemname_itemid) + ")")
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_FILTRATION_BOTTLE ) {
			locvar_itemowner_s += lang("(残り" + inv(INV_ITEM_PARAM2, itemname_itemid) + "/5)", " (Remain: " + inv(INV_ITEM_PARAM2, itemname_itemid) + "/5)")
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_JADE_DARK_ORB ) {
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 0 ) {
				locvar_itemowner_s += lang("(アブラツボ)", " (oil pot)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 1 ) {
				locvar_itemowner_s += lang("(ギロチンフォール)", " (guillotine fall)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 2 ) {
				locvar_itemowner_s += lang("(ハンマーペンデュラム)", " (hammer pendulum)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 3 ) {
				locvar_itemowner_s += lang("(レインロック)", " (rock rain)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 4 ) {
				locvar_itemowner_s += lang("(マジンビーム)", " (Mazin beam)")
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_AZURE_DARK_ORB ) {
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 0 ) {
				locvar_itemowner_s += lang("(トラバサミ)", " (torabasami)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 1 ) {
				locvar_itemowner_s += lang("(エレキホース)", " (electric horse)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 2 ) {
				locvar_itemowner_s += lang("(デンジカタパルト)", " (electromagnetic)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 3 ) {
				locvar_itemowner_s += lang("(ガスフロア)", " (gas floor)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 4 ) {
				locvar_itemowner_s += lang("(マジンパンチ)", " (Mazin punch)")
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_CRIMSON_DARK_ORB ) {
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 0 ) {
				locvar_itemowner_s += lang("(スプラッシュ)", " (splash)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 1 ) {
				locvar_itemowner_s += lang("(フレイムアロー)", " (flame Arrow)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 2 ) {
				locvar_itemowner_s += lang("(インパクトウォール)", " (impact wall)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 3 ) {
				locvar_itemowner_s += lang("(メガバズソー)", " (mega buzzsaw)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 4 ) {
				locvar_itemowner_s += lang("(マジンファイヤー)", " (Mazin fire)")
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_WHITE_DARK_ORB ) {
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 0 ) {
				locvar_itemowner_s += lang("(バイブロスピア)", " (vibrating spear)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 1 ) {
				locvar_itemowner_s += lang("(ポイズンスピア)", " (poison spear)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 2 ) {
				locvar_itemowner_s += lang("(サイミンスピア)", " (sleepy spear)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 3 ) {
				locvar_itemowner_s += lang("(インクスピア)", " (ink spear)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 4 ) {
				locvar_itemowner_s += lang("(スメリースピア)", " (smelly spear)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 5 ) {
				locvar_itemowner_s += lang("(シビレスピア)", " (paralyze spear)")
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_COFFIN_OF_NECROMANCY ) {
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) <= 2 ) {
				locvar_itemowner_s += lang("(猫ゾンビ)", " (cat)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 3 ) {
				locvar_itemowner_s += lang("(ゾンビ)", " (zombie)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 4 ) {
				locvar_itemowner_s += lang("(マミー)", " (mummy)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 5 ) {
				locvar_itemowner_s += lang("(骸骨戦士)", " (skeleton)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 6 ) {
				locvar_itemowner_s += lang("(リッチ)", " (lich)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 7 ) {
				locvar_itemowner_s += lang("(ネクロドール)", " (doll)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 8 ) {
				locvar_itemowner_s += lang("(ドラゴンゾンビ)", " (dragon)")
			}
			if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 9 ) {
				locvar_itemowner_s += lang("(デッドアイズ)", " (dead-eyes)")
			}
			necromancyParam2Fix ci
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) >= 12000 & inv(INV_ITEM_PARAM2, itemname_itemid) < 18000 ) {
				locvar_itemowner_s += lang("-欺繕", "-Deceive")
			}
		}
		if ( inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_CHEST ) {
			if ( inv(INV_ITEM_DICE1, itemname_itemid) != 0 | inv(INV_ITEM_ATTACK, itemname_itemid) != 0 | inv(INV_ITEM_DAMAGE, itemname_itemid) != 0 ) {
				locvar_itemowner_s += " ("
				if ( inv(INV_ITEM_DICE1, itemname_itemid) != 0 ) {
					locvar_itemowner_s += "" + inv(INV_ITEM_DICE1, itemname_itemid) + "d" + inv(INV_ITEM_DICE2, itemname_itemid)
					if ( inv(INV_ITEM_DAMAGE, itemname_itemid) != 0 ) {
						if ( inv(INV_ITEM_DAMAGE, itemname_itemid) > 0 ) {
							locvar_itemowner_s += "+" + inv(INV_ITEM_DAMAGE, itemname_itemid)
						}
						else {
							locvar_itemowner_s += "" + inv(INV_ITEM_DAMAGE, itemname_itemid)
						}
					}
					locvar_itemowner_s += ")"
					if ( inv(INV_ITEM_ATTACK, itemname_itemid) != 0 ) {
						locvar_itemowner_s += "(" + inv(INV_ITEM_ATTACK, itemname_itemid) + ")"
					}
				}
				else {
					locvar_itemowner_s += "" + inv(INV_ITEM_ATTACK, itemname_itemid) + "," + inv(INV_ITEM_DAMAGE, itemname_itemid) + ")"
				}
			}
		}
		if ( inv(INV_ITEM_DV, itemname_itemid) != 0 | inv(INV_ITEM_PV, itemname_itemid) != 0 ) {
			locvar_itemowner_s += " [" + inv(INV_ITEM_DV, itemname_itemid) + "," + inv(INV_ITEM_PV, itemname_itemid) + "]"
		}
	}
	if ( en ) {
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_WALLET | inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SUITCASE ) {
			locvar_itemowner_s += " (Lost property)"
		}
	}
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_FISHING_POLE ) {
		if ( inv(INV_ITEM_CHARGE, itemname_itemid) != 0 ) {
			locvar_itemowner_s += lang("(" + biten(inv(INV_ITEM_FISHING_BAIT, itemname_itemid)) + "残り" + inv(INV_ITEM_CHARGE, itemname_itemid) + "回)", " (" + inv(INV_ITEM_CHARGE, itemname_itemid) + " " + biten(inv(INV_ITEM_FISHING_BAIT, itemname_itemid)) + ")")
		}
	}
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_MONSTER_BALL ) {
		if ( inv(INV_ITEM_SUB_NAME, itemname_itemid) == CREATURE_ID_BUG ) {
			locvar_itemowner_s += lang(" Lv", " Lv. ") + inv(INV_ITEM_PARAM2, itemname_itemid) + lang(" (空)", " (Empty)")
		}
		else {
			locvar_itemowner_s += " (" + refchara(inv(INV_ITEM_SUB_NAME, itemname_itemid), DBSPEC_CHARA_NAME_ORG, 1) + ")"
		}
	}
	if ( locvar_itemowner_a == FILTER_CONTAINER ) {
		if ( inv(INV_ITEM_PARAM1, itemname_itemid) != 0 ) {
			if ( inv(INV_ITEM_PARAM2, itemname_itemid) > 1 ) {
				if ( inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_CARD_PACK & inv(INV_ITEM_ID, itemname_itemid) != ITEM_ID_MYSTERIOUS_ENVELOPE ) {
					locvar_itemowner_s += lang(" Lock-Lv", " Lock-Lv. ") + inv(INV_ITEM_PARAM2, itemname_itemid)
				}
			}
		}
	}
	if ( inv(INV_ITEM_KNOWN, itemname_itemid) == ITEM_KNOWN_QUALITY ) {
		if ( locvar_itemowner_a < FILTER_ITEM_MIN ) {
			locvar_itemowner_s += " (" + cnven(_quality(inv(INV_ITEM_QUALITY, itemname_itemid))) + ")"
			if ( inv(INV_ITEM_PARAM4, itemname_itemid) == 0 ) {
				locvar_itemowner_s += lang("[" + mtname(0, inv(INV_ITEM_MATERIAL, itemname_itemid)) + "製]", "[" + cnven(mtname(0, inv(INV_ITEM_MATERIAL, itemname_itemid))) + "]")
			}
			if ( inv(INV_ITEM_STATUS, itemname_itemid) == ITEM_STATUS_CURSED ) {
				locvar_itemowner_s += lang("(恐ろしい)", " (Scary)")
			}
			if ( inv(INV_ITEM_STATUS, itemname_itemid) == ITEM_STATUS_DOOMED ) {
				locvar_itemowner_s += lang("(禍々しい)", " (Dreadful)")
			}
		}
	}
	if ( locvar_itemowner_a == FILTER_CONTAINER ) {
		if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SHOPKEEPERS_TRUNK ) {
			locvar_itemowner_s += lang("(移動時消滅)", " (Temporal)")
		}
		else {
			if ( inv(INV_ITEM_FILE, itemname_itemid) == ITEM_ROLE_FILE_NONE ) {
				if ( inv(INV_ITEM_PARAM1, itemname_itemid) == 0 ) {
					locvar_itemowner_s += lang("(空っぽ)", " (Empty)")
				}
			}
		}
	}
	if ( locvar_itemowner_a == FILTER_CARGO_TRADE ) {
		if ( inv(INV_ITEM_PARAM2, itemname_itemid) != 0 ) {
			locvar_itemowner_s += lang("(仕入れ値 " + inv(INV_ITEM_PARAM2, itemname_itemid) + "g)", "(Buying price: " + inv(INV_ITEM_PARAM2, itemname_itemid) + ")")
		}
	}
	if ( ibit(ITEM_BIT_LOVE_BLEND, itemname_itemid) == 1 ) {
		locvar_itemowner_s += lang("(媚薬混入)", " (Aphrodisiac)")
	}
	if ( ibit(ITEM_BIT_POISON_BLEND, itemname_itemid) == 1 ) {
		locvar_itemowner_s += lang("(毒物混入)", " (Poisoned)")
	}
	if ( ibit(ITEM_BIT_HAZARD, itemname_itemid) == 1 ) {
		locvar_itemowner_s += lang("(危険！)", " (Danger!)")
	}
	if ( ibit(ITEM_BIT_HERBED_IN, itemname_itemid) == 1 ) {
		if ( locvar_itemowner_a == FILTER_ITEM_FOOD ) {
			locvar_itemowner_s += lang("(ハーブ入り)", " (Herb)")
		}
	}
	if ( ibit(ITEM_BIT_ANTISEPTIC, itemname_itemid) == 1 ) {
		locvar_itemowner_s += lang("(防腐処理)", " (Antiseptic)")
	}
	if ( ibit(ITEM_BIT_PERIOD, itemname_itemid) == 1 ) {
		if ( gdata(GDATA_AREA) == AREA_VALM ) {
			if ( gdata(GDATA_LEVEL) == 3 ) {
				inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + inv(INV_ITEM_INTERVAL, itemname_itemid)
				inv(INV_ITEM_NEED_SLEEP, itemname_itemid) = 1
				gdata(GDATA_FLAG_DATE_OF_LAST_BREAKFAST) = 1
			}
		}
		if ( gdata(GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE) == 100 ) {
			inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + inv(INV_ITEM_INTERVAL, itemname_itemid)
			inv(INV_ITEM_NEED_SLEEP, itemname_itemid) = 1
			gdata(GDATA_FLAG_DATE_OF_LAST_BREAKFAST) = 1
		}
		if ( gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 < inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) ) {
			locvar_itemowner_s += lang("(" + (inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) - (gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12)) + "時間)", "(Next: " + (inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) - (gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12)) + "h.)")
		}
		if ( inv(INV_ITEM_NEED_SLEEP, itemname_itemid) > 1 ) {
			if ( inv(INV_ITEM_NEED_SLEEP, itemname_itemid) >= gdata(GDATA_FLAG_DATE_OF_LAST_BREAKFAST) ) {
				locvar_itemowner_s += lang("(要睡眠)", " (Need Sleep)")
			}
		}
	}
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SHELTER ) {
		if ( inv(INV_ITEM_FILE, itemname_itemid) != ITEM_ROLE_FILE_NONE ) {
			locvar_itemowner_s += lang(" シリアルNo.", " Serial No.") + inv(INV_ITEM_FILE, itemname_itemid)
		}
	}
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_DEED_PROPERTY_TRANSFER ) {
		if ( inv(INV_ITEM_PARAM2, itemname_itemid) != 0 ) {
			locvar_itemowner_s += lang(" 物件No.", " Property No.") + inv(INV_ITEM_PARAM2, itemname_itemid)
		}
	}
	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_DISC ) {
		locvar_itemowner_s += " <BGM" + inv(INV_ITEM_PARAM1, itemname_itemid) + ">"
	}
	if ( strlen(locvar_itemowner_s) > 66 ) {
		locvar_itemname_len = zentohan(locvar_itemowner_s, locvar_itemname_buf, 0)
		sdim locvar_itemname_buf, locvar_itemname_len
		locvar_itemname_ret = zentohan(locvar_itemowner_s, locvar_itemowner_s, locvar_itemname_len)
	}
	locvar_itemowner_skip = 0
	itemnamehack = 0
	return capitalize(locvar_itemowner_s, cfg_capitalizeItemName)

#deffunc remain_make int remain_make_itemid, int remain_make_arg2
	inv(INV_ITEM_SUB_NAME, remain_make_itemid) = cdata(CDATA_ID, remain_make_arg2)
	/********** JAMES CUSTOM - DISPLAY USER PARTS NAME - BEGINNING *********/
	if ( cdata(CDATA_ID, remain_make_arg2) == CREATURE_ID_USER ) {
		inv(INV_ITEM_AMUR_CAGE, remain_make_itemid) = omakechecksum(cdatan(CDATAN_USER_NPC_TAG, remain_make_arg2))
	}
	/********** JAMES CUSTOM - DISPLAY USER PARTS NAME - ENDING *********/
	inv(INV_ITEM_COL, remain_make_itemid) = (cdata(CDATA_PIC, remain_make_arg2) - cdata(CDATA_CHARA_PIC, remain_make_arg2) * COLOR_TINT_MULT) / COLOR_TINT_MULT
	inv(INV_ITEM_WEIGHT, remain_make_itemid) = cdata(CDATA_WEIGHT, remain_make_arg2) + 1
	if ( inv(INV_ITEM_ID, remain_make_itemid) == ITEM_ID_CORPSE ) {
		inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(inv(INV_ITEM_WEIGHT, remain_make_itemid) / 10 * 500, 500, 50000)
		inv(INV_ITEM_VALUE, remain_make_itemid) = limit((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 20000) / 7, 2700, 10000)
		if (TweakData(TWEAK_GAMEPLAY_DISABLE_HARVEST_MOON_RANCH, TWEAK_CATEGORY_GAMEPLAY) == TRUE) {
			inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(250 * ((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 100) / 100) + 500, 500, 100000)
			inv(INV_ITEM_VALUE, remain_make_itemid) = limit((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 10000) / 10 + 1000, 1000, 12000)
		}
	}
	else {
		if ( inv(INV_ITEM_ID, remain_make_itemid) == ITEM_ID_GOLDEN_DOLL ) {
			inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(inv(INV_ITEM_WEIGHT, remain_make_itemid) / 10 * 500, 5000, 100000)
			inv(INV_ITEM_VALUE, remain_make_itemid) = limit((cdata(CDATA_LEVEL, remain_make_arg2) + 30) * 300, 3000, 90000)
			if (TweakData(TWEAK_GAMEPLAY_DISABLE_HARVEST_MOON_RANCH, TWEAK_CATEGORY_GAMEPLAY) == TRUE) {
				inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(250 * ((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 100) / 100) + 500, 500, 100000)
			}
		}
		else {
			inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(inv(INV_ITEM_WEIGHT, remain_make_itemid) / 10 * 50, 0, 5000)
			if (TweakData(TWEAK_GAMEPLAY_DISABLE_HARVEST_MOON_RANCH, TWEAK_CATEGORY_GAMEPLAY) == TRUE) {
	   	 		inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(20 * ((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 500) / 500), 0, 10000)
	   	 	}
	   	 	inv(INV_ITEM_VALUE, remain_make_itemid) = limit(cdata(CDATA_LEVEL, remain_make_arg2) * 40 + 600, 1, 12000)
		}
		if ( refchara(cdata(CDATA_ID, remain_make_arg2), DBSPEC_CHARA_RARE) < 20 ) {
			if ( cdata(CDATA_RELATION_ORG, remain_make_arg2) < (-1) ) {
				inv(INV_ITEM_VALUE, remain_make_itemid) = inv(INV_ITEM_VALUE, remain_make_itemid) * limit(4 - refchara(cdata(CDATA_ID, remain_make_arg2), DBSPEC_CHARA_RARE) / 5, 1, 5)
			}
		}
	}
	return

#deffunc make_dish int make_dish_arg1, int make_dish_arg2
	inv(INV_ITEM_PIC, make_dish_arg1) = picfood(make_dish_arg2, inv(INV_ITEM_PARAM1, make_dish_arg1) / COLOR_TINT_MULT)
	inv(INV_ITEM_WEIGHT, make_dish_arg1) = 500
	if ( inv(INV_ITEM_MATERIAL, make_dish_arg1) == ITEM_MATERIAL_RAW ) {
		if ( inv(INV_ITEM_ROT, make_dish_arg1) >= 0 ) {
			inv(INV_ITEM_ROT, make_dish_arg1) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + 72
		}
	}
	inv(INV_ITEM_PARAM2, make_dish_arg1) = make_dish_arg2
	return

#deffunc item_stack int item_stack_charid, int item_stack_itemid, int item_stack_mode
	inv_getheader item_stack_charid
	locvar_item_stack_p = 0
	if ( inv(INV_ITEM_QUALITY, item_stack_itemid) == FIX_QUALITY_UNIQUE ) {
		if ( refitem(inv(INV_ITEM_ID, item_stack_itemid), DBSPEC_TYPE) < FILTER_ITEM_MIN ) {
			return locvar_item_stack_p
		}
	}
	repeat invrange, invhead
		if ( cnt == item_stack_itemid ) {
			continue
		}
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			continue
		}
		if ( inv(INV_ITEM_ID, cnt) != inv(INV_ITEM_ID, item_stack_itemid) ) {
			continue
		}
		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_SMALL_MEDAL ) {
			if ( item_stack_charid == (-1) & mode != MODELIST_SHOP ) {
				if ( inv(INV_ITEM_X, cnt) != inv(INV_ITEM_X, item_stack_itemid) | inv(INV_ITEM_Y, cnt) != inv(INV_ITEM_Y, item_stack_itemid) ) {
					continue
				}
			}
			locvar_item_stack_p(2) = 0
			goto *skip_stack
		}
		locvar_item_stack_p(1) = cnt, 0
		repeat INV_ITEM_MAX
			if ( cnt == INV_ITEM_NUM | cnt == INV_ITEM_QUALITY | cnt == INV_ITEM_TURN ) {
				continue
			}
			if ( item_stack_charid != (-1) | mode == MODELIST_SHOP ) {
				if ( cnt == INV_ITEM_X | cnt == INV_ITEM_Y ) {
					continue
				}
			}
			if ( mode != MODELIST_SHOP ) {
				if ( cnt == INV_ITEM_CHARGE ) {
					if ( refitem(inv(INV_ITEM_ID, item_stack_itemid), DBSPEC_TYPE) == FILTER_JUNK | refitem(inv(INV_ITEM_ID, item_stack_itemid), DBSPEC_TYPE) == FILTER_FURNITURE | refitem(inv(INV_ITEM_ID, item_stack_itemid), DBSPEC_TYPE) == FILTER_ITEM_FOOD | refitem(inv(INV_ITEM_ID, item_stack_itemid), DBSPEC_TYPE) == FILTER_ORE ) {
						continue
					}
				}
			}
			if ( istack == 100 ) {
				if ( cnt != INV_ITEM_VALUE & cnt != INV_ITEM_ROT ) {
					if ( inv(cnt, locvar_item_stack_p(1)) != inv(cnt, item_stack_itemid) ) {
						locvar_item_stack_p(2)++
						break
					}
				}
			}
			if ( istack != 100 ) {
				if ( inv(cnt, locvar_item_stack_p(1)) != inv(cnt, item_stack_itemid) ) {
					locvar_item_stack_p(2)++
					break
				}
			}
		loop
		if ( istack == 100 ) {
			if ( locvar_item_stack_p(2) == 0 ) {
				repeat INV_ITEM_MAX
					if ( cnt != INV_ITEM_VALUE & cnt != INV_ITEM_ROT ) {
						continue
					}
					if ( mode == MODELIST_SHOP ) {
						continue
					}
					if ( cnt == INV_ITEM_VALUE ) {
						if ( inv(INV_ITEM_VALUE, item_stack_itemid) > inv(INV_ITEM_VALUE, locvar_item_stack_p(1)) ) {
							inv(INV_ITEM_VALUE, item_stack_itemid) = inv(INV_ITEM_VALUE, locvar_item_stack_p(1))
						}
						else {
							inv(INV_ITEM_VALUE, locvar_item_stack_p(1)) = inv(INV_ITEM_VALUE, item_stack_itemid)
						}
					}
					if ( cnt == INV_ITEM_ROT ) {
						if ( refitem(inv(INV_ITEM_ID, item_stack_itemid), DBSPEC_TYPE) == FILTER_ITEM_FOOD | inv(INV_ITEM_ID, item_stack_itemid) == ITEM_ID_MANUSCRIPT ) {
							if ( inv(INV_ITEM_PARAM3, item_stack_itemid) > inv(INV_ITEM_PARAM3, locvar_item_stack_p(1)) ) {
								inv(INV_ITEM_PARAM3, item_stack_itemid) = inv(INV_ITEM_PARAM3, locvar_item_stack_p(1))
							}
							else {
								inv(INV_ITEM_ROT, locvar_item_stack_p(1)) = inv(INV_ITEM_ROT, item_stack_itemid)
							}
						}
					}
				loop
			}
		}
*skip_stack
		if ( locvar_item_stack_p(2) == 0 ) {
			inv(INV_ITEM_NUM, cnt) += inv(INV_ITEM_NUM, item_stack_itemid)
			inv(INV_ITEM_NUM, item_stack_itemid) = 0
			locvar_item_stack_p = 1
			ti = cnt
			break
		}
	loop
	if ( locvar_item_stack_p == 1 ) {
		if ( mode != MODELIST_SHOP ) {
			if ( inv_getowner(item_stack_itemid) == (-1) ) {
				cell_refresh inv(INV_ITEM_X, item_stack_itemid), inv(INV_ITEM_Y, item_stack_itemid)
			}
		}
		if ( item_stack_mode != 0 ) {
			txtmore
			txt lang(itemname(ti, 1) + "をまとめた(計" + inv(INV_ITEM_NUM, ti) + "個) ", itemname(ti, 1) + " has been stacked. (Total:" + inv(INV_ITEM_NUM, ti) + ")")
		}
	}
	return locvar_item_stack_p

#deffunc colorres int
	color 0, 0, 0
	if ( locvar_colorres_i == SKILL_RES_FIRE ) {
		color 150, 0, 0
	}
	if ( locvar_colorres_i == SKILL_RES_COLD ) {
		color 0, 0, 150
	}
	if ( locvar_colorres_i == SKILL_RES_LIGHTNING ) {
		color 150, 150, 0
	}
	if ( locvar_colorres_i == SKILL_RES_CHAOS ) {
		color 150, 0, 150
	}
	if ( locvar_colorres_i == SKILL_RES_DARKNESS ) {
		color 100, 80, 80
	}
	if ( locvar_colorres_i == SKILL_RES_POISON ) {
		color 0, 150, 0
	}
	if ( locvar_colorres_i == SKILL_RES_MAGIC ) {
		color 150, 100, 100
	}
	if ( locvar_colorres_i == SKILL_RES_SOUND ) {
		color 50, 100, 150
	}
	if ( locvar_colorres_i == SKILL_RES_NERVE ) {
		color 100, 150, 50
	}
	if ( locvar_colorres_i == SKILL_RES_MIND ) {
		color 150, 100, 50
	}
	if ( locvar_colorres_i == SKILL_RES_NETHER ) {
		color 150, 50, 0
	}
	return

/********** MMAH - BEGINNING **********/
#deffunc display_show_resist int display_show_resist_arg1, int display_show_resist_arg2
	if ( display_show_resist_arg1 == 1 ) {
		s = lang("火","Fi"), lang("冷","Co"), lang("雷","Li"), lang("闇","Da"), lang("幻","Mi"), lang("毒","Po"), lang("獄","Nt"), lang("音","So"), lang("神","Nr"), lang("沌","Ch"), lang("魔","Ma")
		pos wx + 320, wy + 40
		color 0, 0, 0
		repeat 11
			pos wx + display_show_resist_arg2 + cnt * 20, wy + 40
			mes s(cnt)
		loop
	}
	if ( display_show_resist_arg1 == 2 ) {
		s = lang("筋","St"), lang("耐","Co"), lang("器","De"), lang("感","Pe"), lang("習","Le"), lang("意","Wi"), lang("魔","Ma"), lang("魅","Ch"), lang("速","Sp"), lang("運","Lu"), lang("盲","Bl"), lang("麻","Pa"), lang("混","Co"), lang("恐","Fe"), lang("睡","Sl"), lang("毒","Po")
		semoji = 10, 15, 11, 13, 14, 8, 9
		color 0, 100, 100
		repeat 10
			pos wx + display_show_resist_arg2 + cnt * 20, wy + 40
			gcopy 3, cnt * 16, 376, 16, 16
		loop
		repeat 7
			pos wx + display_show_resist_arg2 + cnt * 20 + 200, wy + 40
			gcopy 3, 32 + semoji(cnt) * 16, 608, 16, 16
		loop
		// repeat 16
		// 	if ( cnt == 10 ) {
		// 		color 80, 50, 0
		// 	}
		// 	pos wx + display_show_resist_arg2 + cnt * 20, wy + 40
		// 	mes s(cnt)
		// loop
		color 0, 0, 0
	}
	if ( display_show_resist_arg1 == 3 ) {
		pos wx + display_show_resist_arg2, wy + 40
		color 0, 0, 0
		mes lang("修正される技能と能力値", "Modified skills and attributes")
	}
	if ( display_show_resist_arg1 == 4 ) {
		pos wx + display_show_resist_arg2, wy + 40
		color 0, 0, 0
		mes lang("特定のエンチャント", "Special Enchantment")
	}
	return
#deffunc equipinfo_mmah int equipinfo_arg1, int equipinfo_arg2, int equipinfo_arg3
	if ( inv(INV_ITEM_KNOWN, equipinfo_arg1) < ITEM_KNOWN_FULL ) {
		return
	}
	if ( showresist == 1 ) {
		repeat RANGE_INV_ITEM_ENCHANT
			locvar_equipinfo_p = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, equipinfo_arg1)
			if ( locvar_equipinfo_p == 0 ) { break }
			if ( locvar_equipinfo_p / EXT_ENCHANTMENT != ENCHANT_RESISTANCE ) { continue }
			locvar_colorres_i = locvar_equipinfo_p \ 10000
			pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20, equipinfo_arg3
			locvar_equipinfo_p = abs(inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, equipinfo_arg1) / 2 / 50) + 1
			if ( locvar_equipinfo_p > 5 ) {
				locvar_equipinfo_s = "+"
			}
			else {
				locvar_equipinfo_s = "" + locvar_equipinfo_p
			}
			if ( jp ) {
				colorres
				if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, equipinfo_arg1) >= 0 ) {
					mes "●"
				}
				else {
					mes "▼"
				}
				pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 5, equipinfo_arg3 + 1
				color 0, 0, 0
				mes locvar_equipinfo_s
				pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 4, equipinfo_arg3
				color 255, 255, 255
				mes locvar_equipinfo_s
			}
			else {
				colorres
				if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, equipinfo_arg1) >= 0 ) {
					circle equipinfo_arg2 + (locvar_colorres_i - 50) * 20 - 3 * (locvar_equipinfo_p>9), equipinfo_arg3 - 3 * (locvar_equipinfo_p>9), equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 13 + 3 * (locvar_equipinfo_p>9), equipinfo_arg3 + 13 + 3 * (locvar_equipinfo_p>9), 1
				}
				color 0, 0, 0
				pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 4 - 3 * (locvar_equipinfo_p>9), equipinfo_arg3 - 1
				mes "" + locvar_equipinfo_p
				color 255, 255, 255
				if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, equipinfo_arg1) < 0 ) {
					color 180, 0, 0
				}
				pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 3 - 3 * (locvar_equipinfo_p>9), equipinfo_arg3 - 1
				mes "" + locvar_equipinfo_p
			}
		loop
	}
	if ( showresist == 2 ) {
		dim locvar_equipinfo_list, 17
		repeat 15
			locvar_equipinfo_p = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, equipinfo_arg1)
			if ( locvar_equipinfo_p == 0 ) {
				break
			}
			locvar_colorres_i = -1
			if ( locvar_equipinfo_p / 10000 == 6 ) {
				locvar_equipinfo_list(limit(locvar_equipinfo_p \ 10000 - 10, 0, 9)) = 1
			}
			if ( locvar_equipinfo_p >= 23 & locvar_equipinfo_p <= 28 ) {
				locvar_equipinfo_list(limit(locvar_equipinfo_p - 13, 10, 15)) = 1
			}
			if ( locvar_equipinfo_p == 55 ) {
				locvar_equipinfo_list(16) = 1
			}
		loop
		color 0, 100, 100
		repeat 17
			if ( cnt == 10 ) {
				color 80, 50, 0
			}
			if ( locvar_equipinfo_list(cnt) ) {
				if ( jp ) {
					pos equipinfo_arg2 + cnt * 20 + en * 4, equipinfo_arg3
					mes lang("●", "*")
				} else {
					circle equipinfo_arg2 + cnt * 20 + 2, equipinfo_arg3, equipinfo_arg2 + cnt * 20 + 2 + 13, equipinfo_arg3 + 13, 1
				}
			}
			else {
				pos equipinfo_arg2 + cnt * 20 + 4, equipinfo_arg3
				mes "-"
			}
		loop
	}
	if ( showresist == 3 ) {
		locvar_equipinfo_x = equipinfo_arg2
		repeat 15
			locvar_equipinfo_p = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, equipinfo_arg1)
			if ( locvar_equipinfo_p == 0 ) { break }
			locvar_equipinfo_f = locvar_equipinfo_p / 10000
			if ( locvar_equipinfo_f != ENCHANT_ATTRIBUTE & locvar_equipinfo_f != ENCHANT_SKILL & locvar_equipinfo_f != ENCHANT_AMMO ) { continue }
			locvar_colorres_i = locvar_equipinfo_p \ 10000
			if ( locvar_equipinfo_f != ENCHANT_AMMO ) {
				locvar_equipinfo_s = skillname(locvar_colorres_i)
			}
			else {
				locvar_equipinfo_s = ammoname(locvar_colorres_i)
			}
			if ( strlen(locvar_equipinfo_s) > 4 ) {
				if ( jp ) {
					if ( locvar_colorres_i == SKILL_NORMAL_MAGIC_CAPACITY | locvar_colorres_i == SKILL_NORMAL_CONTROL_MAGIC ) {
						locvar_equipinfo_s = strmid(locvar_equipinfo_s, 0, 2) + strmid(locvar_equipinfo_s, 4 + (locvar_colorres_i == 164) * 2, 2)
					}
				} else {
					if ( locvar_colorres_i == SKILL_NORMAL_LITERACY ) { locvar_equipinfo_s = "Read" }
					if ( locvar_colorres_i == SKILL_NORMAL_WEIGHT_LIFTING ) { locvar_equipinfo_s = "Cary" }
					if ( locvar_colorres_i == SKILL_NORMAL_MINING ) { locvar_equipinfo_s = "Mine" }
					if ( locvar_colorres_i == SKILL_NORMAL_MAGIC_CAPACITY ) { locvar_equipinfo_s = "M-Cp" }
					if ( locvar_colorres_i == SKILL_NORMAL_DUAL_WIELD ) { locvar_equipinfo_s = "D-Wd" }
					if ( locvar_colorres_i == SKILL_NORMAL_TWO_HAND ) { locvar_equipinfo_s = "2Hnd" }
					if ( locvar_colorres_i == SKILL_NORMAL_SHIELD ) { locvar_equipinfo_s = "Shld" }
					if ( locvar_colorres_i == SKILL_NORMAL_HEAVY_ARMOR ) { locvar_equipinfo_s = "Hv-A" }
					if ( locvar_colorres_i == SKILL_NORMAL_MEDIUM_ARMOR ) { locvar_equipinfo_s = "Md-A" }
					if ( locvar_colorres_i == SKILL_NORMAL_LIGHT_ARMOR ) { locvar_equipinfo_s = "Li-A" }
					if ( locvar_colorres_i == SKILL_NORMAL_MAGIC_DEVICE ) { locvar_equipinfo_s = "M-Dv" }
					if ( locvar_colorres_i == SKILL_NORMAL_DISARM_TRAP ) { locvar_equipinfo_s = "Trap" }
					if ( locvar_colorres_i == SKILL_NORMAL_EYE_OF_MIND ) { locvar_equipinfo_s = "EoMn" }
					if ( locvar_colorres_i == SKILL_NORMAL_GREATER_EVASION ) { locvar_equipinfo_s = "GEva" }
					if ( locvar_colorres_i == SKILL_NORMAL_CONTROL_MAGIC ) { locvar_equipinfo_s = "Ct-M" }
				}
				if ( strlen(locvar_equipinfo_s) > 4 ) {
					locvar_equipinfo_s = strmid(locvar_equipinfo_s, 0, 4)
				}
			}
			locvar_equipinfo_p = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, equipinfo_arg1)
			if ( locvar_equipinfo_f != 9 ) {
				if ( locvar_equipinfo_f == 1 ) {
					color 0, 0, 100
				}
				else {
					color 0, 100, 0
				}
				if ( locvar_equipinfo_p / 50 + 1 < 0 ) {
					color 180, 0, 0
				}
				locvar_equipinfo_s = locvar_equipinfo_s + ":" + (locvar_equipinfo_p / 50 + 1)
			}
			else {
				locvar_equipinfo_s = locvar_equipinfo_s + ":" + locvar_equipinfo_p \ 1000 + "/" + locvar_equipinfo_p / 1000
				color 80, 50, 0
			}
			pos locvar_equipinfo_x, equipinfo_arg3
			mes locvar_equipinfo_s
			locvar_equipinfo_x += strlen(locvar_equipinfo_s) * 8
		loop
	}
	if ( showresist == 4 ) {
		locvar_equipinfo_x = equipinfo_arg2
		repeat 15
			locvar_equipinfo_p = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, equipinfo_arg1)
			if ( locvar_equipinfo_p == 0 ) { break }
			locvar_equipinfo_pow = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, equipinfo_arg1)
			locvar_equipinfo_f = locvar_equipinfo_p / 10000
			if ( locvar_equipinfo_f == ENCHANT_AMMO | (locvar_equipinfo_f < ENCHANT_ELEMENTAL_DMG & locvar_equipinfo_f != 0) ) { continue }
			locvar_colorres_i = locvar_equipinfo_p \ 10000
			if ( locvar_equipinfo_p >= 23 & locvar_equipinfo_p <= 28 | locvar_equipinfo_p == 55 ) { continue }
			locvar_equipinfo_s = "????"
			color 80, 50, 0
			if ( locvar_equipinfo_f == ENCHANT_ELEMENTAL_DMG & locvar_colorres_i >= 0 & locvar_colorres_i < MAX_SKILL ) { 
				locvar_equipinfo_s = "" + capitalize(skillname(locvar_colorres_i),1) + ""+lang("ダメ","Dmg") + ":" + (locvar_equipinfo_pow / 100 + 1)
				colorres
			}
			if ( locvar_equipinfo_f == ENCHANT_PROC & locvar_colorres_i >= 0 & locvar_colorres_i < MAX_EHCHANTMENT_PROC ) { 
				locvar_equipinfo_s = "[" + capitalize(skillname(encprocref(0, locvar_colorres_i)),1) + "]" + ":" + (locvar_equipinfo_pow / 50 + 1)
			}
			if ( locvar_equipinfo_p == ENCHANT_RANDOM_TELEPORT ) { 
				locvar_equipinfo_s = lang("ランダムなテレポート","RandTeleport") + ":" + (locvar_equipinfo_pow / 50 + 1)
				color 180, 0, 0
			}
			if ( locvar_equipinfo_p == ENCHANT_PREVENT_TELEPORT ) { 
				locvar_equipinfo_s = lang("テレポートを妨害", "NoTeleport") + ":" + (locvar_equipinfo_pow / 50 + 1)
				color 180, 0, 0
			}
			if ( locvar_equipinfo_p == ENCHANT_SUCK_BLOOD ) { 
				locvar_equipinfo_s = lang("血を吸う", "Bloodsucking") + ":" + (locvar_equipinfo_pow / 50 + 1)
				color 180, 0, 0
			}
			if ( locvar_equipinfo_p == ENCHANT_SUCK_MP ) { 
				locvar_equipinfo_s = lang("ＭＰを吸う", "MP-Absorb") + ":" + (locvar_equipinfo_pow / 50 + 1)
				color 180, 0, 0
			}
			if ( locvar_equipinfo_p == ENCHANT_DISTURB_GROWTH ) { 
				locvar_equipinfo_s = lang("成長を妨げる", "EXP-Absorb") + ":" + (locvar_equipinfo_pow / 50 + 1)
				color 180, 0, 0
			}
			if ( locvar_equipinfo_p == ENCHANT_ATTRACT_MONSTER ) { 
				locvar_equipinfo_s = lang("魔物を呼び", "SummonMonster") + ":" + (locvar_equipinfo_pow / 50 + 1)
				color 180, 0, 0
			}
			if ( locvar_equipinfo_p == ENCHANT_ABSORB_MP ) { locvar_equipinfo_s = lang("MPを回復", "HealMP") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_ABSORB_STAMINA ) { locvar_equipinfo_s = lang("スタミナを回復", "HealSP") + ":" + (locvar_equipinfo_pow / 50 + 1) }

			if ( locvar_equipinfo_p == ENCHANT_FLOAT ) { locvar_equipinfo_s = lang("浮遊","Float") }
			if ( locvar_equipinfo_p == ENCHANT_EAT_ROTTEN ) { locvar_equipinfo_s = lang("腐消化", "DigestRot") }
			if ( locvar_equipinfo_p == ENCHANT_FAST_TRAVEL ) { locvar_equipinfo_s = lang("ワールド移動時間","WorldTravel") + ":" + (locvar_equipinfo_pow / 100 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_SEE_INVISIBLE ) { locvar_equipinfo_s = lang("透明見る","SeeInvisible") }
			if ( locvar_equipinfo_p == ENCHANT_RES_CURSE ) { locvar_equipinfo_s = lang("呪い保護","ResCurse") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_RES_STEAL ) { locvar_equipinfo_s = lang("盗無効", "ResSteal") }
			if ( locvar_equipinfo_p == ENCHANT_RES_ETHERWIND ) { locvar_equipinfo_s = lang("エーテル風保護","ResEther") }
			if ( locvar_equipinfo_p == ENCHANT_RES_WEATHER ) { locvar_equipinfo_s = lang("雷雨足止無効","ResWeather") }
			if ( locvar_equipinfo_p == ENCHANT_RES_PREGNANCY ) { locvar_equipinfo_s = lang("異物防ぐ","ResPregnant") }
			if ( locvar_equipinfo_p == ENCHANT_RES_MUTATION ) { locvar_equipinfo_s = lang("変異保護","ResMutation") }
		
			if ( locvar_equipinfo_p == ENCHANT_ENHANCE_SPELL ) { locvar_equipinfo_s = lang("魔法威力","SpellPow+") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_ENHANCE_BREATH ) { locvar_equipinfo_s = lang("放射威力","BreathPow+") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_ROCK_THROWING ) { locvar_equipinfo_s = lang("投石性能","ThrowPow+") }
			if ( locvar_equipinfo_p == ENCHANT_CHARGING ) { locvar_equipinfo_s = lang("チャージ性能","ChargePow+") }

			if ( locvar_equipinfo_p == ENCHANT_FIRE_AND_COLD ) { locvar_equipinfo_s = lang("火炎冷気複合","Fire/Cold-Combine") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_MIND_AND_SOUND ) { locvar_equipinfo_s = lang("幻惑音複合","Mind/Sound-Combine") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_POISON_AND_NERVE ) { locvar_equipinfo_s = lang("毒神経複合","Poison/Nerver-Comine") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_DARKNESS_AND_NETHER ) { locvar_equipinfo_s = lang("暗黒地獄複合","Dark/Nether-Combine") + ":" + (locvar_equipinfo_pow / 50 + 1) }

			if ( locvar_equipinfo_p == ENCHANT_REMOTE_BLOW ) { locvar_equipinfo_s = lang("遠隔打撃","DistantAttack") }
			if ( locvar_equipinfo_p == ENCHANT_PIERCING_CHANCE ) { locvar_equipinfo_s = lang("完全貫通","Pierce") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_CRIT_CHANCE ) { locvar_equipinfo_s = lang("クリティカル","Critical") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_EXTRA_MELEE ) { locvar_equipinfo_s = lang("追加打撃","ExtraMelee") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_EXTRA_RANGED ) { locvar_equipinfo_s = lang("追加射撃","ExtraShot") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_SHOOTING_MECHANISM ) { locvar_equipinfo_s = lang("連動射撃","InterlockShot") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_PROXIMITY_ASSIST ) { locvar_equipinfo_s = lang("近接補助","ProximityAttack") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_TIME_STOP ) { locvar_equipinfo_s = lang("時を止める","StopTime") + ":" + (locvar_equipinfo_pow / 100 + 1) }

			if ( locvar_equipinfo_p == ENCHANT_REFLECT_DAMAGE ) { locvar_equipinfo_s = lang("切り傷","CutReflect") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_REFLECT_MAGIC ) { locvar_equipinfo_s = lang("魔法反射","MagicReflect") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_QUICK_SHOOTING ) { locvar_equipinfo_s = lang("早撃","ShotReflect") }
			if ( locvar_equipinfo_p == ENCHANT_DEC_ENEMY_CRIT_CHANCE ) { locvar_equipinfo_s = lang("クリティカル受ける","CritiGuard") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_RES_PHYSICAL ) { locvar_equipinfo_s = lang("物理ダメージ軽減","PhysicalRes") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_IMMUNE_DAMAGE ) { locvar_equipinfo_s = lang("ダメージ無効","DmgImmune") + ":" + (locvar_equipinfo_pow / 50 + 1) }

			if ( locvar_equipinfo_p == ENCHANT_BANE_DRAGON ) { locvar_equipinfo_s = lang("竜族殺し","Dragonkiller") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_BANE_UNDEAD ) { locvar_equipinfo_s = lang("不死殺し","Undeadkiller") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_BANE_FLYING ) { locvar_equipinfo_s = lang("空敵殺し","Birdkiller") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_BANE_GOD ) { locvar_equipinfo_s = lang("神殺し","Godkiller") + ":" + (locvar_equipinfo_pow / 50 + 1) }
			if ( locvar_equipinfo_p == ENCHANT_BANE_METAL ) { locvar_equipinfo_s = lang("金属殺し","MetalKiller") + ":" + (locvar_equipinfo_pow / 50 + 1) }

			if ( locvar_equipinfo_p == ENCHANT_SHOW_RELIGION ) { locvar_equipinfo_s = lang("信仰を明らか","Reveal Religion") }
			if ( locvar_equipinfo_p == ENCHANT_GOD_SIGNALS ) { locvar_equipinfo_s = lang("神電波","Radiowave") }

			if ( locvar_equipinfo_p == ENCHANT_RAGNAROK ) { locvar_equipinfo_s = lang("終結","Ragnarok") }
			if ( locvar_equipinfo_p == ENCHANT_MANA_TO_ATTACK ) { locvar_equipinfo_s = lang("マナを攻撃力に変える","ManaOvercharge") }
			if ( locvar_equipinfo_p == ENCHANT_REWARD_QUALITY ) { locvar_equipinfo_s = lang("演奏報酬","PerformReward+") }
			if ( locvar_equipinfo_p == ENCHANT_KALPA_HAND ) { locvar_equipinfo_s = lang("時を纏っている","Clock-Up") }
			if ( locvar_equipinfo_p == ENCHANT_DRUNK_LISTENER ) { locvar_equipinfo_s = lang("音色酔わす","BoozeMelody") }
			pos locvar_equipinfo_x, equipinfo_arg3
			mes locvar_equipinfo_s
			locvar_equipinfo_x += strlen(locvar_equipinfo_s) * 8
		loop
	}
	return
/********** MMAH - ENDING **********/

#deffunc equipinfo int equipinfo_arg1, int equipinfo_arg2, int equipinfo_arg3
	if ( inv(INV_ITEM_KNOWN, equipinfo_arg1) < ITEM_KNOWN_FULL ) {
		return
	}
	repeat RANGE_INV_ITEM_ENCHANT
		locvar_equipinfo_p = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, equipinfo_arg1)
		if ( locvar_equipinfo_p == 0 ) {
			break
		}
		locvar_colorres_i = locvar_equipinfo_p / EXT_ENCHANTMENT
		if ( locvar_colorres_i != 2 ) {
			continue
		}
		locvar_colorres_i = locvar_equipinfo_p \ EXT_ENCHANTMENT
		pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20, equipinfo_arg3
		locvar_equipinfo_p = abs(inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, equipinfo_arg1) / 2 / 50) + 1
		if ( locvar_equipinfo_p > 5 ) {
			locvar_equipinfo_s = "+"
		}
		else {
			locvar_equipinfo_s = "" + locvar_equipinfo_p
		}
		if ( jp ) {
			colorres
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, equipinfo_arg1) >= 0 ) {
				mes "●"
			}
			else {
				mes "▼"
			}
			pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 5, equipinfo_arg3 + 1
			color 0, 0, 0
			mes locvar_equipinfo_s
			pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 4, equipinfo_arg3
			color 255, 255, 255
			mes locvar_equipinfo_s
		}
		else {
			color 80, 60, 40
			pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 5, equipinfo_arg3
			mes "" + locvar_equipinfo_p
			colorres
			pos equipinfo_arg2 + (locvar_colorres_i - 50) * 20 + 4, equipinfo_arg3
			mes "" + locvar_equipinfo_p
		}
	loop
	return

/********** JAMES CUSTOM - BEGINNING *********/
#deffunc necromancyParam2Fix int necromancy_ci
	if ( inv(INV_ITEM_PARAM2, necromancy_ci) == ITEM_ID_BONE ) {
		inv(INV_ITEM_PARAM2, necromancy_ci) = 0
	}
	if ( inv(INV_ITEM_PARAM2, necromancy_ci) == ITEM_ID_HEART ) {
		inv(INV_ITEM_PARAM2, necromancy_ci) = 0
	}
	if ( inv(INV_ITEM_PARAM2, necromancy_ci) == ITEM_ID_EYE ) {
		inv(INV_ITEM_PARAM2, necromancy_ci) = 0
	}
	if ( inv(INV_ITEM_PARAM2, necromancy_ci) == ITEM_ID_BLOOD ) {
		inv(INV_ITEM_PARAM2, necromancy_ci) = 0
	}
	if ( inv(INV_ITEM_PARAM2, necromancy_ci) == ITEM_ID_SKIN ) {
		inv(INV_ITEM_PARAM2, necromancy_ci) = 0
	}
	if ( inv(INV_ITEM_PARAM2, necromancy_ci) >= 18000 ) {
		inv(INV_ITEM_PARAM2, necromancy_ci) = 0
	}
	return

#defcfunc necromancyHaveDDCemeteryKey
	item_find ITEM_ID_DD_CEMETERY_KEY, 3, 1
	if ( stat != (-1) ) {
		ci = stat
		if ( inv(INV_ITEM_NUM, ci) >= 1 ) {
			return TRUE
		}
	}
	return FALSE

#deffunc necromancyZombieToCoffin int necromancy_rc, str necromancy_returnmode
	if ( charaIsNecromancyZombie(necromancy_rc) != TRUE ) {
		return
	}
	necromancy_return_index = -1 // -1 on the invbuffer(ground/ddcemetery), 0 in player inventory
	necromancy_return_locx = cdata(CDATA_X, necromancy_rc)
	necromancy_return_locy = cdata(CDATA_Y, necromancy_rc)
	necromancy_return_count = 0
	necromancy_return_charge = 6666
	if ( necromancy_returnmode == "push" ) {
		txt lang(name(necromancy_rc) + "を棺に戻した。", "You push " + name(necromancy_rc) + " back into the coffin.")
		necromancy_return_charge = 1
	}
	if ( necromancy_returnmode == "killed" ) {
		txt lang(name(necromancy_rc) + "を棺に戻した。", "You push " + name(necromancy_rc) + " back into the coffin.")
		necromancy_return_charge = 24
	}
	if ( necromancy_returnmode == "fusion" ) { // Necro-fusion, basically killed and put under player's foot
		necromancy_return_locx = cdata(CDATA_X, CHARA_PLAYER)
		necromancy_return_locy = cdata(CDATA_Y, CHARA_PLAYER)
		necromancy_return_charge = 24
	}
	if ( necromancy_returnmode == "fail" ) { // Used when no valid space on the map, shove in player inv.
		necromancy_return_index = 0
		necromancy_return_charge = 0
	}
	if ( necromancy_returnmode == "inventory" ) { // Normal DD cemetery transfer, shove in player inventory.
		necromancy_return_index = 0
	}
	necromancy_usekey = (necromancy_returnmode == "DDCemetery") | (necromancy_returnmode != "inventory" & necromancyHaveDDCemeteryKey() & TweakData(TWEAK_CONVENIENCE_NECROMANCY_DD_AUTOSTORE, TWEAK_CATEGORY_CONVENIENCE) > 0)
	if ( necromancy_usekey ) { // Used when player inventory full, placed in DDCemetery.
		necromancy_return_index = -1
		necromancy_return_count = 1
		file = "shoptmp.s2"
		fmode = 4
		gosub *game_ctrlFile
		invfile = ITEM_ROLE_FILE_DD_CEMETERY_KEY
		file = "shop" + ITEM_ROLE_FILE_DD_CEMETERY_KEY + ".s2"
		existwrapper exedir + "tmp\\" + file
		if ( strsize != (-1) ) {
			fmode = 3
			gosub *game_ctrlFile
		}
		else {
			inv_getheader -1
			repeat invrange, invhead
				inv(INV_ITEM_NUM, cnt) = 0
			loop
		}
		mode = MODELIST_SHOP
	}
	necrop = 0
	if ( cdata(CDATA_ID, necromancy_rc) == CREATURE_ID_CAT_ZOMBIE ) {
		necrop = 2
	}
	if ( cdata(CDATA_ID, necromancy_rc) == CREATURE_ID_ZOMBIE ) {
		necrop = 3
	}
	if ( cdata(CDATA_ID, necromancy_rc) == CREATURE_ID_MUMMY ) {
		necrop = 4
	}
	if ( cdata(CDATA_ID, necromancy_rc) == CREATURE_ID_SKELETON_WARRIOR ) {
		necrop = 5
	}
	if ( cdata(CDATA_ID, necromancy_rc) == CREATURE_ID_LICH ) {
		necrop = 6
	}
	if ( cdata(CDATA_ID, necromancy_rc) == CREATURE_ID_NECRO_DOLL ) {
		necrop = 7
	}
	if ( cdata(CDATA_ID, necromancy_rc) == CREATURE_ID_DRAGON_ZOMBIE ) {
		necrop = 8
	}
	if ( cdata(CDATA_ID, necromancy_rc) == CREATURE_ID_DEAD_EYES_BLOOD_DRAGON ) {
		necrop = 9
	}
	necrop2 = cdata(CDATA_FORM_SHIFT_PIC, necromancy_rc)
	necrop3 = cdata(CDATA_CHARA_PIC, necromancy_rc)
	// dialog "necrop:" + necrop + "\ncdata(CDATA_ID, necromancy_rc):" + cdata(CDATA_ID, necromancy_rc) + "\nnecrop2:" + necrop2 + "\nnecrop3:" + necrop3  + "\nnecrolv:" + necrolv
	flt
	itemcreate necromancy_return_index, ITEM_ID_COFFIN_OF_NECROMANCY, necromancy_return_locx, necromancy_return_locy, necromancy_return_count
	inv(INV_ITEM_PARAM1, ci) = necrop
	inv(INV_ITEM_PARAM2, ci) = necrop2
	inv(INV_ITEM_CHARA_PIC, ci) = necrop3
	inv(INV_ITEM_WEIGHT, ci) += necrop * 1000
	inv(INV_ITEM_CHARGE, ci) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + inv(INV_ITEM_PARAM3, ci) * necromancy_return_charge
	if ( necromancy_return_charge == 6666 ) { 
		inv(INV_ITEM_CHARGE, ci) = 6666
	}
	inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_NORMAL
	inv(INV_ITEM_KNOWN, ci) = ITEM_KNOWN_NECRO
	necromancyParam2Fix ci
	if ( necromancy_usekey ) {
		invfile = ITEM_ROLE_FILE_DD_CEMETERY_KEY
		file = "shop" + ITEM_ROLE_FILE_DD_CEMETERY_KEY + ".s2"
		fmode = 4
		gosub *game_ctrlFile
		file = "shoptmp.s2"
		fmode = 3
		gosub *game_ctrlFile
		mode = MODELIST_MAIN
	}
	// dialog "Necro to Coffin: " + necromancy_returnmode + "\nrc:" + necromancy_rc + "\nci:" + ci
	chara_vanquish necromancy_rc
	return

#deffunc necromancyCoffinToZombie int necromancy_ci, str necromancy_returnmode
	if ( get_freeallysum() > 15 ) {
		return
	}
	necromancyParam2Fix necromancy_ci
	p = CREATURE_ID_CAT_ZOMBIE
	if ( inv(INV_ITEM_PARAM1, necromancy_ci) == 3 ) {
		p = CREATURE_ID_ZOMBIE
	}
	if ( inv(INV_ITEM_PARAM1, necromancy_ci) == 4 ) {
		p = CREATURE_ID_MUMMY
	}
	if ( inv(INV_ITEM_PARAM1, necromancy_ci) == 5 ) {
		p = CREATURE_ID_SKELETON_WARRIOR
	}
	if ( inv(INV_ITEM_PARAM1, necromancy_ci) == 6 ) {
		p = CREATURE_ID_LICH
	}
	if ( inv(INV_ITEM_PARAM1, necromancy_ci) == 7 ) {
		p = CREATURE_ID_NECRO_DOLL
	}
	if ( inv(INV_ITEM_PARAM1, necromancy_ci) == 8 ) {
		p = CREATURE_ID_DRAGON_ZOMBIE
	}
	if ( inv(INV_ITEM_PARAM1, necromancy_ci) == 9 ) {
		p = CREATURE_ID_DEAD_EYES_BLOOD_DRAGON
	}
	necropp = p
	necrop2 = inv(INV_ITEM_PARAM2, necromancy_ci)
	necrop3 = (inv(INV_ITEM_CHARA_PIC, necromancy_ci) == 1)
	necrolv = (sdata(SKILL_NORMAL_ANATOMY, CHARA_PLAYER) + sdata(SKILL_NORMAL_ALCHEMY, CHARA_PLAYER)) * (inv(INV_ITEM_PARAM1, necromancy_ci) + 5) / 14
	if ( necrolv > gdata(GDATA_DEEPEST_LEVEL) * 3 / 2 ) {
		necrolv = gdata(GDATA_DEEPEST_LEVEL) * 3 / 2
	}
	if ( inv(INV_ITEM_PARAM2, necromancy_ci) != 0 ) {
		necrolv += 5
	}
	// dialog "necropp:" + necropp + "\ninv(INV_ITEM_PARAM2, necromancy_ci):" + inv(INV_ITEM_PARAM2, necromancy_ci) + "\nnecrop2:" + necrop2 + "\nnecrop3:" + necrop3  + "\nnecrolv:" + necrolv
	inv(INV_ITEM_NUM, necromancy_ci)--
	hitugi = 100
	placefail = 0
	flt
	initlv = necrolv
	novoidlv = 1
	fixlv = FIX_QUALITY_GOOD
	characreate -1, p, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
	cdata(CDATA_ID, rc) = necropp
	cdata(CDATA_FORM_SHIFT_PIC, rc) = necrop2
	if ( necrop3 == 0 ) {
		if ( necrop2 >= 1800 ) {
			cdata(CDATA_PIC, rc) = necrop2
		}
		if ( necrop2 >= 12000 & necrop2 < 18000 ) {
			cdata(CDATA_PIC, rc) = necrop2 - 12000
		}
	}
	else {
		if ( necrop2 >= 2800 ) {
			cdata(CDATA_PIC, rc) = necrop2
			cdata(CDATA_CHARA_PIC, rc) = xy2pic(1, 0)
		}
		if ( necrop2 > 13000 & necrop2 < 19000 ) {
			cdata(CDATA_PIC, rc) = necrop2 - 13000
			cdata(CDATA_CHARA_PIC, rc) = xy2pic(1, 0)
		}
	}
	cdata(CDATA_RELATION, rc) = RELATION_ALLY
	cdata(CDATA_RELATION_ORG, rc) = RELATION_ALLY
	cbitmod CHARA_BIT_NECRO, rc, 1
	cdatan(CDATAN_NAME, rc) += " Lv" + cdata(CDATA_LEVEL, rc)
	// dialog "Coffin to Necro: " + necromancy_returnmode + "\nrc:" + rc + "\nci:" + necromancy_ci  + "\ncdata(CDATA_X,rc):" + cdata(CDATA_X,rc) + "\ncdata(CDATA_Y,rc):" + cdata(CDATA_Y,rc) + "\ncdata(CDATA_EXIST, rc):" + cdata(CDATA_EXIST, rc) 
	hitugi = 0
	if ( cdata(CDATA_EXIST, rc) == CHAR_STATE_DEAD ) {
		necromancyZombieToCoffin rc, "fail"
		return
	}
	if ( necromancy_returnmode == "coffin" ) {
		snd SOUNDLIST_CURSE3
		txt lang("闇と共に棺からアンデッドが這いずり出てきた。", "An undead monster creeps out from the coffin.")
		if ( spact(SKILL_SPACT_NECRO_FORCE - STARTING_SKILL_SPACT) == 0 ) {
			spact(SKILL_SPACT_NECRO_FORCE - STARTING_SKILL_SPACT) = 1
			txtmore
			txtef COLOR_YELLOW
			txt lang("あなたは「" + skillname(SKILL_SPACT_NECRO_FORCE) + "」の能力を得た。", "You have learned a new ability, " + skillname(SKILL_SPACT_NECRO_FORCE) + ".")
		}
	}
	return
/********** JAMES CUSTOM - ENDING **********/
