#define MAX_DAMAGE_PARSES 400

*DamageParsesInit
    DmgParsesNext = 0
    DmgParsesMax = 0
    dim DmgParses, 5, MAX_DAMAGE_PARSES
    dim DmgParsesResult, MAX_CHARA_FOLLOWER
    dim DmgParsesOrder, MAX_CHARA_FOLLOWER
    sdim DmgParsesClass, 20, 12
    dim DmgParsesClassColor, 3, 12
    p@DP = 0
    DmgParsesClass(p@DP) = "warrior"
    DmgParsesClassColor(0, p@DP) = 199, 156, 110
    p@DP++
    DmgParsesClass(p@DP) = "thief"
    DmgParsesClassColor(0, p@DP) = 255, 245, 105
    p@DP++
    DmgParsesClass(p@DP) = "wizard"
    DmgParsesClassColor(0, p@DP) = 105, 204, 240
    p@DP++
    DmgParsesClass(p@DP) = "farmer"
    DmgParsesClassColor(0, p@DP) = 0,   255, 150
    p@DP++
    DmgParsesClass(p@DP) = "predator"
    DmgParsesClassColor(0, p@DP) = 255, 125, 10
    p@DP++
    DmgParsesClass(p@DP) = "archer"
    DmgParsesClassColor(0, p@DP) = 171, 212, 115
    p@DP++
    DmgParsesClass(p@DP) = "warmage"
    DmgParsesClassColor(0, p@DP) = 163, 48,  201
    p@DP++
    DmgParsesClass(p@DP) = "tourist"
    DmgParsesClassColor(0, p@DP) = 208, 208, 208
    p@DP++
    DmgParsesClass(p@DP) = "pianist"
    DmgParsesClassColor(0, p@DP) = 245, 140, 186
    p@DP++
    DmgParsesClass(p@DP) = "gunner"
    DmgParsesClassColor(0, p@DP) = 196, 31,  59
    p@DP++
    DmgParsesClass(p@DP) = "priest"
    DmgParsesClassColor(0, p@DP) = 0,   112, 222
    p@DP++
    DmgParsesClass(p@DP) = "claymore"
    DmgParsesClassColor(0, p@DP) = 255, 255, 255
    return

#deffunc DamageParsesReset
    DmgParsesNext = 0
    DmgParsesMax = 0
    dim DmgParses, 5, MAX_DAMAGE_PARSES
    dim DmgParsesResult, MAX_CHARA_FOLLOWER
    dim DmgParsesOrder, MAX_CHARA_FOLLOWER
    return

#deffunc DamageParseGetClassColor int dmg_parses_gcc_cc
    color 77,  216, 39
    if ( dmg_parses_gcc_cc < 0 | dmg_parses_gcc_cc >= MAX_CHARA_TOTAL ) { return }
    repeat 12
        if ( cdatan(CDATAN_CLASS, dmg_parses_gcc_cc) == DmgParsesClass(cnt) ) {
            color DmgParsesClassColor(0, cnt), DmgParsesClassColor(1, cnt), DmgParsesClassColor(2, cnt)
        }
    loop
    return

#deffunc DamageParsesAdd int dmg_parses_add_cc, int dmg_parses_add_tc, int dmg_parses_add_amount, int dmg_parses_add_type
    if ( dmg_parses_add_cc < 0 | dmg_parses_add_cc >= MAX_CHARA_TOTAL | dmg_parses_add_amount < 0 ) { 
        return 
    }
    p@DP = dmg_parses_add_amount
    if ( cbit(CHARA_BIT_SANDBAG, dmg_parses_add_tc) != 0 ) { 
        p@DP = limitmax(p@DP, cdata(CDATA_HP, dmg_parses_add_tc))
    }
    DmgParses(0, DmgParsesNext) = gdata(GDATA_TURN), dmg_parses_add_cc, dmg_parses_add_tc, p@DP, dmg_parses_add_type
    DmgParsesNext = (DmgParsesNext + 1) \ length2(DmgParses)
    return

#deffunc DamageParsesRefresh
    DmgParsesMax = 0
    repeat MAX_CHARA_TOTAL
        DmgParsesResult(cnt) = 0
        DmgParsesOrder(cnt) = cnt
    loop

    repeat MAX_DAMAGE_PARSES
        cnt2 = (MAX_DAMAGE_PARSES  * 2 - cnt + DmgParsesNext - 1) \ MAX_DAMAGE_PARSES
        if ( DmgParses(0, cnt2) < gdata(GDATA_TURN) - cfg_showDamageMeterTurns ) {
            break
        }
        if ( ( DmgParses(1, cnt2) >= MAX_CHARA_FOLLOWER & cdata(CDATA_RELATION, DmgParses(1, cnt2)) != 10 ) | DmgParses(1, cnt2) < 0 ) {
            continue
        }
        DmgParsesResult(DmgParses(1, cnt2)) += DmgParses(3, cnt2)
    loop

    repeat MAX_CHARA_TOTAL
        if ( DmgParsesMax < DmgParsesResult(cnt) ) {
            DmgParsesMax = DmgParsesResult(cnt)
        }
    loop

    repeat MAX_CHARA_TOTAL - 1
        repeat MAX_CHARA_TOTAL - 1 - cnt
            if ( DmgParsesResult(DmgParsesOrder(cnt)) < DmgParsesResult(DmgParsesOrder(cnt + 1)) ) {
                p@DP = DmgParsesOrder(cnt)
                DmgParsesOrder(cnt) = DmgParsesOrder(cnt + 1)
                DmgParsesOrder(cnt + 1) = p@DP
            }
        loop
    loop
    return

*DamageParsesDraw
    if ( DmgParsesMax <= 0 | cfg_showDamageMeter <= 0 ) { 
        return 
    }
    xshiftmove@DP = limit(xshift@DP+130,-200,0)
    repeat cfg_showDamageMeter
        if ( DmgParsesResult(DmgParsesOrder(cnt)) <= 0 ) {
            break
        }

        // Draw Pet Name, xshift@DP is the UI shift when player is on the left side of the map.
        s = "" + (cnt + 1) + "." + cdatan(CDATAN_NAME, DmgParsesOrder(cnt))
        s = strmid(s, 0, 20 + limit(xshift@DP*2/inf_mesfont,-15,0))
		pos 16 + xshiftmove@DP, inf_clocky + 105 + ap3 * 16 + ap@DP * (24 + jp * 4) + 2
		color 0, 0, 
        bmes s, 255, 255, 255

        // Draw the bar
        DmgParseX = (140 + limit(xshift@DP,-96,0)) * DmgParsesResult(DmgParsesOrder(cnt)) / DmgParsesMax
        DmgParseY = inf_clocky + 105 + ap3 * 16 + ap@DP * (24 + jp * 4) + 16
        color 0, 0, 0
        boxf 15 + xshiftmove@DP, DmgParseY - 1, DmgParseX + 17 + xshiftmove@DP, DmgParseY + 9 + jp * 2
        DamageParseGetClassColor DmgParsesOrder(cnt)
        boxf 16 + xshiftmove@DP, DmgParseY, DmgParseX + 16 + xshiftmove@DP, DmgParseY + 8 + jp * 2

        // Draw the damage counter
        pos 16 + xshiftmove@DP + 1 + jp, inf_clocky + 105 + ap3 * 16 + ap@DP * (24 + jp * 4) + 14 + jp * 2
		color 0, 0, 0
		bmes "" + DmgParsesResult(DmgParsesOrder(cnt)), 255, 255, 255
		ap@DP++
        
    loop
    return